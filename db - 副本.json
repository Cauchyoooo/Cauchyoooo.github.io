{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/favic.png","path":"img/favic.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/logo.png","path":"img/logo.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/wechat.jpg","path":"img/wechat.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"f1659debc806343287c0c70166dfc6ef6bfe5440","modified":1684474081094},{"_id":"source/_posts/2022/Homework1/1.jpg","hash":"25a6e76b74aacb8daec2b090eff58a655f3d4474","modified":1684398067806},{"_id":"source/_posts/2022/Homework1/Homework1.md","hash":"17266f346723a2678766517f60929617c01be466","modified":1684486892619},{"_id":"source/_posts/2023/Homework8/1color.png","hash":"19f436b74e010885fad67209ea6e045ea2aff480","modified":1684398067659},{"_id":"source/_posts/2023/Homework8/1emission.png","hash":"3e120ea4dad4946f1344d8c4034fcf7abac0c877","modified":1684398067660},{"_id":"source/_posts/2023/Homework8/1pshape.png","hash":"e6bb67161138da77bed6e2a91ada601592784dae","modified":1684398067660},{"_id":"source/_posts/2023/Homework8/1main.png","hash":"b5d60e5e7e2b30d147a2eab92622c70e92c7b603","modified":1684398067660},{"_id":"source/_posts/2023/Homework8/1shape.png","hash":"3a704fed6447aacdba51dc137709d7315a24a95f","modified":1684398067661},{"_id":"source/_posts/2023/Homework8/1ss.png","hash":"ae4ec87d8c637f1ff122078230a25d70dece4e53","modified":1684398067661},{"_id":"source/_posts/2023/Homework8/1transform.png","hash":"b623516af52bae6dd4467c229413bcba864ebfd5","modified":1684398067662},{"_id":"source/_posts/2023/Homework8/2emission.png","hash":"525fc941327ea0ac45bbcd4c244fc74d5ca93d58","modified":1684398067663},{"_id":"source/_posts/2023/Homework8/2color.png","hash":"6610fc3853b0a404b60f7fa075dac115b4131a3c","modified":1684398067662},{"_id":"source/_posts/2023/Homework8/2shape.png","hash":"fb119ec56b39d379471083fe7a94f721e8985303","modified":1684398067664},{"_id":"source/_posts/2023/Homework8/2size.png","hash":"a7f126f6ec2b01198611ffb1f833f997cafec306","modified":1684398067665},{"_id":"source/_posts/2023/Homework8/2main.png","hash":"aeb2ab11700667a1984416ad64244225f597515c","modified":1684398067663},{"_id":"source/_posts/2023/Homework8/2velocity.png","hash":"66896f39f474d93487e62a9b0ea284abf3352671","modified":1684398067665},{"_id":"source/_posts/2023/Homework8/2transform.png","hash":"28d8d3df7a522f608fb1dcef290aaff06dcab724","modified":1684398067665},{"_id":"source/_posts/2023/Homework8/3collision.png","hash":"4d653969ab31ce20eda9b81dfd5ced7011a6ba39","modified":1684398067666},{"_id":"source/_posts/2023/Homework8/3shape.png","hash":"9aadeea3216635ce0315d3fe6c9baf12b25009a0","modified":1684398067667},{"_id":"source/_posts/2023/Homework8/3emission.png","hash":"45aa568073a328c1f944aa603f6ea4313977d6c8","modified":1684398067666},{"_id":"source/_posts/2023/Homework8/3size.png","hash":"3a9491a248e2d301a342ac00f704e2fbb9c7f3c8","modified":1684398067668},{"_id":"source/_posts/2023/Homework8/3main.png","hash":"784f6838d1f329e0409c78be35f641f784fb0887","modified":1684398067667},{"_id":"source/_posts/2023/Homework8/3sub.png","hash":"57656c682b6dc1f8d16c9e8dedd599ea9af47473","modified":1684398067668},{"_id":"source/_posts/2023/Homework8/3transform.png","hash":"d1be9f92dde63d09df205a518e22cb78a8498677","modified":1684398067669},{"_id":"source/_posts/2023/Homework8/3trail.png","hash":"1d5a6a82e0016904506285001d0a749006625ca0","modified":1684398067669},{"_id":"source/_posts/2023/Homework8/4collision.png","hash":"67e2e18c213ce5c669b6037a8f7047801c0a9dd3","modified":1684398067670},{"_id":"source/_posts/2023/Homework8/4emission.png","hash":"827d1c85dcdc5c10ed8f002ee4bc44d0772c40ed","modified":1684398067671},{"_id":"source/_posts/2023/Homework8/4color.png","hash":"f7f077bcf1753b87d89c22e6151f59f41fd71b6d","modified":1684398067670},{"_id":"source/_posts/2023/Homework8/4noise.png","hash":"6356942a3c53773841387c318518b7118ddf44d2","modified":1684398067672},{"_id":"source/_posts/2023/Homework8/4main.png","hash":"e87ce620421a93f9cfa2c1b0cc6ac2f423299c8f","modified":1684398067671},{"_id":"source/_posts/2023/Homework8/4size.png","hash":"02dcac8f182fd19738a63283c82bc4c592edcbd3","modified":1684398067673},{"_id":"source/_posts/2023/Homework8/4shape.png","hash":"f23cc696f5254512f2b465ada86ad1a98f53c453","modified":1684398067672},{"_id":"source/_posts/2023/Homework8/4transform.png","hash":"c8c99648906e79af687a1502dbb8a50a9d2a9733","modified":1684398067673},{"_id":"source/_posts/2023/Homework8/Homework8.md","hash":"1fcbf4aa3d2359612192344007417070647675c9","modified":1684479935995},{"_id":"source/_posts/2023/Homework8/5main.png","hash":"9ba87d9b100b45d2c5820ca05b37e507d72356aa","modified":1684398067674},{"_id":"source/_posts/2023/Homework8/btrail.png","hash":"9db1015dda28214d00e2890df8f5be4d178e9893","modified":1684398067680},{"_id":"source/_posts/2023/Homework8/circle.png","hash":"20050ce0293e6db7113839029d70da7948865eeb","modified":1684398067680},{"_id":"source/_posts/2023/Homework8/curve.png","hash":"7027a7a4b2a0c676071e86267cb26194ac3d08db","modified":1684398067685},{"_id":"source/_posts/2023/Homework8/emission.png","hash":"d2e39777df8d62863a26ec6efbca6b21341dcabc","modified":1684398067689},{"_id":"source/_posts/2023/Homework8/down.png","hash":"837cd6500c9da605937e0d12ac66646e2673c6eb","modified":1684398067688},{"_id":"source/_posts/2023/Homework8/gradient.png","hash":"89f61d61c18b9d31edcf1071348f5350c0896dcc","modified":1684398067689},{"_id":"source/_posts/2023/Homework8/main.png","hash":"200253ef09d09694e3899bdeb154b3214edfdc25","modified":1684398067690},{"_id":"source/_posts/2023/Homework8/shape.png","hash":"10d7609e2323f65cfa1dc8194eee2ba8d6672c55","modified":1684398067691},{"_id":"source/_posts/2023/Homework8/win.png","hash":"e8926c6ad629a71130cea3aad65e1d12b2378663","modified":1684398067803},{"_id":"source/_posts/2023/Homework8/trail.png","hash":"b3869599e18c71a236713a54886c1c038a37b089","modified":1684398067801},{"_id":"source/_posts/2022/Homework3/1.jpg","hash":"d86cf3340198931a379f0e4c8e6a64ffa9be4ce8","modified":1684398067906},{"_id":"source/_posts/2022/Homework3/Homework3.md","hash":"670dd6f044fe824a9a66b02b81cf8083e3328e14","modified":1684479921915},{"_id":"source/_posts/2022/Homework3/cover.jpg","hash":"36faf8363199d5ad8b5646d8d840c53e6ec2c2c6","modified":1684398067971},{"_id":"source/_posts/2022/Homework2/02.jpg","hash":"7af1515d3b33b4d0bbda9d201944b951ccea65ed","modified":1684398067817},{"_id":"source/_posts/2022/Homework2/06.jpg","hash":"9a9543fba670d990d4a45b1d38e6f6aa42937269","modified":1684398067820},{"_id":"source/_posts/2022/Homework2/05.jpg","hash":"29bfa97583c2bfb318576ab5aaceeffad8999996","modified":1684398067820},{"_id":"source/_posts/2022/Homework2/04.jpg","hash":"6704601c0003c278d53851afd51c9db5832dfa54","modified":1684398067819},{"_id":"source/_posts/2022/Homework2/10.jpg","hash":"460a89375b79edb88bde85fa6ee655608c3cb2f0","modified":1684398067823},{"_id":"source/_posts/2022/Homework2/Homework2.md","hash":"e131fed317040a3595da1c808d65cf0470c32ac3","modified":1684487159398},{"_id":"source/_posts/2022/Homework2/11.jpg","hash":"6574a4ee0d85f037ac854cc2d134710e3d79ce0e","modified":1684398067824},{"_id":"source/_posts/2022/Homework2/12.jpg","hash":"d879f78327d6b35dc481ba49d203dccfbeab9935","modified":1684398067824},{"_id":"source/_posts/2022/Homework5/03.png","hash":"ffb3406c612cfbe425585e3e6bb098c83c658368","modified":1684398068080},{"_id":"source/_posts/2022/Homework5/Homework5.md","hash":"cc15f76a5218bd52d7eb1a19f97deb4ae5d5e2d5","modified":1684479930680},{"_id":"source/_posts/2022/Homework4/Homework4.md","hash":"8c323137654326508179ba905ede5dce3440c0e5","modified":1684479926740},{"_id":"source/_posts/2022/Homework4/Camera.jpg","hash":"e6eed04b1918a254e1320583a08bc75ab9901472","modified":1684398068013},{"_id":"source/_posts/2022/Homework4/Light.jpg","hash":"961de14a87324f8026114c9fa13fa661a30fb5cc","modified":1684398068014},{"_id":"source/_posts/2022/Homework4/audio.jpg","hash":"fb7f9c0fea5c82539a4c101221b8fecc04d59702","modified":1684398068069},{"_id":"source/_posts/2022/Homework4/skybox2.jpg","hash":"4221854957b1028eb44c95e496685e5b230f06ed","modified":1684398068074},{"_id":"source/_posts/2022/Homework4/skybox.jpg","hash":"f1582111ce6eca4c74b72974bdb1992d8ff59b04","modified":1684398068074},{"_id":"source/_posts/2022/Homework4/terrain1.jpg","hash":"e11ff61f2d6be3085d306832be93e73d75ef3d4b","modified":1684398068075},{"_id":"source/_posts/2022/Homework4/terrain2.jpg","hash":"c88399b117b544b0abc864fd37fadc28d92a3d05","modified":1684398068075},{"_id":"source/_posts/2022/Homework6/2.png","hash":"21a5eea0d7917cdb03d44a3cdc412425d163fdf2","modified":1684398068215},{"_id":"source/_posts/2022/Homework6/3.png","hash":"fe71af2978d88d421dce690ef7fc9b65fa462d38","modified":1684398068216},{"_id":"source/_posts/2022/Homework6/4.png","hash":"b51a3f9d929174ae04c904fda5549b978358e138","modified":1684398068217},{"_id":"source/_posts/2022/Homework6/5.png","hash":"7f76266196a8bda6b521084a4c2da58c982bfedb","modified":1684398068218},{"_id":"source/_posts/2022/Homework6/7.png","hash":"31066abe3c78273d241b5d67346026941c87af53","modified":1684398068220},{"_id":"source/_posts/2022/Homework6/6.png","hash":"9da5a9fa4bc50133bd9bbf865305263bb54cfd34","modified":1684398068219},{"_id":"source/_posts/2022/Homework6/Homework6.md","hash":"d89628bca0fd473e76c405271c0c690fd8565757","modified":1684479906336},{"_id":"source/_posts/2022/Homework7/02.png","hash":"383037b0db4fa0186a501fa9a78e847c49768750","modified":1684398068225},{"_id":"source/_posts/2022/Homework7/08.png","hash":"4ca09efd7aec0260ae46766d67c344721e495fd6","modified":1684398068234},{"_id":"source/_posts/2022/Homework7/10.png","hash":"07769fa48725371180a62b9cb0fdd66dcad15b60","modified":1684398068235},{"_id":"source/_posts/2022/Homework7/09.png","hash":"6dc8117fe48b5fd160e1aeb2a457c9cc305b5247","modified":1684398068234},{"_id":"source/_posts/2022/Homework7/12.png","hash":"37d6a4bae4c9629427ab36b2ff3aaaf19d428ee0","modified":1684398068236},{"_id":"source/_posts/2022/Homework7/11.png","hash":"638f50d594ef10adca6df79c73816e2cd937b0e5","modified":1684398068235},{"_id":"source/_posts/2022/Homework7/15.png","hash":"669d40d629e15a4d54693b67e5e219f41907aaa7","modified":1684398068238},{"_id":"source/_posts/2022/Homework7/14.png","hash":"6a3ebe1dadd125484951d9207cf5c34d67b63a17","modified":1684398068238},{"_id":"source/_posts/2022/Homework7/Homework7.md","hash":"b9240c3696fda33e17d0e048e4ae67f2252c428c","modified":1684479901637},{"_id":"source/_posts/2022/Homework1/2.jpg","hash":"26fade7b58b0c655080887ded76e64b0d7dbd8d1","modified":1684398067807},{"_id":"source/_posts/2022/Homework1/5.jpg","hash":"5e7018ae9b45c5d649a17cbd6d80e0e3f90d3353","modified":1684398067811},{"_id":"source/_posts/2022/Homework1/3.jpg","hash":"ceb4d64fa4cc6426a3026b4a3f7f841e7ed1fb8c","modified":1684398067808},{"_id":"source/_posts/2022/Homework1/7.jpg","hash":"31968943857ab7e1223208e728487a5bcbfd30bb","modified":1684398067813},{"_id":"source/_posts/2022/Homework1/6.jpg","hash":"bffecad8d4405b333b9d2c4e073d4c80f9c9554c","modified":1684398067812},{"_id":"source/_posts/2023/Homework8/1a.png","hash":"f7c9701cf1b5d4d91b55d6563bde45f04b919d6b","modified":1684398067659},{"_id":"source/_posts/2023/Homework8/Scripts.png","hash":"c2e68ab4e48041d40fce8d72d4e141dcd25d6b50","modified":1684398067677},{"_id":"source/_posts/2023/Homework8/ball.png","hash":"1292e8129d25ade090b0e8835bab47248c22c09b","modified":1684398067678},{"_id":"source/_posts/2023/Homework8/bg.png","hash":"56fa482cc854a3c63ca37d5de19640d64e29a7d7","modified":1684398067679},{"_id":"source/_posts/2023/Homework8/cloud.png","hash":"d6bfdc7ab1fd8f5a38d5fbee83e99ca762b26ed2","modified":1684398067681},{"_id":"source/_posts/2023/Homework8/up.png","hash":"3dfbba4adc02d2a5873d1ed432f3d1ed2a44476c","modified":1684398067802},{"_id":"source/_posts/2022/Homework3/Boat.jpg","hash":"4222e8049d6becf23d0b4f5ba6fe295caf6941b9","modified":1684398067908},{"_id":"source/_posts/2022/Homework3/Coast.jpg","hash":"f67c77c3272bb0ae63d632837ae0f91f47376b04","modified":1684398067908},{"_id":"source/_posts/2022/Homework3/Devil.jpg","hash":"4fcf9d261e15acd3a2135e4476eb962e5496abb3","modified":1684398067909},{"_id":"source/_posts/2022/Homework3/Map.jpg","hash":"8c522d9f94c11ac49ecbcd4031d46d02f1de426f","modified":1684398067910},{"_id":"source/_posts/2022/Homework3/Water.jpg","hash":"e6e86ecb4a9453da19fd78ed1738e9e860f14223","modified":1684398067971},{"_id":"source/_posts/2022/Homework3/Priest.jpg","hash":"a560222bc630dc8cab697ed4028c9c990213f27f","modified":1684398067970},{"_id":"source/_posts/2022/Homework3/hw.jpg","hash":"e1c786ae4eb7d667bc149023953faa7e3f69c116","modified":1684398067972},{"_id":"source/_posts/2022/Homework2/07.jpg","hash":"0efb4431f552aebffb2f1a56d2d2e2927638f7e8","modified":1684398067821},{"_id":"source/_posts/2022/Homework2/08.jpg","hash":"c3e83be6d67a0b33ce37844c8d966ec861f22988","modified":1684398067822},{"_id":"source/_posts/2022/Homework2/09.png","hash":"bb6289a2fcdfd82cfd4ea1fa8800c4c2400dd5ae","modified":1684398067823},{"_id":"source/_posts/2022/Homework2/13.jpg","hash":"39ef004846c27ff077ad3d7b395c4a48f29f0b52","modified":1684398067825},{"_id":"source/_posts/2022/Homework5/02.png","hash":"1b45ce6154c836cb04fe5600833d28f4b09add83","modified":1684398068079},{"_id":"source/_posts/2022/Homework4/cover.jpg","hash":"83c65802e106a2fc537c7437c9a777b5f1739dff","modified":1684398068071},{"_id":"source/_posts/2022/Homework4/scene.jpg","hash":"3a1e04e4f503ec68cd7825b8e5b7fc205b943be7","modified":1684398068072},{"_id":"source/_posts/2022/Homework4/uml.jpg","hash":"b1cbbbe1feeb3eeeab48040277b3fac2175dfef6","modified":1684398068076},{"_id":"source/_posts/2022/Homework6/射箭游戏.png","hash":"3dc1fe69ede3fa6baee648e4832e8e84325206a3","modified":1684398068222},{"_id":"source/_posts/2022/Homework6/cover.png","hash":"915c6d42c139ac75e651274ecccf49c6bb35c696","modified":1684398068221},{"_id":"source/_posts/2022/Homework7/07.png","hash":"21815920a0845ee510f5898d4433286ad4dbaf91","modified":1684398068233},{"_id":"source/_posts/2022/Homework7/05.png","hash":"ca04cb88233ff1f5d636786c806a7551a9381789","modified":1684398068230},{"_id":"source/_posts/2022/Homework7/06.png","hash":"f1423822717289b4318ae4f28bc113db71871c13","modified":1684398068232},{"_id":"source/_posts/2022/Homework7/Patrol.png","hash":"7208bc346055eb638ab5899a18877a9728511a0c","modified":1684398068239},{"_id":"source/_posts/2022/Homework1/4.jpg","hash":"d58fcea1acfc60977258aa5cf98ac7b7a7077b81","modified":1684398067810},{"_id":"source/_posts/2022/Homework1/8.jpg","hash":"0039e1f7af7c8ee8d73d5bcb871f64dadd8db33d","modified":1684398067814},{"_id":"source/_posts/2023/Homework8/对象结构图.png","hash":"d6c425d81998e4a75b6b474083e7ca167af6ae0b","modified":1684398067804},{"_id":"source/_posts/2022/Homework2/03.jpg","hash":"50b8022fc75b35d0c6a026331ca55faa50b804c8","modified":1684398067818},{"_id":"source/_posts/2022/Homework7/04.png","hash":"b6bf8db2937ac7b001adade5d72318a76877643e","modified":1684398068229},{"_id":"source/_posts/2022/Homework7/13.png","hash":"886422b32f0ed4fdaaac3d6131a9a11e2dd5151a","modified":1684398068237},{"_id":"source/_posts/2022/Homework2/01.png","hash":"aad69b1c0e92d12c348f55aff608b01abb663f32","modified":1684398067816},{"_id":"source/_posts/2022/Homework7/03.png","hash":"6b68c2969d7335dfe4fee8e11e189b255b4daaf9","modified":1684398068227},{"_id":"source/_posts/2022/Homework7/cover.png","hash":"7b17c2a1b895abdd5b5c0c47ea8f2ca6073550c5","modified":1684398068241},{"_id":"source/_posts/2023/Homework8/ParticleSystem.png","hash":"8a92945ec3d95b024419720bd0eddd905a903628","modified":1684398067676},{"_id":"source/_posts/2022/Homework7/01.png","hash":"a1cc54f057dd702d1a6d2a552efd96a8b4a4e287","modified":1684398068225},{"_id":"source/_posts/2022/Homework5/01.png","hash":"d306026cac39165e13e71c19e7b890805da6ff74","modified":1684398068079},{"_id":"source/_posts/2023/Homework8/cover.png","hash":"06b6848e085d781982de6586b9ac905af6b41cde","modified":1684398067684},{"_id":"source/_posts/2022/Homework2/cover.png","hash":"7da51b607687c7555fffdfc9160f0f82391e89b3","modified":1684398067827},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"088788e149051fc0a3c6096ba95e35a8344de04b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"df68a10b0676dbff302356497027eb3a55b14c21","modified":1684474777907},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"95f44106ba5796fd27a33850aabfe595db617f3b","modified":1684477352894},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"db000a6a0cec19d32a6e7e94cd4c478500d9c5ac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"4543b8954c5c2ca91191cc0d53cf071b3f26faaa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"9d13392cea94b66d86422ad17c66e5ae67ce1d32","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"e3713fa78e0fc14a239360b020068d8513573ae4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"e49506e9895e255e0e53f34a11d325f83109c1b0","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"870db75e4e403a840c4463dfeed2c9114846e7cc","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":499162500000},{"_id":"node_modules/hexo-theme-fluid/source/img/favic.png","hash":"bd132d2766ff646165290daf4ef207617fea1b72","modified":1684419681806},{"_id":"node_modules/hexo-theme-fluid/source/img/wechat.jpg","hash":"de5fe95cad99d01a867d68398321301611d3bb9b","modified":1684475599771},{"_id":"source/_posts/2023/Homework8/design.png","hash":"cf524473c5459416e4b311c3cbeeda683ebfd092","modified":1684398067687},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":499162500000},{"_id":"source/_posts/2022/Homework5/cover.png","hash":"b3606b99d8dbe2e995d54424fd9b9a4d35239086","modified":1684398068154},{"_id":"node_modules/hexo-theme-fluid/source/img/logo.png","hash":"89fc2d3f26f3958f29e76ca52c21bace7963ed00","modified":1684420071528},{"_id":"source/_posts/2022/Homework3/parabola.gif","hash":"c698008e4c8e2baa270c8240ef1b887896837b87","modified":1684398067976},{"_id":"source/_posts/2022/Homework7/map.gif","hash":"fab92bd842f7d17aedd55e2af82a4a4f705f7b71","modified":1684398068374},{"_id":"source/_posts/2022/Homework3/solar.gif","hash":"1d9fd9d59062c53691f7d9a81a531c77011038b7","modified":1684398068010},{"_id":"source/_posts/2022/Homework2/win.gif","hash":"5a70be4a96fe1ea20def299b79dbcdd853a3ab8c","modified":1684398067902},{"_id":"source/_posts/2022/Homework4/anime.gif","hash":"2107024dd78bcb5ec2711b63a3de5d71f19271f7","modified":1684398068066},{"_id":"source/_posts/2022/Homework3/PandD.gif","hash":"203894156faa75f84ea24a85c78faa31cdbdf26f","modified":1684398067966},{"_id":"source/_posts/2022/Homework6/1.gif","hash":"8974d57f174d7a4d3046e580290eeca8544237e2","modified":1684398068212},{"_id":"source/_posts/2022/Homework5/04.gif","hash":"3a8811857986ccec5af8c2fae0996ed16704e928","modified":1684398068147},{"_id":"source/_posts/2023/Homework8/show.gif","hash":"b515555b02579259a195bc92472bd870e5e504ee","modified":1684398067795},{"_id":"source/_posts/2022/Homework7/game.gif","hash":"7e6cc9cd45c261cfab3f425e5ea15b893edacee1","modified":1684398068348},{"_id":"public/local-search.xml","hash":"dd8f9994e8aea5847810245d17e1e9f779b70625","modified":1684489452960},{"_id":"public/about/index.html","hash":"5a29be18d07e4d9150da7933fe3fbe6577049b8c","modified":1684489452960},{"_id":"public/archives/index.html","hash":"eb1230fd184b7ab77abd63f3296c1b3fb6d3bb46","modified":1684489452960},{"_id":"public/archives/2022/index.html","hash":"cbf378de6cc33009e5648c77a0a7dc122b24ecc1","modified":1684489452960},{"_id":"public/archives/2022/09/index.html","hash":"cdc16c504f0f20ca5f1eba1ea175748cab952658","modified":1684489452960},{"_id":"public/archives/2022/10/index.html","hash":"18a2f1298343c784664b3277cd624e99e2abfa12","modified":1684489452960},{"_id":"public/archives/2022/11/index.html","hash":"ada2691815d1b2dbda21005fe780395d9af33f68","modified":1684489452960},{"_id":"public/archives/2022/12/index.html","hash":"efa7992fbba757b7fdbca3ad82bbec73b40ab21c","modified":1684489452960},{"_id":"public/archives/2023/index.html","hash":"f127bcba4ff437e7d03867ac39a7b25bb1dc9d8a","modified":1684489452960},{"_id":"public/archives/2023/01/index.html","hash":"7307dcbd227ab8c18228268d6a7486aeada7ec46","modified":1684489452960},{"_id":"public/categories/Game/index.html","hash":"d0a985f9ddd4519bdf6aa0f0da87fd07f5d33c99","modified":1684489452960},{"_id":"public/tags/serious-game/index.html","hash":"6906bb956687c55bfae3690b8dc23f2650a1bcac","modified":1684489452960},{"_id":"public/tags/unity/index.html","hash":"75fccf6d7541ebe2a2d0f5417bd1f12f9ebfba28","modified":1684489452960},{"_id":"public/tags/particle/index.html","hash":"efa2a2cb002b5ac39890c5cacca36d6d2d1f55e7","modified":1684489452960},{"_id":"public/tags/MVC/index.html","hash":"c3019c2aaa13fda62e80976a854f0141502f3999","modified":1684489452960},{"_id":"public/tags/IMGUI/index.html","hash":"f8c017c5dd75dfbef359a20ed449d0dd7d80948b","modified":1684489452960},{"_id":"public/tags/singleton/index.html","hash":"943e85fa57b0953b59ec67793c51d568006138ad","modified":1684489452960},{"_id":"public/tags/rigidbody/index.html","hash":"937671b833c43d7acd017c1a1ed3656e3bcf2a4c","modified":1684489452960},{"_id":"public/tags/animator/index.html","hash":"5b47272390fc6533792b6032f609bd650f6a1695","modified":1684489452960},{"_id":"public/404.html","hash":"0efb4a315ce9ac7af73ba408b738e051bd1a899b","modified":1684489452960},{"_id":"public/tags/index.html","hash":"83f8e86d0ea5930c5ec681642d0e3a2ae3705fc3","modified":1684489452960},{"_id":"public/categories/index.html","hash":"843493484cd31194475d91dd4ff14135d4904ce9","modified":1684489452960},{"_id":"public/links/index.html","hash":"5a5fe68e6c1e73462bf274abebdc2af971c3ac1e","modified":1684489452960},{"_id":"public/2023/01/05/2023/Homework8/Homework8/index.html","hash":"09a79c25f37c49f25358bffe96aa9e7ae32342aa","modified":1684489452960},{"_id":"public/2022/12/18/2022/Homework7/Homework7/index.html","hash":"de77efe0e2a3c88358336853b65b01997d5fbeae","modified":1684489452960},{"_id":"public/2022/12/04/2022/Homework6/Homework6/index.html","hash":"e5958765109e33c382e7c83abd607e5a0cfe8338","modified":1684489452960},{"_id":"public/2022/11/13/2022/Homework5/Homework5/index.html","hash":"33e2bcb18b36b39427ead48a2246796dd93c6ff0","modified":1684489452960},{"_id":"public/2022/11/05/2022/Homework4/Homework4/index.html","hash":"f4cdeebd0fabb358684899472cf47c7763d99505","modified":1684489452960},{"_id":"public/2022/10/23/2022/Homework3/Homework3/index.html","hash":"651fcf53640218d097126ee49c0f4c4661c413d9","modified":1684489452960},{"_id":"public/2022/10/04/2022/Homework2/Homework2/index.html","hash":"d0ccc054f897e139f9bf75431320015f228c22ac","modified":1684489452960},{"_id":"public/2022/09/06/2022/Homework1/Homework1/index.html","hash":"3c9d7fd91ea5c434d318fd5066a1742fad1d8cab","modified":1684489452960},{"_id":"public/index.html","hash":"615fb17a3dca89828fd14258378b7dec634843a0","modified":1684489452960},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1684489452960},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1684489452960},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1684489452960},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1684489452960},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1684489452960},{"_id":"public/img/favic.png","hash":"bd132d2766ff646165290daf4ef207617fea1b72","modified":1684489452960},{"_id":"public/img/wechat.jpg","hash":"de5fe95cad99d01a867d68398321301611d3bb9b","modified":1684489452960},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1684489452960},{"_id":"public/css/highlight.css","hash":"0f9a477d33d3b15ebe7e163e756fb7c54c7ded6b","modified":1684489452960},{"_id":"public/css/highlight-dark.css","hash":"2b0daa6e5343da9dbb26d617d224b8397e48556b","modified":1684489452960},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1684489452960},{"_id":"public/js/color-schema.js","hash":"76a198f8721352ebeaf5b2ef2f4db00612da4796","modified":1684489452960},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1684489452960},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1684489452960},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1684489452960},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1684489452960},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1684489452960},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1684489452960},{"_id":"public/css/main.css","hash":"4d4a763ef5e9ab2602c46e812d846bba7a277757","modified":1684489452960},{"_id":"public/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1684489452960},{"_id":"public/img/logo.png","hash":"89fc2d3f26f3958f29e76ca52c21bace7963ed00","modified":1684489452960}],"Category":[{"name":"Game","_id":"clhudj1f400037g846v3t3w5r"}],"Data":[],"Page":[{"title":"about","date":"2023-05-19T05:26:25.000Z","layout":"about","_content":"Hi! I'm a junior in SYSU.","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-05-19 13:26:25\nlayout: about\n---\nHi! I'm a junior in SYSU.","updated":"2023-05-19T05:28:01.094Z","path":"about/index.html","comments":1,"_id":"clhudj1es00007g848e767iwu","content":"<p>Hi! I’m a junior in SYSU.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi! I’m a junior in SYSU.</p>\n"}],"Post":[{"layout":"post","title":"HW1: 游戏的本质","date":"2022-09-06T12:00:00.000Z","subtitle":"游戏的本质","_content":"\n> 写在前面：我正在学习一门课程《3D游戏编程与设计》，接下来的时间，我都会在这个博客上记录我这门课的学习，请大家多多指教~ \n> \t\n\n<!--more-->\n\n### “功能游戏/严肃游戏”是什么？\n\n*\"Serious games induce some kind of affective or motor learning  (understood in very broad sense) at any level. Put more simply: serious  games are used for more than entertainment.\" (Susi et al. 2007, Breuer  & Bente, 2010).*\n\n​\t\t从严肃游戏较早的提出看，严肃游戏不仅仅用于娱乐，或者说主要不是为了娱乐。用一个词语来比喻就是“寓教于乐”，但包含的领域不只是教育，还可能包含运动、商业、安全、军事、模拟等。但细想来看，那么非严肃游戏是不是就是纯娱乐性质的游戏呢？从小到大，我玩过许多游戏，感觉很多游戏都不是纯娱乐，比如经典的益智游戏《扫雷》，可以有助于我们锻炼思维与反应能力，那它们又是不是都是严肃游戏呢？“严肃”一词显然不是那么好理解，而“功能游戏”是我国引入“严肃游戏”时的别称，是为了让人们更好地理解这个概念。我个人的理解是，这个功能游戏在设计之初就已经带有某种功能目的，而它的载体就是游戏，是同时具有娱乐性的。而注重功能性且能平衡好娱乐性的游戏，我觉得应该就能称得上是好的功能游戏。\n\n参考文章：[EduTech Wiki][link-SG]；[Wikipedia][link2-SG]；[知乎文章(带有个人主观性)][link3-SG]\n\n[link-SG]: https://edutechwiki.unige.ch/en/Serious_game \" \"\n[link2-SG]: https://en.wikipedia.org/wiki/Serious_game \" \"\n[link3-SG]:https://zhuanlan.zhihu.com/p/32908209 \" \"\n\n### 分享游戏：《みんなで空気読み》\n\n​\t\t:tea:\t\t我个人比较喜欢的一款严肃游戏是日本游戏公司G-MODE制作的《みんなで空気読み》（又名《阅读空气》或《大家一起察言观色》），PC版于2020年在steam平台上线。目前该系列有3部，还有一部online版本可以和其他玩家在线游玩。实际上，早在2013年左右，我就已经在塞班系统上玩过这款游戏，它当时就给我留下了深刻印象。当然，那个时候我还在念小学，玩不太明白。\n\n![Image 3](3.jpg)\n\n\n\n​\t\t:apple:\t\t“空気読み”直译过来是“读空气”，也是网络词汇“KY”(不会读空气)的由来。这个意思跟我们中文的“察言观色”或者“有眼力见儿”差不多。玩家在普通的“察言观色”模式需要做的是根据氛围，快速地判断需要作出反应。操作很简单，通过键盘上的上下左右与空格键控制即可，由于什么时候用什么按键游戏没有说明，要自己去思考探索。\n\n​\t\t :custard:\t\t玩法这么普通，横跨这么多年又上线不同平台，有它的道理。我认为这款游戏的**创新点在于其功能性**，而其功能性又在于教育，玩家通过游玩这款游戏可以注意到一些生活小细节，了解到一些日本的文化等。比如说，在日本，地铁的站位和地区有关，东京地区习惯“左站右行”，而大阪地区习惯“左行右站”；你要和一位牛头朋友(代表忌口)去吃饭，有烧肉和寿司两个选项，就需要避开含牛量较高的烧肉了；当你作为一名老师上公开课问问题时，台下几位同学都举手了，但只有一位同学看起来很高兴，就需要思考点他了...... 每玩完5个场景，会给你一个反馈，例如5个都做对了(官方做法)，会告诉你“简单明了地做到了察言观色”；玩完所有场景后，会给你一个六边形结果反馈，包含决心、同情心、适应能力、责任感、敏捷思维及运用能力6个方面。\n\n![Image 4](4.jpg)\n\n​\t\t:tangerine:\t\t这看起来像心理测试的游戏，有功能性的同时，当然也不失**趣味性**。尽管操作很简单，但是每个场景可以作出的反应是多样性的，有些甚至都不太能想到，当你做出来的时候，会get到这种幽默感。比如说，你在一个电视节目要举一个牌子，左方会有一个标题，右边有个人，正常想法是可以举左边、右边或者上面，一些神奇的操作就是不断切换左上右按键，你就会把这个牌子转起来。除了普通测试的“察言观色”模式，有可以让你无限装疯卖傻、随心所欲各种捣蛋的“不察言观色”模式，有可以和朋友本地快(ben)乐(bi)玩(hu)耍(ou)的“双人察言观色”模式，可以浏览所有场景的“剧情模式”，还有满足收集癖的成就系统“秘密”，以及看到自己在“察言观色”模式的过往表现的“以前的你”。\n\n![Image 2](2.jpg)\n\n​\t\t:ghost:\t\t我一个比较深刻的感受是，可以帮助玩家更好地认识自我和理解社会的氛围。尽管各种场景都更贴近日本文化，由于一些礼仪的共通性，我们还是能很好地体会。在做出各种行为的时候，可能这个举动是可以帮助到他人的，但是自己会不会不开心；“不麻烦他人”又是不是一直都是好的；又应该选择做一个怎样的人等等。通过对比不同时期(一般是隔半年以上)的反馈结果，也能看到自己的一些变化，更好地去认识自己与了解自己。还有一点是，这款严肃游戏很好地结合**教育**、**心理**、**文化**等方面，对于我们东方注重礼仪的社会，是非常有价值的。\n\n![Image 6](6.jpg)\n\n> Cauchy 20220906 \n","source":"_posts/2022/Homework1/Homework1.md","raw":"---\nlayout: post\ntitle:  \"HW1: 游戏的本质\"\ndate:   2022-09-06 20:00:00 +0800\ntags: serious game \ncategories: Game\nsubtitle: '游戏的本质'\n---\n\n> 写在前面：我正在学习一门课程《3D游戏编程与设计》，接下来的时间，我都会在这个博客上记录我这门课的学习，请大家多多指教~ \n> \t\n\n<!--more-->\n\n### “功能游戏/严肃游戏”是什么？\n\n*\"Serious games induce some kind of affective or motor learning  (understood in very broad sense) at any level. Put more simply: serious  games are used for more than entertainment.\" (Susi et al. 2007, Breuer  & Bente, 2010).*\n\n​\t\t从严肃游戏较早的提出看，严肃游戏不仅仅用于娱乐，或者说主要不是为了娱乐。用一个词语来比喻就是“寓教于乐”，但包含的领域不只是教育，还可能包含运动、商业、安全、军事、模拟等。但细想来看，那么非严肃游戏是不是就是纯娱乐性质的游戏呢？从小到大，我玩过许多游戏，感觉很多游戏都不是纯娱乐，比如经典的益智游戏《扫雷》，可以有助于我们锻炼思维与反应能力，那它们又是不是都是严肃游戏呢？“严肃”一词显然不是那么好理解，而“功能游戏”是我国引入“严肃游戏”时的别称，是为了让人们更好地理解这个概念。我个人的理解是，这个功能游戏在设计之初就已经带有某种功能目的，而它的载体就是游戏，是同时具有娱乐性的。而注重功能性且能平衡好娱乐性的游戏，我觉得应该就能称得上是好的功能游戏。\n\n参考文章：[EduTech Wiki][link-SG]；[Wikipedia][link2-SG]；[知乎文章(带有个人主观性)][link3-SG]\n\n[link-SG]: https://edutechwiki.unige.ch/en/Serious_game \" \"\n[link2-SG]: https://en.wikipedia.org/wiki/Serious_game \" \"\n[link3-SG]:https://zhuanlan.zhihu.com/p/32908209 \" \"\n\n### 分享游戏：《みんなで空気読み》\n\n​\t\t:tea:\t\t我个人比较喜欢的一款严肃游戏是日本游戏公司G-MODE制作的《みんなで空気読み》（又名《阅读空气》或《大家一起察言观色》），PC版于2020年在steam平台上线。目前该系列有3部，还有一部online版本可以和其他玩家在线游玩。实际上，早在2013年左右，我就已经在塞班系统上玩过这款游戏，它当时就给我留下了深刻印象。当然，那个时候我还在念小学，玩不太明白。\n\n![Image 3](3.jpg)\n\n\n\n​\t\t:apple:\t\t“空気読み”直译过来是“读空气”，也是网络词汇“KY”(不会读空气)的由来。这个意思跟我们中文的“察言观色”或者“有眼力见儿”差不多。玩家在普通的“察言观色”模式需要做的是根据氛围，快速地判断需要作出反应。操作很简单，通过键盘上的上下左右与空格键控制即可，由于什么时候用什么按键游戏没有说明，要自己去思考探索。\n\n​\t\t :custard:\t\t玩法这么普通，横跨这么多年又上线不同平台，有它的道理。我认为这款游戏的**创新点在于其功能性**，而其功能性又在于教育，玩家通过游玩这款游戏可以注意到一些生活小细节，了解到一些日本的文化等。比如说，在日本，地铁的站位和地区有关，东京地区习惯“左站右行”，而大阪地区习惯“左行右站”；你要和一位牛头朋友(代表忌口)去吃饭，有烧肉和寿司两个选项，就需要避开含牛量较高的烧肉了；当你作为一名老师上公开课问问题时，台下几位同学都举手了，但只有一位同学看起来很高兴，就需要思考点他了...... 每玩完5个场景，会给你一个反馈，例如5个都做对了(官方做法)，会告诉你“简单明了地做到了察言观色”；玩完所有场景后，会给你一个六边形结果反馈，包含决心、同情心、适应能力、责任感、敏捷思维及运用能力6个方面。\n\n![Image 4](4.jpg)\n\n​\t\t:tangerine:\t\t这看起来像心理测试的游戏，有功能性的同时，当然也不失**趣味性**。尽管操作很简单，但是每个场景可以作出的反应是多样性的，有些甚至都不太能想到，当你做出来的时候，会get到这种幽默感。比如说，你在一个电视节目要举一个牌子，左方会有一个标题，右边有个人，正常想法是可以举左边、右边或者上面，一些神奇的操作就是不断切换左上右按键，你就会把这个牌子转起来。除了普通测试的“察言观色”模式，有可以让你无限装疯卖傻、随心所欲各种捣蛋的“不察言观色”模式，有可以和朋友本地快(ben)乐(bi)玩(hu)耍(ou)的“双人察言观色”模式，可以浏览所有场景的“剧情模式”，还有满足收集癖的成就系统“秘密”，以及看到自己在“察言观色”模式的过往表现的“以前的你”。\n\n![Image 2](2.jpg)\n\n​\t\t:ghost:\t\t我一个比较深刻的感受是，可以帮助玩家更好地认识自我和理解社会的氛围。尽管各种场景都更贴近日本文化，由于一些礼仪的共通性，我们还是能很好地体会。在做出各种行为的时候，可能这个举动是可以帮助到他人的，但是自己会不会不开心；“不麻烦他人”又是不是一直都是好的；又应该选择做一个怎样的人等等。通过对比不同时期(一般是隔半年以上)的反馈结果，也能看到自己的一些变化，更好地去认识自己与了解自己。还有一点是，这款严肃游戏很好地结合**教育**、**心理**、**文化**等方面，对于我们东方注重礼仪的社会，是非常有价值的。\n\n![Image 6](6.jpg)\n\n> Cauchy 20220906 \n","slug":"2022/Homework1/Homework1","published":1,"updated":"2023-05-19T09:01:32.619Z","comments":1,"photos":[],"link":"","_id":"clhudj1ex00017g845uw88an5","content":"<blockquote>\n<p>写在前面：我正在学习一门课程《3D游戏编程与设计》，接下来的时间，我都会在这个博客上记录我这门课的学习，请大家多多指教~</p>\n</blockquote>\n<span id=\"more\"></span>\n<h3 id=\"“功能游戏-严肃游戏”是什么？\">“功能游戏/严肃游戏”是什么？</h3>\n<p><em>“Serious games induce some kind of affective or motor learning  (understood in very broad sense) at any level. Put more simply: serious  games are used for more than entertainment.” (Susi et al. 2007, Breuer  &amp; Bente, 2010).</em></p>\n<p>​\t\t从严肃游戏较早的提出看，严肃游戏不仅仅用于娱乐，或者说主要不是为了娱乐。用一个词语来比喻就是“寓教于乐”，但包含的领域不只是教育，还可能包含运动、商业、安全、军事、模拟等。但细想来看，那么非严肃游戏是不是就是纯娱乐性质的游戏呢？从小到大，我玩过许多游戏，感觉很多游戏都不是纯娱乐，比如经典的益智游戏《扫雷》，可以有助于我们锻炼思维与反应能力，那它们又是不是都是严肃游戏呢？“严肃”一词显然不是那么好理解，而“功能游戏”是我国引入“严肃游戏”时的别称，是为了让人们更好地理解这个概念。我个人的理解是，这个功能游戏在设计之初就已经带有某种功能目的，而它的载体就是游戏，是同时具有娱乐性的。而注重功能性且能平衡好娱乐性的游戏，我觉得应该就能称得上是好的功能游戏。</p>\n<p>参考文章：<a href=\"https://edutechwiki.unige.ch/en/Serious_game\" title=\" \">EduTech Wiki</a>；<a href=\"https://en.wikipedia.org/wiki/Serious_game\" title=\" \">Wikipedia</a>；<a href=\"https://zhuanlan.zhihu.com/p/32908209\" title=\" \">知乎文章(带有个人主观性)</a></p>\n<h3 id=\"分享游戏：《みんなで空気読み》\">分享游戏：《みんなで空気読み》</h3>\n<p>​\t\t🍵\t\t我个人比较喜欢的一款严肃游戏是日本游戏公司G-MODE制作的《みんなで空気読み》（又名《阅读空气》或《大家一起察言观色》），PC版于2020年在steam平台上线。目前该系列有3部，还有一部online版本可以和其他玩家在线游玩。实际上，早在2013年左右，我就已经在塞班系统上玩过这款游戏，它当时就给我留下了深刻印象。当然，那个时候我还在念小学，玩不太明白。</p>\n<p><img src=\"3.jpg\" alt=\"Image 3\"></p>\n<p>​\t\t🍎\t\t“空気読み”直译过来是“读空气”，也是网络词汇“KY”(不会读空气)的由来。这个意思跟我们中文的“察言观色”或者“有眼力见儿”差不多。玩家在普通的“察言观色”模式需要做的是根据氛围，快速地判断需要作出反应。操作很简单，通过键盘上的上下左右与空格键控制即可，由于什么时候用什么按键游戏没有说明，要自己去思考探索。</p>\n<p>​\t\t 🍮\t\t玩法这么普通，横跨这么多年又上线不同平台，有它的道理。我认为这款游戏的<strong>创新点在于其功能性</strong>，而其功能性又在于教育，玩家通过游玩这款游戏可以注意到一些生活小细节，了解到一些日本的文化等。比如说，在日本，地铁的站位和地区有关，东京地区习惯“左站右行”，而大阪地区习惯“左行右站”；你要和一位牛头朋友(代表忌口)去吃饭，有烧肉和寿司两个选项，就需要避开含牛量较高的烧肉了；当你作为一名老师上公开课问问题时，台下几位同学都举手了，但只有一位同学看起来很高兴，就需要思考点他了… 每玩完5个场景，会给你一个反馈，例如5个都做对了(官方做法)，会告诉你“简单明了地做到了察言观色”；玩完所有场景后，会给你一个六边形结果反馈，包含决心、同情心、适应能力、责任感、敏捷思维及运用能力6个方面。</p>\n<p><img src=\"4.jpg\" alt=\"Image 4\"></p>\n<p>​\t\t🍊\t\t这看起来像心理测试的游戏，有功能性的同时，当然也不失<strong>趣味性</strong>。尽管操作很简单，但是每个场景可以作出的反应是多样性的，有些甚至都不太能想到，当你做出来的时候，会get到这种幽默感。比如说，你在一个电视节目要举一个牌子，左方会有一个标题，右边有个人，正常想法是可以举左边、右边或者上面，一些神奇的操作就是不断切换左上右按键，你就会把这个牌子转起来。除了普通测试的“察言观色”模式，有可以让你无限装疯卖傻、随心所欲各种捣蛋的“不察言观色”模式，有可以和朋友本地快(ben)乐(bi)玩(hu)耍(ou)的“双人察言观色”模式，可以浏览所有场景的“剧情模式”，还有满足收集癖的成就系统“秘密”，以及看到自己在“察言观色”模式的过往表现的“以前的你”。</p>\n<p><img src=\"2.jpg\" alt=\"Image 2\"></p>\n<p>​\t\t👻\t\t我一个比较深刻的感受是，可以帮助玩家更好地认识自我和理解社会的氛围。尽管各种场景都更贴近日本文化，由于一些礼仪的共通性，我们还是能很好地体会。在做出各种行为的时候，可能这个举动是可以帮助到他人的，但是自己会不会不开心；“不麻烦他人”又是不是一直都是好的；又应该选择做一个怎样的人等等。通过对比不同时期(一般是隔半年以上)的反馈结果，也能看到自己的一些变化，更好地去认识自己与了解自己。还有一点是，这款严肃游戏很好地结合<strong>教育</strong>、<strong>心理</strong>、<strong>文化</strong>等方面，对于我们东方注重礼仪的社会，是非常有价值的。</p>\n<p><img src=\"6.jpg\" alt=\"Image 6\"></p>\n<blockquote>\n<p>Cauchy 20220906</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>写在前面：我正在学习一门课程《3D游戏编程与设计》，接下来的时间，我都会在这个博客上记录我这门课的学习，请大家多多指教~</p>\n</blockquote>","more":"<h3 id=\"“功能游戏-严肃游戏”是什么？\">“功能游戏/严肃游戏”是什么？</h3>\n<p><em>“Serious games induce some kind of affective or motor learning  (understood in very broad sense) at any level. Put more simply: serious  games are used for more than entertainment.” (Susi et al. 2007, Breuer  &amp; Bente, 2010).</em></p>\n<p>​\t\t从严肃游戏较早的提出看，严肃游戏不仅仅用于娱乐，或者说主要不是为了娱乐。用一个词语来比喻就是“寓教于乐”，但包含的领域不只是教育，还可能包含运动、商业、安全、军事、模拟等。但细想来看，那么非严肃游戏是不是就是纯娱乐性质的游戏呢？从小到大，我玩过许多游戏，感觉很多游戏都不是纯娱乐，比如经典的益智游戏《扫雷》，可以有助于我们锻炼思维与反应能力，那它们又是不是都是严肃游戏呢？“严肃”一词显然不是那么好理解，而“功能游戏”是我国引入“严肃游戏”时的别称，是为了让人们更好地理解这个概念。我个人的理解是，这个功能游戏在设计之初就已经带有某种功能目的，而它的载体就是游戏，是同时具有娱乐性的。而注重功能性且能平衡好娱乐性的游戏，我觉得应该就能称得上是好的功能游戏。</p>\n<p>参考文章：<a href=\"https://edutechwiki.unige.ch/en/Serious_game\" title=\" \">EduTech Wiki</a>；<a href=\"https://en.wikipedia.org/wiki/Serious_game\" title=\" \">Wikipedia</a>；<a href=\"https://zhuanlan.zhihu.com/p/32908209\" title=\" \">知乎文章(带有个人主观性)</a></p>\n<h3 id=\"分享游戏：《みんなで空気読み》\">分享游戏：《みんなで空気読み》</h3>\n<p>​\t\t🍵\t\t我个人比较喜欢的一款严肃游戏是日本游戏公司G-MODE制作的《みんなで空気読み》（又名《阅读空气》或《大家一起察言观色》），PC版于2020年在steam平台上线。目前该系列有3部，还有一部online版本可以和其他玩家在线游玩。实际上，早在2013年左右，我就已经在塞班系统上玩过这款游戏，它当时就给我留下了深刻印象。当然，那个时候我还在念小学，玩不太明白。</p>\n<p><img src=\"3.jpg\" alt=\"Image 3\"></p>\n<p>​\t\t🍎\t\t“空気読み”直译过来是“读空气”，也是网络词汇“KY”(不会读空气)的由来。这个意思跟我们中文的“察言观色”或者“有眼力见儿”差不多。玩家在普通的“察言观色”模式需要做的是根据氛围，快速地判断需要作出反应。操作很简单，通过键盘上的上下左右与空格键控制即可，由于什么时候用什么按键游戏没有说明，要自己去思考探索。</p>\n<p>​\t\t 🍮\t\t玩法这么普通，横跨这么多年又上线不同平台，有它的道理。我认为这款游戏的<strong>创新点在于其功能性</strong>，而其功能性又在于教育，玩家通过游玩这款游戏可以注意到一些生活小细节，了解到一些日本的文化等。比如说，在日本，地铁的站位和地区有关，东京地区习惯“左站右行”，而大阪地区习惯“左行右站”；你要和一位牛头朋友(代表忌口)去吃饭，有烧肉和寿司两个选项，就需要避开含牛量较高的烧肉了；当你作为一名老师上公开课问问题时，台下几位同学都举手了，但只有一位同学看起来很高兴，就需要思考点他了… 每玩完5个场景，会给你一个反馈，例如5个都做对了(官方做法)，会告诉你“简单明了地做到了察言观色”；玩完所有场景后，会给你一个六边形结果反馈，包含决心、同情心、适应能力、责任感、敏捷思维及运用能力6个方面。</p>\n<p><img src=\"4.jpg\" alt=\"Image 4\"></p>\n<p>​\t\t🍊\t\t这看起来像心理测试的游戏，有功能性的同时，当然也不失<strong>趣味性</strong>。尽管操作很简单，但是每个场景可以作出的反应是多样性的，有些甚至都不太能想到，当你做出来的时候，会get到这种幽默感。比如说，你在一个电视节目要举一个牌子，左方会有一个标题，右边有个人，正常想法是可以举左边、右边或者上面，一些神奇的操作就是不断切换左上右按键，你就会把这个牌子转起来。除了普通测试的“察言观色”模式，有可以让你无限装疯卖傻、随心所欲各种捣蛋的“不察言观色”模式，有可以和朋友本地快(ben)乐(bi)玩(hu)耍(ou)的“双人察言观色”模式，可以浏览所有场景的“剧情模式”，还有满足收集癖的成就系统“秘密”，以及看到自己在“察言观色”模式的过往表现的“以前的你”。</p>\n<p><img src=\"2.jpg\" alt=\"Image 2\"></p>\n<p>​\t\t👻\t\t我一个比较深刻的感受是，可以帮助玩家更好地认识自我和理解社会的氛围。尽管各种场景都更贴近日本文化，由于一些礼仪的共通性，我们还是能很好地体会。在做出各种行为的时候，可能这个举动是可以帮助到他人的，但是自己会不会不开心；“不麻烦他人”又是不是一直都是好的；又应该选择做一个怎样的人等等。通过对比不同时期(一般是隔半年以上)的反馈结果，也能看到自己的一些变化，更好地去认识自己与了解自己。还有一点是，这款严肃游戏很好地结合<strong>教育</strong>、<strong>心理</strong>、<strong>文化</strong>等方面，对于我们东方注重礼仪的社会，是非常有价值的。</p>\n<p><img src=\"6.jpg\" alt=\"Image 6\"></p>\n<blockquote>\n<p>Cauchy 20220906</p>\n</blockquote>"},{"layout":"post","title":"Final: 粒子系统与流动效果","date":"2023-01-05T12:00:00.000Z","subtitle":"粒子系统与流动效果","_content":"\n> 作业简介：\n>\n> 1. 粒子效果制作(Particle System)\n>\n>     ps: 多图警告！加载时间可能较长，有加速器会快一些，思维导图可新建页面打开图片看大图。\n\n<!--more-->\n\n\n## 粒子效果制作\n\n### 一、设计要求\n\n* 粒子效果制作，必须带一个控制组件，控制粒子呈现效果。\n\n\n\n\n\n### 二、项目地址\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets\n\n\n\n\n\n### 三、效果展示图\n\n![show](../../../assets/game/0105/show.gif)\n\n\n\n\n\n### 四、写在前面\n\n​\t\tUnity实现特效的方式多种多样，这里主要使用的是内置粒子系统(Particle System)。还有一种更高级的Visual Effect Graph(VFX Graph) 。课上听和做对粒子系统有初步的了解。课后又对每个模块仔细地再阅读，跟着一些视频实践了一番，增加了不少的理解。感觉还是有自己的理解后，才能更好地制作自己的五毛特效。特效这方面感觉和美术更相关，搭配好的素材能制作出更丰富的东西。\n\n​\t\t这个特效，暂且称之为“雨云弹”特效吧。制作的灵感来源于《Splatoon 3》的大招墨雨云，因为做得不咋像就不放图了。用的是默认素材，真的是有手就能做。代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体。当球体与地面碰撞时，触发该特效并销毁球体，也算是有一个控制组件呈现粒子特效啦^-^。\n\n​\t\t那让我们开始吧。\n\n\n\n\n\n### 五、粒子系统模块简介\n\n:lollipop:\n\n####  模块总结图\n\n![ParticleSystem](../../../assets/game/0105/ParticleSystem.png)\n\n* 打“√”的模块是初始粒子系统默认勾选的，也是基本必须模块；打<u>下划线</u>的模块是“雨云弹”所用到的。\n* 这些模块都可以通过脚本 [`ParticleSystem.xx `][linkapi] 来访问使用。事实上，这里没有用脚本访问使用粒子系统，因为初始就直观地设定好了粒子效果，也无需在过程中修改它。\n\n[linkapi]:https://docs.unity.cn/cn/2021.3/ScriptReference/ParticleSystem.html\n\n:feet: \n\n#### 部分模块使用方法\n\n如果能看懂英文的，可以通过鼠标在英文上悬停以了解功能介绍。这里只介绍部分常用的。\n\n* 仿真执行控制窗口\n\n    用于控制粒子系统在场景的播放演示，可以看到场景中的粒子属性如粒子数量、速度区间等。\n\n    ![win](../../../assets/game/0105/win.png)\n\n    * Play - 播放；Restart - 重置；Stop - 停止播放；Playback Speed - 播放速度；Playback Time - 已播放时间；\n\n        Resimulate - 勾选后，粒子效果的更新会同步到仿真窗口；\n\n    \n\n* Main 模块\n\n    ![main](../../../assets/game/0105/main.png)\n\n    * 右边有三角形的都是下拉列表，可以更改选项或模式。右上角的\"＋\"号，可以选择显示所有模块或勾选的模块。\n\n    * Duration - 粒子一次发射多久(若是循环模式，则为每轮发射时长)；Looping - 是否循环播放；\n\n        Start Delay - 延迟多久发射；Start Lifetime - 粒子生命周期(存活多久)；Start Speed - 初始速度；\n\n        Start Size - 初始大小；Start Rotation - 初始旋转角度；Start Color - 初始颜色；\n\n        Stop Action - 当粒子效果结束时，可以选择使该对象自动销毁等\n\n    \n\n* Curve 面板\n\n    当进行“大小数值”设置时，选择带有Curve的模式就会出现一条线，如果高亮该线就可以在Curve面板编辑它，不高亮时不代表没有应用，只是没有显示在面板里。\n\n    ![curve](../../../assets/game/0105/curve.png)\n\n    * 最下方是一些系统预设，可通过实践来理解变化趋势。\n    * 面板左上角的数值是峰值。\n    * 在线上右键可以Add Key(新建关键帧)，右键Key可以编辑它的比例（如峰值是10，Edit Key的Value为0.3，则数值大小为3）。\n\n    \n\n* Gradient Editor 线性编辑器\n\n    当进行颜色设置，选择“Gradient”模式时，点击色条可打开编辑。\n\n    ![gradient](../../../assets/game/0105/gradient.png)\n\n    * Mode可以选择Blend或者Fixed，这个两端选择不同颜色，自己尝试一下就知道区别，一般使用Blend模式，过渡比较自然。\n\n    * 在色条上方或下方左键即可创建一个帧(小箭头)，点击它可编辑颜色或透明度。\n\n    * 色条上方的帧用于设置透明度，越黑表示越透明，Alpha为透明度数值(RGBA的A)，A越接近0越透明，Location表示在色条处于什么位置。\n\n    * 色条下方的帧用于设置颜色，经典的颜色面板，一看就懂。\n\n    * Presets 有个 New，可以把当前的set保存为预设，方便重复使用。\n\n        \n\n* Emission 模块\n\n    粒子发射大致有3种方式，随时间发射、随距离变化发射、特定时间点发射，这三种模式可叠加使用。\n\n    ![emission](../../../assets/game/0105/emission.png)\n\n    * Rate over Time 为每秒发射的粒子数量。\n\n    * Rate over Distance 为每发生单位距离变化发射的粒子数量。尾迹的制作很常用。\n\n    * Burst模块可控制特定时间点(Time)发射的粒子数量(Count)，Cycles表示发射轮次，Interval表示轮次间隔时间，Probability表示发射的可能概率。\n\n        \n\n* Shape 模块\n\n    Shape 用于描述发射器的形状，即粒子沿着什么样的形状发射出去的。不同的shape会有不同的属性设置，在Texture上方的那部分。这里给出一些自己的理解例子。\n\n    ![shape](../../../assets/game/0105/shape.png)\n\n    * 默认的Shape是Cone(圆锥)，将其Angle设为0就是圆柱，修改Thickness可以呈现环状。\n    * Sphere是球状发射，Hemisphere是半球状发射，可用于一些需要中心向外发散的3d效果。\n    * Box是盒装发射，也比较常用。修改Scale形成一定范围，粒子速度设为很小，在体积发射时，可以营造类似萤火虫等氛围感。\n    * Circle圆、Edge边都是二维图形，也常用。圆可以作中心向外发散的2d效果，边可以作一些刀锋效果。\n\n    \n\n* Trails 模块\n\n    如果会用GameObject的Trail，这个是相通的。可以用于制作拖尾效果。本人对这个也是初步了解状态，只会做很简陋的效果。\n\n    ![trail](../../../assets/game/0105/trail.png)\n\n    * Mode模式选择：Particles是对每个粒子单独使用；Ribbon是通过粒子间连接形成。\n    * Paricles模式：Ratio表示粒子会应用Trail的百分比；Lifetime为Trail的生命周期；Die with Particles表示是否随粒子销毁而销毁。\n    * Ribbon模式：Ribbon count表示连线的数量，注意这个数量不要超过粒子发射的数量。\n\n其他模块就不做介绍了，大多数看手册都能理解的。\n\n\n\n\n\n### 六、“雨云弹”制作\n\n​\t\t由于写详细教程会使篇幅太长，此处只放出相关参数图片。\n\n​\t\t个人通用的制作思路是：整体形状->发射的时间、数量及速度->主要效果->颜色调整。\n\n##### “雨云弹”结构图\n\n“雨云弹”分为四个部分：①上升雾，②云，③雨，④雨滴溅射。\n\n![对象结构图](../../../assets/game/0105/对象结构图.png)\n\n**注**：\n\n* Transform 组件参数放进模块参数图里供作参考。\n* 每个效果都不需要更改默认的Renderer渲染模块，勾上就行。\n\n:foggy:\n\n#### 1 上升雾\n\n##### 设计要点\n\n* 整体呈圆柱状上升喷射；\n* 向上喷射速度快时间短，要有”嘭“的感觉；\n* 有雾的绵密感。\n\n##### 效果图\n\n![up](../../../assets/game/0105/up.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![1transform](../../../assets/game/0105/1transform.png)\n\n* Main\n\n    ![1main](../../../assets/game/0105/1main.png)\n\n* Emission\n\n    ![1emission](../../../assets/game/0105/1emission.png)\n\n* Shape\n\n    ![1shape](../../../assets/game/0105/1shape.png)\n\n* Color over Lifetime\n\n    ![1color](../../../assets/game/0105/1color.png)\n\n\n\n---\n\n:cloud:\n\n#### 2 云\n\n##### 设计要点\n\n* 整体呈中心水平向外扩散；\n* 云的消散有渐隐效果；\n* 云的运动有波动感。\n\n##### 效果图\n\n![cloud](../../../assets/game/0105/cloud.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![2transform](../../../assets/game/0105/2transform.png)\n\n* Main\n\n    ![2main](../../../assets/game/0105/2main.png)\n\n* Emission\n\n    ![2emission](../../../assets/game/0105/2emission.png)\n\n* Shape\n\n    ![2shape](../../../assets/game/0105/2shape.png)\n\n* Velocity over Lifetime\n\n    ![2velocity](../../../assets/game/0105/2velocity.png)\n\n* Color over Lifetime\n\n    ![2color](../../../assets/game/0105/2color.png)\n\n* Size over Lifetime\n\n    ![2size](../../../assets/game/0105/2size.png)\n\n\n\n---\n\n:cloud_with_rain:\n\n#### 3 雨\n\n##### 设计要点\n\n* 整体呈圆柱形向下喷射；\n* 雨的下落要迅速，呈线状；\n* 雨碰撞地面触发雨滴溅射效果。\n\n##### 效果图\n\n![down](../../../assets/game/0105/down.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![3transform](../../../assets/game/0105/3transform.png)\n\n* Main\n\n    ![3main](../../../assets/game/0105/3main.png)\n\n* Emission\n\n    ![3emission](../../../assets/game/0105/3emission.png)\n\n* Shape\n\n    ![3shape](../../../assets/game/0105/3shape.png)\n\n* Size over Lifetime\n\n    ![3size](../../../assets/game/0105/3size.png)\n\n* Collision\n\n    ![3collision](../../../assets/game/0105/3collision.png)\n\n* Sub Emitters\n\n    需做好“**4 雨滴溅射**”部分再勾选修改该模块。\n\n    ![3sub](../../../assets/game/0105/3sub.png)\n\n* Trails\n\n    ![3trail](../../../assets/game/0105/3trail.png)\n\n\n\n---\n\n:watermelon:\n\n#### 4 雨滴溅射\n\n##### 设计要点\n\n* 整体呈中心斜向上向外溅射；\n* 雨滴溅射碰撞地面有反弹效果，营造动感。\n\n##### 效果图\n\n![circle](../../../assets/game/0105/circle.png)\n\n\n\n##### 模块参数图\n\n* Transform\n\n    ![4transform](../../../assets/game/0105/4transform.png)\n\n* Main\n\n    ![4main](../../../assets/game/0105/4main.png)\n\n* Emission\n\n    ![4emission](../../../assets/game/0105/4emission.png)\n\n* Shape\n\n    ![4shape](../../../assets/game/0105/4shape.png)\n\n* Color over Lifetime\n\n    ![4color](../../../assets/game/0105/4color.png)\n\n* Size over Lifetime\n\n    ![4size](../../../assets/game/0105/4size.png)\n\n* Noise\n\n    ![4noise](../../../assets/game/0105/4noise.png)\n\n* Collision\n\n    ![4collision](../../../assets/game/0105/4collision.png)\n\n\n\n---\n\n:star:\n\n**注**：\n\n还有一件事，因为我在Rain空对象挂了一个只用Main的ParticleSystem组件，修改了生命周期，并将Stop Action设置为Destroy，效果类似于这个粒子播放xx时长，结束了这个对象就会自动销毁。因为在粒子系统触发脚本(ParticleTrigger)中，当球体与地面碰撞，这个粒子系统会作为预制件实例化，每撞一次就会实例化一次，如果不及时销毁就会一直在那里，但其实它播放一次就不再用了。\n\n当然，如果不带这个组件，处理方式也可以修改为，一开始就在场景初始化这个粒子系统，并设置不播放，每检测碰撞，就对这个空对象下挂载的三个粒子系统进行同时播放一次。我觉得比较麻烦，就采取了第一种方法，这在性能方面可能有所增加。\n\n![5main](../../../assets/game/0105/5main.png)\n\n\n\n\n\n### 七、其他部分制作\n\n#### 1 背景\n\n​\t\t由5个带上黑色材质球的Plane简单拼凑组成，注意Plane的朝向并检查是否带有碰撞器。用于粒子系统碰撞及颜色衬托。\n\n![bg](../../../assets/game/0105/bg.png)\n\n\n\n#### 2 球体\n\n* 一个带有Trail子对象的球体，组件勾上碰撞器，加入刚体和碰撞检测的脚本，设置如下图。\n\n    ![ball](../../../assets/game/0105/ball.png)\n\n* 球体的Trail拖尾效果做得比较简陋，设置如下图。\n\n    ![btrail](../../../assets/game/0105/btrail.png)\n\n\n\n#### 3 相机\n\n​\t\t新建Camera，通过`ctrl+shift+f`将当前场景的视角作为Camera的视角，这里添加了俯视DownCamera和仰视UpCamera的视角。通过脚本添加预制件及视角切换。\n\n\n\n\n\n### 八、部分代码\n\n代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体，也不是主要部分。\n\n设计模式采用课堂上的设计模式，参考的UML图如下。画的很好了，这里就不重新画了。\n\n![design](../../../assets/game/0105/design.png)\n\n\n\n#### 代码结构图\n\n日常上代码结构图，dddd。\n\n![Scripts](../../../assets/game/0105/Scripts.png)\n\n\n\n#### ParticleTrigger\n\n粒子系统触发脚本。在球体碰撞的位置实例化粒子系统预制件Rain，它会自动播放的。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ParticleTrigger : MonoBehaviour\n{\n    void OnCollisionEnter(Collision other)\n    {\n        GameObject Rain = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/Rain\"));\n        Rain.transform.position = new Vector3(this.transform.position.x,0,this.transform.position.z);\n        this.gameObject.tag = \"Finish\";\n    }\n}\n\n```\n\n\n\n#### BallFlyAction\n\n球体飞行运动。在初始给一个瞬间的力以添加初速度，然后给一个持续向下的力模拟重力。模拟一个斜向上抛体运动。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BallFlyAction : SSAction\n{\n    private Vector3 force = new Vector3(0,80f,30f);\n    private Vector3 gravity = new Vector3(0,-0.3f,0);\n    // public float speed;\n    public static BallFlyAction GetBallFlyAction(){\n        BallFlyAction action = ScriptableObject.CreateInstance<BallFlyAction>();\n        return action;\n    }\n\n    public override void Start(){\n        \n        gameObject.GetComponent<Rigidbody>().isKinematic = false;\n        gameObject.GetComponent<Rigidbody>().velocity = Vector3.zero;\n        gameObject.GetComponent<Rigidbody>().AddForce(force,ForceMode.Impulse);\n    }\n\n    public override void Update()\n    {   \n        if (this.gameObject.tag == \"Finish\"){\n            this.destroy = true;\n        }  \n        gameObject.GetComponent<Rigidbody>().AddForce(gravity,ForceMode.Impulse);\n    }\n\n}\n```\n\n\n\n#### Interface\n\n包括`IUserController`与`ISceneController`,分别对应用户操作接口与场景行为接口。\n\nInit是获取球体，Shoot是发射球体，ChangeView用于切换视角，IsBallNull用于判断是否获取了球体；\n\nLoadResource是实例化背景及相机。\n\n```csharp\npublic interface IUserAction\n{\n    void Init();\n    void Shoot();\n    void ChangeView(char c);\n    bool IsBallNull();\n}\n\npublic interface ISceneController\n{\n    void LoadResource();\n}\n```\n\n\n\n#### SceneController\n\n场景控制器。用于控制整个场景，实现用户操作接口与场景行为接口。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SceneController : MonoBehaviour, IUserAction, ISceneController\n{\n    BallFactory factory;\n    public BallActionManager actionManager;\n    public myUserGUI userGUI;\n    public GameObject ball = null;\n    public Camera mainCamera;\n    public Camera upCamera;\n    public Camera downCamera;\n\n    void Start()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<BallFactory>();\n        factory = Singleton<BallFactory>.Instance;\n        actionManager = gameObject.AddComponent<BallActionManager>() as BallActionManager;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        mainCamera = Camera.main;\n        LoadResource();\n    }\n\n    public void LoadResource()\n    {\n        GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/Background\"));\n        upCamera = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/UpCamera\")).GetComponent<Camera>();\n        downCamera = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/DownCamera\")).GetComponent<Camera>();\n        ChangeView('z');\n    }\n    \n    public void ChangeView(char c)\n    {\n        if(c == 'z'){\n            mainCamera.enabled = true;\n            upCamera.enabled = false;\n            downCamera.enabled = false;\n        }\n        else if(c == 'x'){\n            mainCamera.enabled = false;\n            upCamera.enabled = true;\n            downCamera.enabled = false;\n        }\n        else{\n            mainCamera.enabled = false;\n            upCamera.enabled = false;\n            downCamera.enabled = true;\n        }\n    }\n\n    public void Init()\n    {\n        if(ball == null){\n            ball = factory.GetBall();\n        }\n    }\n\n    public void Shoot()\n    {\n        actionManager.MoveBall(ball);\n        ball = null;\n    }\n\n    public void Update()\n    {\n        factory.FreeBall();\n    }\n\n    public bool IsBallNull(){\n        return (ball == null);\n    }\n}\n```\n\n\n\n#### myUserGUI\n\n用户界面。用于监测按键及控制说明。按`z`,`x`,`c`可以切换视角，`space`可以获取球体，`j`可以发射球体。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    GUIStyle titleStyle = new GUIStyle();\n    GUIStyle textStyle = new GUIStyle();\n    void Start(){\n        action = Director.getInstance().currentSceneController as IUserAction;\n\n        titleStyle.normal.textColor = new Color(0.9f, 0.65f, 0.99f, 1);\n        titleStyle.normal.background = null;\n        titleStyle.fontSize = 30;\n        titleStyle.alignment = TextAnchor.MiddleCenter;\n\n        textStyle.normal.textColor = Color.white;\n        textStyle.normal.background = null;\n        textStyle.fontSize = 20;\n    }\n    void Update(){\n        if(!action.IsBallNull()){\n            if (Input.GetKeyDown(KeyCode.J)) action.Shoot();\n        }\n        if (Input.GetKeyDown(KeyCode.Space)) action.Init();\n        if (Input.GetKeyDown(KeyCode.Z)) action.ChangeView('z');\n        if (Input.GetKeyDown(KeyCode.X)) action.ChangeView('x');\n        if (Input.GetKeyDown(KeyCode.C)) action.ChangeView('c');\n    }\n\n    void OnGUI() {\n        GUI.Label(new Rect(Screen.width-200, 5, 200, 50), \"粒子效果展示\", titleStyle);\n        GUI.Label(new Rect(12, 12, 200, 50), \"视角切换：z, x, c\", textStyle);   \n        GUI.Label(new Rect(12, 42, 200, 50), \"取物：space\", textStyle);\n        GUI.Label(new Rect(12, 72, 200, 50), \"发射：j\", textStyle);    \n    }\n}\n```\n\n\n\n### 九、小结\n\n* 做粒子特效，除了灵感，理解也很重要，即使是默认素材，也能作出很多花样。\n* 内置粒子系统还可用于做粒子流编程，作出一些流体效果，这里没有深入研究。\n* 主要是学习了模块面板的使用，没怎么用api控制粒子系统，对api还不太熟悉。\n\n\n\n### 十、参考\n\n* [Unity官方手册ParticleSystem][link2]\n* [bilibili-梦小天幼的粒子系统详解系列视频][link3]\n* [bilibili-Unity官方的粒子效果制作教学][link4]\n\n[link2]:https://docs.unity.cn/cn/2021.3/Manual/ParticleSystemModules.html\n[link3]:https://www.bilibili.com/video/BV17V4y1K7Cn/?spm_id_from=333.999.0.0&vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\n[link4]:https://www.bilibili.com/video/BV1yy4y1B7ir/?from=search&seid=976722035306074353&spm_id_from=333.337.0.0&vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\n\n\n\n> 2023.01.06\t\t\tCauchy.\n\n","source":"_posts/2023/Homework8/Homework8.md","raw":"---\nlayout: post\ntitle:  \"Final: 粒子系统与流动效果\"\ndate:   2023-01-05 20:00:00 +0800\ntags: \n- unity \n- particle\ncategories: Game\nsubtitle: '粒子系统与流动效果'\n---\n\n> 作业简介：\n>\n> 1. 粒子效果制作(Particle System)\n>\n>     ps: 多图警告！加载时间可能较长，有加速器会快一些，思维导图可新建页面打开图片看大图。\n\n<!--more-->\n\n\n## 粒子效果制作\n\n### 一、设计要求\n\n* 粒子效果制作，必须带一个控制组件，控制粒子呈现效果。\n\n\n\n\n\n### 二、项目地址\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets\n\n\n\n\n\n### 三、效果展示图\n\n![show](../../../assets/game/0105/show.gif)\n\n\n\n\n\n### 四、写在前面\n\n​\t\tUnity实现特效的方式多种多样，这里主要使用的是内置粒子系统(Particle System)。还有一种更高级的Visual Effect Graph(VFX Graph) 。课上听和做对粒子系统有初步的了解。课后又对每个模块仔细地再阅读，跟着一些视频实践了一番，增加了不少的理解。感觉还是有自己的理解后，才能更好地制作自己的五毛特效。特效这方面感觉和美术更相关，搭配好的素材能制作出更丰富的东西。\n\n​\t\t这个特效，暂且称之为“雨云弹”特效吧。制作的灵感来源于《Splatoon 3》的大招墨雨云，因为做得不咋像就不放图了。用的是默认素材，真的是有手就能做。代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体。当球体与地面碰撞时，触发该特效并销毁球体，也算是有一个控制组件呈现粒子特效啦^-^。\n\n​\t\t那让我们开始吧。\n\n\n\n\n\n### 五、粒子系统模块简介\n\n:lollipop:\n\n####  模块总结图\n\n![ParticleSystem](../../../assets/game/0105/ParticleSystem.png)\n\n* 打“√”的模块是初始粒子系统默认勾选的，也是基本必须模块；打<u>下划线</u>的模块是“雨云弹”所用到的。\n* 这些模块都可以通过脚本 [`ParticleSystem.xx `][linkapi] 来访问使用。事实上，这里没有用脚本访问使用粒子系统，因为初始就直观地设定好了粒子效果，也无需在过程中修改它。\n\n[linkapi]:https://docs.unity.cn/cn/2021.3/ScriptReference/ParticleSystem.html\n\n:feet: \n\n#### 部分模块使用方法\n\n如果能看懂英文的，可以通过鼠标在英文上悬停以了解功能介绍。这里只介绍部分常用的。\n\n* 仿真执行控制窗口\n\n    用于控制粒子系统在场景的播放演示，可以看到场景中的粒子属性如粒子数量、速度区间等。\n\n    ![win](../../../assets/game/0105/win.png)\n\n    * Play - 播放；Restart - 重置；Stop - 停止播放；Playback Speed - 播放速度；Playback Time - 已播放时间；\n\n        Resimulate - 勾选后，粒子效果的更新会同步到仿真窗口；\n\n    \n\n* Main 模块\n\n    ![main](../../../assets/game/0105/main.png)\n\n    * 右边有三角形的都是下拉列表，可以更改选项或模式。右上角的\"＋\"号，可以选择显示所有模块或勾选的模块。\n\n    * Duration - 粒子一次发射多久(若是循环模式，则为每轮发射时长)；Looping - 是否循环播放；\n\n        Start Delay - 延迟多久发射；Start Lifetime - 粒子生命周期(存活多久)；Start Speed - 初始速度；\n\n        Start Size - 初始大小；Start Rotation - 初始旋转角度；Start Color - 初始颜色；\n\n        Stop Action - 当粒子效果结束时，可以选择使该对象自动销毁等\n\n    \n\n* Curve 面板\n\n    当进行“大小数值”设置时，选择带有Curve的模式就会出现一条线，如果高亮该线就可以在Curve面板编辑它，不高亮时不代表没有应用，只是没有显示在面板里。\n\n    ![curve](../../../assets/game/0105/curve.png)\n\n    * 最下方是一些系统预设，可通过实践来理解变化趋势。\n    * 面板左上角的数值是峰值。\n    * 在线上右键可以Add Key(新建关键帧)，右键Key可以编辑它的比例（如峰值是10，Edit Key的Value为0.3，则数值大小为3）。\n\n    \n\n* Gradient Editor 线性编辑器\n\n    当进行颜色设置，选择“Gradient”模式时，点击色条可打开编辑。\n\n    ![gradient](../../../assets/game/0105/gradient.png)\n\n    * Mode可以选择Blend或者Fixed，这个两端选择不同颜色，自己尝试一下就知道区别，一般使用Blend模式，过渡比较自然。\n\n    * 在色条上方或下方左键即可创建一个帧(小箭头)，点击它可编辑颜色或透明度。\n\n    * 色条上方的帧用于设置透明度，越黑表示越透明，Alpha为透明度数值(RGBA的A)，A越接近0越透明，Location表示在色条处于什么位置。\n\n    * 色条下方的帧用于设置颜色，经典的颜色面板，一看就懂。\n\n    * Presets 有个 New，可以把当前的set保存为预设，方便重复使用。\n\n        \n\n* Emission 模块\n\n    粒子发射大致有3种方式，随时间发射、随距离变化发射、特定时间点发射，这三种模式可叠加使用。\n\n    ![emission](../../../assets/game/0105/emission.png)\n\n    * Rate over Time 为每秒发射的粒子数量。\n\n    * Rate over Distance 为每发生单位距离变化发射的粒子数量。尾迹的制作很常用。\n\n    * Burst模块可控制特定时间点(Time)发射的粒子数量(Count)，Cycles表示发射轮次，Interval表示轮次间隔时间，Probability表示发射的可能概率。\n\n        \n\n* Shape 模块\n\n    Shape 用于描述发射器的形状，即粒子沿着什么样的形状发射出去的。不同的shape会有不同的属性设置，在Texture上方的那部分。这里给出一些自己的理解例子。\n\n    ![shape](../../../assets/game/0105/shape.png)\n\n    * 默认的Shape是Cone(圆锥)，将其Angle设为0就是圆柱，修改Thickness可以呈现环状。\n    * Sphere是球状发射，Hemisphere是半球状发射，可用于一些需要中心向外发散的3d效果。\n    * Box是盒装发射，也比较常用。修改Scale形成一定范围，粒子速度设为很小，在体积发射时，可以营造类似萤火虫等氛围感。\n    * Circle圆、Edge边都是二维图形，也常用。圆可以作中心向外发散的2d效果，边可以作一些刀锋效果。\n\n    \n\n* Trails 模块\n\n    如果会用GameObject的Trail，这个是相通的。可以用于制作拖尾效果。本人对这个也是初步了解状态，只会做很简陋的效果。\n\n    ![trail](../../../assets/game/0105/trail.png)\n\n    * Mode模式选择：Particles是对每个粒子单独使用；Ribbon是通过粒子间连接形成。\n    * Paricles模式：Ratio表示粒子会应用Trail的百分比；Lifetime为Trail的生命周期；Die with Particles表示是否随粒子销毁而销毁。\n    * Ribbon模式：Ribbon count表示连线的数量，注意这个数量不要超过粒子发射的数量。\n\n其他模块就不做介绍了，大多数看手册都能理解的。\n\n\n\n\n\n### 六、“雨云弹”制作\n\n​\t\t由于写详细教程会使篇幅太长，此处只放出相关参数图片。\n\n​\t\t个人通用的制作思路是：整体形状->发射的时间、数量及速度->主要效果->颜色调整。\n\n##### “雨云弹”结构图\n\n“雨云弹”分为四个部分：①上升雾，②云，③雨，④雨滴溅射。\n\n![对象结构图](../../../assets/game/0105/对象结构图.png)\n\n**注**：\n\n* Transform 组件参数放进模块参数图里供作参考。\n* 每个效果都不需要更改默认的Renderer渲染模块，勾上就行。\n\n:foggy:\n\n#### 1 上升雾\n\n##### 设计要点\n\n* 整体呈圆柱状上升喷射；\n* 向上喷射速度快时间短，要有”嘭“的感觉；\n* 有雾的绵密感。\n\n##### 效果图\n\n![up](../../../assets/game/0105/up.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![1transform](../../../assets/game/0105/1transform.png)\n\n* Main\n\n    ![1main](../../../assets/game/0105/1main.png)\n\n* Emission\n\n    ![1emission](../../../assets/game/0105/1emission.png)\n\n* Shape\n\n    ![1shape](../../../assets/game/0105/1shape.png)\n\n* Color over Lifetime\n\n    ![1color](../../../assets/game/0105/1color.png)\n\n\n\n---\n\n:cloud:\n\n#### 2 云\n\n##### 设计要点\n\n* 整体呈中心水平向外扩散；\n* 云的消散有渐隐效果；\n* 云的运动有波动感。\n\n##### 效果图\n\n![cloud](../../../assets/game/0105/cloud.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![2transform](../../../assets/game/0105/2transform.png)\n\n* Main\n\n    ![2main](../../../assets/game/0105/2main.png)\n\n* Emission\n\n    ![2emission](../../../assets/game/0105/2emission.png)\n\n* Shape\n\n    ![2shape](../../../assets/game/0105/2shape.png)\n\n* Velocity over Lifetime\n\n    ![2velocity](../../../assets/game/0105/2velocity.png)\n\n* Color over Lifetime\n\n    ![2color](../../../assets/game/0105/2color.png)\n\n* Size over Lifetime\n\n    ![2size](../../../assets/game/0105/2size.png)\n\n\n\n---\n\n:cloud_with_rain:\n\n#### 3 雨\n\n##### 设计要点\n\n* 整体呈圆柱形向下喷射；\n* 雨的下落要迅速，呈线状；\n* 雨碰撞地面触发雨滴溅射效果。\n\n##### 效果图\n\n![down](../../../assets/game/0105/down.png)\n\n##### 模块参数图\n\n* Transform\n\n    ![3transform](../../../assets/game/0105/3transform.png)\n\n* Main\n\n    ![3main](../../../assets/game/0105/3main.png)\n\n* Emission\n\n    ![3emission](../../../assets/game/0105/3emission.png)\n\n* Shape\n\n    ![3shape](../../../assets/game/0105/3shape.png)\n\n* Size over Lifetime\n\n    ![3size](../../../assets/game/0105/3size.png)\n\n* Collision\n\n    ![3collision](../../../assets/game/0105/3collision.png)\n\n* Sub Emitters\n\n    需做好“**4 雨滴溅射**”部分再勾选修改该模块。\n\n    ![3sub](../../../assets/game/0105/3sub.png)\n\n* Trails\n\n    ![3trail](../../../assets/game/0105/3trail.png)\n\n\n\n---\n\n:watermelon:\n\n#### 4 雨滴溅射\n\n##### 设计要点\n\n* 整体呈中心斜向上向外溅射；\n* 雨滴溅射碰撞地面有反弹效果，营造动感。\n\n##### 效果图\n\n![circle](../../../assets/game/0105/circle.png)\n\n\n\n##### 模块参数图\n\n* Transform\n\n    ![4transform](../../../assets/game/0105/4transform.png)\n\n* Main\n\n    ![4main](../../../assets/game/0105/4main.png)\n\n* Emission\n\n    ![4emission](../../../assets/game/0105/4emission.png)\n\n* Shape\n\n    ![4shape](../../../assets/game/0105/4shape.png)\n\n* Color over Lifetime\n\n    ![4color](../../../assets/game/0105/4color.png)\n\n* Size over Lifetime\n\n    ![4size](../../../assets/game/0105/4size.png)\n\n* Noise\n\n    ![4noise](../../../assets/game/0105/4noise.png)\n\n* Collision\n\n    ![4collision](../../../assets/game/0105/4collision.png)\n\n\n\n---\n\n:star:\n\n**注**：\n\n还有一件事，因为我在Rain空对象挂了一个只用Main的ParticleSystem组件，修改了生命周期，并将Stop Action设置为Destroy，效果类似于这个粒子播放xx时长，结束了这个对象就会自动销毁。因为在粒子系统触发脚本(ParticleTrigger)中，当球体与地面碰撞，这个粒子系统会作为预制件实例化，每撞一次就会实例化一次，如果不及时销毁就会一直在那里，但其实它播放一次就不再用了。\n\n当然，如果不带这个组件，处理方式也可以修改为，一开始就在场景初始化这个粒子系统，并设置不播放，每检测碰撞，就对这个空对象下挂载的三个粒子系统进行同时播放一次。我觉得比较麻烦，就采取了第一种方法，这在性能方面可能有所增加。\n\n![5main](../../../assets/game/0105/5main.png)\n\n\n\n\n\n### 七、其他部分制作\n\n#### 1 背景\n\n​\t\t由5个带上黑色材质球的Plane简单拼凑组成，注意Plane的朝向并检查是否带有碰撞器。用于粒子系统碰撞及颜色衬托。\n\n![bg](../../../assets/game/0105/bg.png)\n\n\n\n#### 2 球体\n\n* 一个带有Trail子对象的球体，组件勾上碰撞器，加入刚体和碰撞检测的脚本，设置如下图。\n\n    ![ball](../../../assets/game/0105/ball.png)\n\n* 球体的Trail拖尾效果做得比较简陋，设置如下图。\n\n    ![btrail](../../../assets/game/0105/btrail.png)\n\n\n\n#### 3 相机\n\n​\t\t新建Camera，通过`ctrl+shift+f`将当前场景的视角作为Camera的视角，这里添加了俯视DownCamera和仰视UpCamera的视角。通过脚本添加预制件及视角切换。\n\n\n\n\n\n### 八、部分代码\n\n代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体，也不是主要部分。\n\n设计模式采用课堂上的设计模式，参考的UML图如下。画的很好了，这里就不重新画了。\n\n![design](../../../assets/game/0105/design.png)\n\n\n\n#### 代码结构图\n\n日常上代码结构图，dddd。\n\n![Scripts](../../../assets/game/0105/Scripts.png)\n\n\n\n#### ParticleTrigger\n\n粒子系统触发脚本。在球体碰撞的位置实例化粒子系统预制件Rain，它会自动播放的。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ParticleTrigger : MonoBehaviour\n{\n    void OnCollisionEnter(Collision other)\n    {\n        GameObject Rain = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/Rain\"));\n        Rain.transform.position = new Vector3(this.transform.position.x,0,this.transform.position.z);\n        this.gameObject.tag = \"Finish\";\n    }\n}\n\n```\n\n\n\n#### BallFlyAction\n\n球体飞行运动。在初始给一个瞬间的力以添加初速度，然后给一个持续向下的力模拟重力。模拟一个斜向上抛体运动。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class BallFlyAction : SSAction\n{\n    private Vector3 force = new Vector3(0,80f,30f);\n    private Vector3 gravity = new Vector3(0,-0.3f,0);\n    // public float speed;\n    public static BallFlyAction GetBallFlyAction(){\n        BallFlyAction action = ScriptableObject.CreateInstance<BallFlyAction>();\n        return action;\n    }\n\n    public override void Start(){\n        \n        gameObject.GetComponent<Rigidbody>().isKinematic = false;\n        gameObject.GetComponent<Rigidbody>().velocity = Vector3.zero;\n        gameObject.GetComponent<Rigidbody>().AddForce(force,ForceMode.Impulse);\n    }\n\n    public override void Update()\n    {   \n        if (this.gameObject.tag == \"Finish\"){\n            this.destroy = true;\n        }  \n        gameObject.GetComponent<Rigidbody>().AddForce(gravity,ForceMode.Impulse);\n    }\n\n}\n```\n\n\n\n#### Interface\n\n包括`IUserController`与`ISceneController`,分别对应用户操作接口与场景行为接口。\n\nInit是获取球体，Shoot是发射球体，ChangeView用于切换视角，IsBallNull用于判断是否获取了球体；\n\nLoadResource是实例化背景及相机。\n\n```csharp\npublic interface IUserAction\n{\n    void Init();\n    void Shoot();\n    void ChangeView(char c);\n    bool IsBallNull();\n}\n\npublic interface ISceneController\n{\n    void LoadResource();\n}\n```\n\n\n\n#### SceneController\n\n场景控制器。用于控制整个场景，实现用户操作接口与场景行为接口。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class SceneController : MonoBehaviour, IUserAction, ISceneController\n{\n    BallFactory factory;\n    public BallActionManager actionManager;\n    public myUserGUI userGUI;\n    public GameObject ball = null;\n    public Camera mainCamera;\n    public Camera upCamera;\n    public Camera downCamera;\n\n    void Start()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<BallFactory>();\n        factory = Singleton<BallFactory>.Instance;\n        actionManager = gameObject.AddComponent<BallActionManager>() as BallActionManager;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        mainCamera = Camera.main;\n        LoadResource();\n    }\n\n    public void LoadResource()\n    {\n        GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/Background\"));\n        upCamera = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/UpCamera\")).GetComponent<Camera>();\n        downCamera = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/DownCamera\")).GetComponent<Camera>();\n        ChangeView('z');\n    }\n    \n    public void ChangeView(char c)\n    {\n        if(c == 'z'){\n            mainCamera.enabled = true;\n            upCamera.enabled = false;\n            downCamera.enabled = false;\n        }\n        else if(c == 'x'){\n            mainCamera.enabled = false;\n            upCamera.enabled = true;\n            downCamera.enabled = false;\n        }\n        else{\n            mainCamera.enabled = false;\n            upCamera.enabled = false;\n            downCamera.enabled = true;\n        }\n    }\n\n    public void Init()\n    {\n        if(ball == null){\n            ball = factory.GetBall();\n        }\n    }\n\n    public void Shoot()\n    {\n        actionManager.MoveBall(ball);\n        ball = null;\n    }\n\n    public void Update()\n    {\n        factory.FreeBall();\n    }\n\n    public bool IsBallNull(){\n        return (ball == null);\n    }\n}\n```\n\n\n\n#### myUserGUI\n\n用户界面。用于监测按键及控制说明。按`z`,`x`,`c`可以切换视角，`space`可以获取球体，`j`可以发射球体。\n\n```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    GUIStyle titleStyle = new GUIStyle();\n    GUIStyle textStyle = new GUIStyle();\n    void Start(){\n        action = Director.getInstance().currentSceneController as IUserAction;\n\n        titleStyle.normal.textColor = new Color(0.9f, 0.65f, 0.99f, 1);\n        titleStyle.normal.background = null;\n        titleStyle.fontSize = 30;\n        titleStyle.alignment = TextAnchor.MiddleCenter;\n\n        textStyle.normal.textColor = Color.white;\n        textStyle.normal.background = null;\n        textStyle.fontSize = 20;\n    }\n    void Update(){\n        if(!action.IsBallNull()){\n            if (Input.GetKeyDown(KeyCode.J)) action.Shoot();\n        }\n        if (Input.GetKeyDown(KeyCode.Space)) action.Init();\n        if (Input.GetKeyDown(KeyCode.Z)) action.ChangeView('z');\n        if (Input.GetKeyDown(KeyCode.X)) action.ChangeView('x');\n        if (Input.GetKeyDown(KeyCode.C)) action.ChangeView('c');\n    }\n\n    void OnGUI() {\n        GUI.Label(new Rect(Screen.width-200, 5, 200, 50), \"粒子效果展示\", titleStyle);\n        GUI.Label(new Rect(12, 12, 200, 50), \"视角切换：z, x, c\", textStyle);   \n        GUI.Label(new Rect(12, 42, 200, 50), \"取物：space\", textStyle);\n        GUI.Label(new Rect(12, 72, 200, 50), \"发射：j\", textStyle);    \n    }\n}\n```\n\n\n\n### 九、小结\n\n* 做粒子特效，除了灵感，理解也很重要，即使是默认素材，也能作出很多花样。\n* 内置粒子系统还可用于做粒子流编程，作出一些流体效果，这里没有深入研究。\n* 主要是学习了模块面板的使用，没怎么用api控制粒子系统，对api还不太熟悉。\n\n\n\n### 十、参考\n\n* [Unity官方手册ParticleSystem][link2]\n* [bilibili-梦小天幼的粒子系统详解系列视频][link3]\n* [bilibili-Unity官方的粒子效果制作教学][link4]\n\n[link2]:https://docs.unity.cn/cn/2021.3/Manual/ParticleSystemModules.html\n[link3]:https://www.bilibili.com/video/BV17V4y1K7Cn/?spm_id_from=333.999.0.0&vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\n[link4]:https://www.bilibili.com/video/BV1yy4y1B7ir/?from=search&seid=976722035306074353&spm_id_from=333.337.0.0&vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\n\n\n\n> 2023.01.06\t\t\tCauchy.\n\n","slug":"2023/Homework8/Homework8","published":1,"updated":"2023-05-19T07:05:35.995Z","comments":1,"photos":[],"link":"","_id":"clhudj1f200027g848xoydtle","content":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>\n<p>粒子效果制作(Particle System)</p>\n<p>ps: 多图警告！加载时间可能较长，有加速器会快一些，思维导图可新建页面打开图片看大图。</p>\n</li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"粒子效果制作\">粒子效果制作</h2>\n<h3 id=\"一、设计要求\">一、设计要求</h3>\n<ul>\n<li>粒子效果制作，必须带一个控制组件，控制粒子呈现效果。</li>\n</ul>\n<h3 id=\"二、项目地址\">二、项目地址</h3>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets</a></p>\n<h3 id=\"三、效果展示图\">三、效果展示图</h3>\n<p><img src=\"../../../assets/game/0105/show.gif\" alt=\"show\"></p>\n<h3 id=\"四、写在前面\">四、写在前面</h3>\n<p>​\t\tUnity实现特效的方式多种多样，这里主要使用的是内置粒子系统(Particle System)。还有一种更高级的Visual Effect Graph(VFX Graph) 。课上听和做对粒子系统有初步的了解。课后又对每个模块仔细地再阅读，跟着一些视频实践了一番，增加了不少的理解。感觉还是有自己的理解后，才能更好地制作自己的五毛特效。特效这方面感觉和美术更相关，搭配好的素材能制作出更丰富的东西。</p>\n<p>​\t\t这个特效，暂且称之为“雨云弹”特效吧。制作的灵感来源于《Splatoon 3》的大招墨雨云，因为做得不咋像就不放图了。用的是默认素材，真的是有手就能做。代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体。当球体与地面碰撞时，触发该特效并销毁球体，也算是有一个控制组件呈现粒子特效啦<sup>-</sup>。</p>\n<p>​\t\t那让我们开始吧。</p>\n<h3 id=\"五、粒子系统模块简介\">五、粒子系统模块简介</h3>\n<p>🍭</p>\n<h4 id=\"模块总结图\">模块总结图</h4>\n<p><img src=\"../../../assets/game/0105/ParticleSystem.png\" alt=\"ParticleSystem\"></p>\n<ul>\n<li>打“√”的模块是初始粒子系统默认勾选的，也是基本必须模块；打<u>下划线</u>的模块是“雨云弹”所用到的。</li>\n<li>这些模块都可以通过脚本 <a href=\"https://docs.unity.cn/cn/2021.3/ScriptReference/ParticleSystem.html\"><code>ParticleSystem.xx </code></a> 来访问使用。事实上，这里没有用脚本访问使用粒子系统，因为初始就直观地设定好了粒子效果，也无需在过程中修改它。</li>\n</ul>\n<p>🐾</p>\n<h4 id=\"部分模块使用方法\">部分模块使用方法</h4>\n<p>如果能看懂英文的，可以通过鼠标在英文上悬停以了解功能介绍。这里只介绍部分常用的。</p>\n<ul>\n<li>\n<p>仿真执行控制窗口</p>\n<p>用于控制粒子系统在场景的播放演示，可以看到场景中的粒子属性如粒子数量、速度区间等。</p>\n<p><img src=\"../../../assets/game/0105/win.png\" alt=\"win\"></p>\n<ul>\n<li>\n<p>Play - 播放；Restart - 重置；Stop - 停止播放；Playback Speed - 播放速度；Playback Time - 已播放时间；</p>\n<p>Resimulate - 勾选后，粒子效果的更新会同步到仿真窗口；</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Main 模块</p>\n<p><img src=\"../../../assets/game/0105/main.png\" alt=\"main\"></p>\n<ul>\n<li>\n<p>右边有三角形的都是下拉列表，可以更改选项或模式。右上角的&quot;＋&quot;号，可以选择显示所有模块或勾选的模块。</p>\n</li>\n<li>\n<p>Duration - 粒子一次发射多久(若是循环模式，则为每轮发射时长)；Looping - 是否循环播放；</p>\n<p>Start Delay - 延迟多久发射；Start Lifetime - 粒子生命周期(存活多久)；Start Speed - 初始速度；</p>\n<p>Start Size - 初始大小；Start Rotation - 初始旋转角度；Start Color - 初始颜色；</p>\n<p>Stop Action - 当粒子效果结束时，可以选择使该对象自动销毁等</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Curve 面板</p>\n<p>当进行“大小数值”设置时，选择带有Curve的模式就会出现一条线，如果高亮该线就可以在Curve面板编辑它，不高亮时不代表没有应用，只是没有显示在面板里。</p>\n<p><img src=\"../../../assets/game/0105/curve.png\" alt=\"curve\"></p>\n<ul>\n<li>最下方是一些系统预设，可通过实践来理解变化趋势。</li>\n<li>面板左上角的数值是峰值。</li>\n<li>在线上右键可以Add Key(新建关键帧)，右键Key可以编辑它的比例（如峰值是10，Edit Key的Value为0.3，则数值大小为3）。</li>\n</ul>\n</li>\n<li>\n<p>Gradient Editor 线性编辑器</p>\n<p>当进行颜色设置，选择“Gradient”模式时，点击色条可打开编辑。</p>\n<p><img src=\"../../../assets/game/0105/gradient.png\" alt=\"gradient\"></p>\n<ul>\n<li>\n<p>Mode可以选择Blend或者Fixed，这个两端选择不同颜色，自己尝试一下就知道区别，一般使用Blend模式，过渡比较自然。</p>\n</li>\n<li>\n<p>在色条上方或下方左键即可创建一个帧(小箭头)，点击它可编辑颜色或透明度。</p>\n</li>\n<li>\n<p>色条上方的帧用于设置透明度，越黑表示越透明，Alpha为透明度数值(RGBA的A)，A越接近0越透明，Location表示在色条处于什么位置。</p>\n</li>\n<li>\n<p>色条下方的帧用于设置颜色，经典的颜色面板，一看就懂。</p>\n</li>\n<li>\n<p>Presets 有个 New，可以把当前的set保存为预设，方便重复使用。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Emission 模块</p>\n<p>粒子发射大致有3种方式，随时间发射、随距离变化发射、特定时间点发射，这三种模式可叠加使用。</p>\n<p><img src=\"../../../assets/game/0105/emission.png\" alt=\"emission\"></p>\n<ul>\n<li>\n<p>Rate over Time 为每秒发射的粒子数量。</p>\n</li>\n<li>\n<p>Rate over Distance 为每发生单位距离变化发射的粒子数量。尾迹的制作很常用。</p>\n</li>\n<li>\n<p>Burst模块可控制特定时间点(Time)发射的粒子数量(Count)，Cycles表示发射轮次，Interval表示轮次间隔时间，Probability表示发射的可能概率。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Shape 模块</p>\n<p>Shape 用于描述发射器的形状，即粒子沿着什么样的形状发射出去的。不同的shape会有不同的属性设置，在Texture上方的那部分。这里给出一些自己的理解例子。</p>\n<p><img src=\"../../../assets/game/0105/shape.png\" alt=\"shape\"></p>\n<ul>\n<li>默认的Shape是Cone(圆锥)，将其Angle设为0就是圆柱，修改Thickness可以呈现环状。</li>\n<li>Sphere是球状发射，Hemisphere是半球状发射，可用于一些需要中心向外发散的3d效果。</li>\n<li>Box是盒装发射，也比较常用。修改Scale形成一定范围，粒子速度设为很小，在体积发射时，可以营造类似萤火虫等氛围感。</li>\n<li>Circle圆、Edge边都是二维图形，也常用。圆可以作中心向外发散的2d效果，边可以作一些刀锋效果。</li>\n</ul>\n</li>\n<li>\n<p>Trails 模块</p>\n<p>如果会用GameObject的Trail，这个是相通的。可以用于制作拖尾效果。本人对这个也是初步了解状态，只会做很简陋的效果。</p>\n<p><img src=\"../../../assets/game/0105/trail.png\" alt=\"trail\"></p>\n<ul>\n<li>Mode模式选择：Particles是对每个粒子单独使用；Ribbon是通过粒子间连接形成。</li>\n<li>Paricles模式：Ratio表示粒子会应用Trail的百分比；Lifetime为Trail的生命周期；Die with Particles表示是否随粒子销毁而销毁。</li>\n<li>Ribbon模式：Ribbon count表示连线的数量，注意这个数量不要超过粒子发射的数量。</li>\n</ul>\n</li>\n</ul>\n<p>其他模块就不做介绍了，大多数看手册都能理解的。</p>\n<h3 id=\"六、“雨云弹”制作\">六、“雨云弹”制作</h3>\n<p>​\t\t由于写详细教程会使篇幅太长，此处只放出相关参数图片。</p>\n<p>​\t\t个人通用的制作思路是：整体形状-&gt;发射的时间、数量及速度-&gt;主要效果-&gt;颜色调整。</p>\n<h5 id=\"“雨云弹”结构图\">“雨云弹”结构图</h5>\n<p>“雨云弹”分为四个部分：①上升雾，②云，③雨，④雨滴溅射。</p>\n<p><img src=\"../../../assets/game/0105/%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%84%E5%9B%BE.png\" alt=\"对象结构图\"></p>\n<p><strong>注</strong>：</p>\n<ul>\n<li>Transform 组件参数放进模块参数图里供作参考。</li>\n<li>每个效果都不需要更改默认的Renderer渲染模块，勾上就行。</li>\n</ul>\n<p>🌁</p>\n<h4 id=\"1-上升雾\">1 上升雾</h4>\n<h5 id=\"设计要点\">设计要点</h5>\n<ul>\n<li>整体呈圆柱状上升喷射；</li>\n<li>向上喷射速度快时间短，要有”嘭“的感觉；</li>\n<li>有雾的绵密感。</li>\n</ul>\n<h5 id=\"效果图\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/up.png\" alt=\"up\"></p>\n<h5 id=\"模块参数图\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/1transform.png\" alt=\"1transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/1main.png\" alt=\"1main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/1emission.png\" alt=\"1emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/1shape.png\" alt=\"1shape\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/1color.png\" alt=\"1color\"></p>\n</li>\n</ul>\n<hr>\n<p>☁️</p>\n<h4 id=\"2-云\">2 云</h4>\n<h5 id=\"设计要点-v2\">设计要点</h5>\n<ul>\n<li>整体呈中心水平向外扩散；</li>\n<li>云的消散有渐隐效果；</li>\n<li>云的运动有波动感。</li>\n</ul>\n<h5 id=\"效果图-v2\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/cloud.png\" alt=\"cloud\"></p>\n<h5 id=\"模块参数图-v2\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/2transform.png\" alt=\"2transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/2main.png\" alt=\"2main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/2emission.png\" alt=\"2emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/2shape.png\" alt=\"2shape\"></p>\n</li>\n<li>\n<p>Velocity over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2velocity.png\" alt=\"2velocity\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2color.png\" alt=\"2color\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2size.png\" alt=\"2size\"></p>\n</li>\n</ul>\n<hr>\n<p>🌧️</p>\n<h4 id=\"3-雨\">3 雨</h4>\n<h5 id=\"设计要点-v3\">设计要点</h5>\n<ul>\n<li>整体呈圆柱形向下喷射；</li>\n<li>雨的下落要迅速，呈线状；</li>\n<li>雨碰撞地面触发雨滴溅射效果。</li>\n</ul>\n<h5 id=\"效果图-v3\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/down.png\" alt=\"down\"></p>\n<h5 id=\"模块参数图-v3\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/3transform.png\" alt=\"3transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/3main.png\" alt=\"3main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/3emission.png\" alt=\"3emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/3shape.png\" alt=\"3shape\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/3size.png\" alt=\"3size\"></p>\n</li>\n<li>\n<p>Collision</p>\n<p><img src=\"../../../assets/game/0105/3collision.png\" alt=\"3collision\"></p>\n</li>\n<li>\n<p>Sub Emitters</p>\n<p>需做好“<strong>4 雨滴溅射</strong>”部分再勾选修改该模块。</p>\n<p><img src=\"../../../assets/game/0105/3sub.png\" alt=\"3sub\"></p>\n</li>\n<li>\n<p>Trails</p>\n<p><img src=\"../../../assets/game/0105/3trail.png\" alt=\"3trail\"></p>\n</li>\n</ul>\n<hr>\n<p>🍉</p>\n<h4 id=\"4-雨滴溅射\">4 雨滴溅射</h4>\n<h5 id=\"设计要点-v4\">设计要点</h5>\n<ul>\n<li>整体呈中心斜向上向外溅射；</li>\n<li>雨滴溅射碰撞地面有反弹效果，营造动感。</li>\n</ul>\n<h5 id=\"效果图-v4\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/circle.png\" alt=\"circle\"></p>\n<h5 id=\"模块参数图-v4\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/4transform.png\" alt=\"4transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/4main.png\" alt=\"4main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/4emission.png\" alt=\"4emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/4shape.png\" alt=\"4shape\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/4color.png\" alt=\"4color\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/4size.png\" alt=\"4size\"></p>\n</li>\n<li>\n<p>Noise</p>\n<p><img src=\"../../../assets/game/0105/4noise.png\" alt=\"4noise\"></p>\n</li>\n<li>\n<p>Collision</p>\n<p><img src=\"../../../assets/game/0105/4collision.png\" alt=\"4collision\"></p>\n</li>\n</ul>\n<hr>\n<p>⭐</p>\n<p><strong>注</strong>：</p>\n<p>还有一件事，因为我在Rain空对象挂了一个只用Main的ParticleSystem组件，修改了生命周期，并将Stop Action设置为Destroy，效果类似于这个粒子播放xx时长，结束了这个对象就会自动销毁。因为在粒子系统触发脚本(ParticleTrigger)中，当球体与地面碰撞，这个粒子系统会作为预制件实例化，每撞一次就会实例化一次，如果不及时销毁就会一直在那里，但其实它播放一次就不再用了。</p>\n<p>当然，如果不带这个组件，处理方式也可以修改为，一开始就在场景初始化这个粒子系统，并设置不播放，每检测碰撞，就对这个空对象下挂载的三个粒子系统进行同时播放一次。我觉得比较麻烦，就采取了第一种方法，这在性能方面可能有所增加。</p>\n<p><img src=\"../../../assets/game/0105/5main.png\" alt=\"5main\"></p>\n<h3 id=\"七、其他部分制作\">七、其他部分制作</h3>\n<h4 id=\"1-背景\">1 背景</h4>\n<p>​\t\t由5个带上黑色材质球的Plane简单拼凑组成，注意Plane的朝向并检查是否带有碰撞器。用于粒子系统碰撞及颜色衬托。</p>\n<p><img src=\"../../../assets/game/0105/bg.png\" alt=\"bg\"></p>\n<h4 id=\"2-球体\">2 球体</h4>\n<ul>\n<li>\n<p>一个带有Trail子对象的球体，组件勾上碰撞器，加入刚体和碰撞检测的脚本，设置如下图。</p>\n<p><img src=\"../../../assets/game/0105/ball.png\" alt=\"ball\"></p>\n</li>\n<li>\n<p>球体的Trail拖尾效果做得比较简陋，设置如下图。</p>\n<p><img src=\"../../../assets/game/0105/btrail.png\" alt=\"btrail\"></p>\n</li>\n</ul>\n<h4 id=\"3-相机\">3 相机</h4>\n<p>​\t\t新建Camera，通过<code>ctrl+shift+f</code>将当前场景的视角作为Camera的视角，这里添加了俯视DownCamera和仰视UpCamera的视角。通过脚本添加预制件及视角切换。</p>\n<h3 id=\"八、部分代码\">八、部分代码</h3>\n<p>代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体，也不是主要部分。</p>\n<p>设计模式采用课堂上的设计模式，参考的UML图如下。画的很好了，这里就不重新画了。</p>\n<p><img src=\"../../../assets/game/0105/design.png\" alt=\"design\"></p>\n<h4 id=\"代码结构图\">代码结构图</h4>\n<p>日常上代码结构图，dddd。</p>\n<p><img src=\"../../../assets/game/0105/Scripts.png\" alt=\"Scripts\"></p>\n<h4 id=\"ParticleTrigger\">ParticleTrigger</h4>\n<p>粒子系统触发脚本。在球体碰撞的位置实例化粒子系统预制件Rain，它会自动播放的。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ParticleTrigger</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnCollisionEnter</span>(<span class=\"hljs-params\">Collision other</span>)</span><br>    &#123;<br>        GameObject Rain = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Rain&quot;</span>));<br>        Rain.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-keyword\">this</span>.transform.position.x,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">this</span>.transform.position.z);<br>        <span class=\"hljs-keyword\">this</span>.gameObject.tag = <span class=\"hljs-string\">&quot;Finish&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"BallFlyAction\">BallFlyAction</h4>\n<p>球体飞行运动。在初始给一个瞬间的力以添加初速度，然后给一个持续向下的力模拟重力。模拟一个斜向上抛体运动。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BallFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> Vector3 force = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">80f</span>,<span class=\"hljs-number\">30f</span>);<br>    <span class=\"hljs-keyword\">private</span> Vector3 gravity = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-0.3f</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-comment\">// public float speed;</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> BallFlyAction <span class=\"hljs-title\">GetBallFlyAction</span>()</span>&#123;<br>        BallFlyAction action = ScriptableObject.CreateInstance&lt;BallFlyAction&gt;();<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        <br>        gameObject.GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">false</span>;<br>        gameObject.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.zero;<br>        gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force,ForceMode.Impulse);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;   <br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject.tag == <span class=\"hljs-string\">&quot;Finish&quot;</span>)&#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>        &#125;  <br>        gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(gravity,ForceMode.Impulse);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Interface\">Interface</h4>\n<p>包括<code>IUserController</code>与<code>ISceneController</code>,分别对应用户操作接口与场景行为接口。</p>\n<p>Init是获取球体，Shoot是发射球体，ChangeView用于切换视角，IsBallNull用于判断是否获取了球体；</p>\n<p>LoadResource是实例化背景及相机。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Shoot</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ChangeView</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">char</span> c</span>)</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsBallNull</span>()</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"SceneController\">SceneController</h4>\n<p>场景控制器。用于控制整个场景，实现用户操作接口与场景行为接口。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SceneController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">IUserAction</span>, <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    BallFactory factory;<br>    <span class=\"hljs-keyword\">public</span> BallActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br>    <span class=\"hljs-keyword\">public</span> GameObject ball = <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-keyword\">public</span> Camera mainCamera;<br>    <span class=\"hljs-keyword\">public</span> Camera upCamera;<br>    <span class=\"hljs-keyword\">public</span> Camera downCamera;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;BallFactory&gt;();<br>        factory = Singleton&lt;BallFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;BallActionManager&gt;() <span class=\"hljs-keyword\">as</span> BallActionManager;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        mainCamera = Camera.main;<br>        LoadResource();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Background&quot;</span>));<br>        upCamera = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/UpCamera&quot;</span>)).GetComponent&lt;Camera&gt;();<br>        downCamera = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/DownCamera&quot;</span>)).GetComponent&lt;Camera&gt;();<br>        ChangeView(<span class=\"hljs-string\">&#x27;z&#x27;</span>);<br>    &#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ChangeView</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">char</span> c</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(c == <span class=\"hljs-string\">&#x27;z&#x27;</span>)&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(c == <span class=\"hljs-string\">&#x27;x&#x27;</span>)&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(ball == <span class=\"hljs-literal\">null</span>)&#123;<br>            ball = factory.GetBall();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Shoot</span>()</span><br>    &#123;<br>        actionManager.MoveBall(ball);<br>        ball = <span class=\"hljs-literal\">null</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        factory.FreeBall();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsBallNull</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> (ball == <span class=\"hljs-literal\">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"myUserGUI\">myUserGUI</h4>\n<p>用户界面。用于监测按键及控制说明。按<code>z</code>,<code>x</code>,<code>c</code>可以切换视角，<code>space</code>可以获取球体，<code>j</code>可以发射球体。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    GUIStyle titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    GUIStyle textStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br><br>        titleStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.9f</span>, <span class=\"hljs-number\">0.65f</span>, <span class=\"hljs-number\">0.99f</span>, <span class=\"hljs-number\">1</span>);<br>        titleStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        titleStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        titleStyle.alignment = TextAnchor.MiddleCenter;<br><br>        textStyle.normal.textColor = Color.white;<br>        textStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        textStyle.fontSize = <span class=\"hljs-number\">20</span>;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(!action.IsBallNull())&#123;<br>            <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.J)) action.Shoot();<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.Space)) action.Init();<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.Z)) action.ChangeView(<span class=\"hljs-string\">&#x27;z&#x27;</span>);<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.X)) action.ChangeView(<span class=\"hljs-string\">&#x27;x&#x27;</span>);<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.C)) action.ChangeView(<span class=\"hljs-string\">&#x27;c&#x27;</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width<span class=\"hljs-number\">-200</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;粒子效果展示&quot;</span>, titleStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;视角切换：z, x, c&quot;</span>, textStyle);   <br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">42</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;取物：space&quot;</span>, textStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">72</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;发射：j&quot;</span>, textStyle);    <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"九、小结\">九、小结</h3>\n<ul>\n<li>做粒子特效，除了灵感，理解也很重要，即使是默认素材，也能作出很多花样。</li>\n<li>内置粒子系统还可用于做粒子流编程，作出一些流体效果，这里没有深入研究。</li>\n<li>主要是学习了模块面板的使用，没怎么用api控制粒子系统，对api还不太熟悉。</li>\n</ul>\n<h3 id=\"十、参考\">十、参考</h3>\n<ul>\n<li><a href=\"https://docs.unity.cn/cn/2021.3/Manual/ParticleSystemModules.html\">Unity官方手册ParticleSystem</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV17V4y1K7Cn/?spm_id_from=333.999.0.0&amp;vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\">bilibili-梦小天幼的粒子系统详解系列视频</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1yy4y1B7ir/?from=search&amp;seid=976722035306074353&amp;spm_id_from=333.337.0.0&amp;vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\">bilibili-Unity官方的粒子效果制作教学</a></li>\n</ul>\n<blockquote>\n<p>2023.01.06\t\t\tCauchy.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>\n<p>粒子效果制作(Particle System)</p>\n<p>ps: 多图警告！加载时间可能较长，有加速器会快一些，思维导图可新建页面打开图片看大图。</p>\n</li>\n</ol>\n</blockquote>","more":"<h2 id=\"粒子效果制作\">粒子效果制作</h2>\n<h3 id=\"一、设计要求\">一、设计要求</h3>\n<ul>\n<li>粒子效果制作，必须带一个控制组件，控制粒子呈现效果。</li>\n</ul>\n<h3 id=\"二、项目地址\">二、项目地址</h3>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw8/Assets</a></p>\n<h3 id=\"三、效果展示图\">三、效果展示图</h3>\n<p><img src=\"../../../assets/game/0105/show.gif\" alt=\"show\"></p>\n<h3 id=\"四、写在前面\">四、写在前面</h3>\n<p>​\t\tUnity实现特效的方式多种多样，这里主要使用的是内置粒子系统(Particle System)。还有一种更高级的Visual Effect Graph(VFX Graph) 。课上听和做对粒子系统有初步的了解。课后又对每个模块仔细地再阅读，跟着一些视频实践了一番，增加了不少的理解。感觉还是有自己的理解后，才能更好地制作自己的五毛特效。特效这方面感觉和美术更相关，搭配好的素材能制作出更丰富的东西。</p>\n<p>​\t\t这个特效，暂且称之为“雨云弹”特效吧。制作的灵感来源于《Splatoon 3》的大招墨雨云，因为做得不咋像就不放图了。用的是默认素材，真的是有手就能做。代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体。当球体与地面碰撞时，触发该特效并销毁球体，也算是有一个控制组件呈现粒子特效啦<sup>-</sup>。</p>\n<p>​\t\t那让我们开始吧。</p>\n<h3 id=\"五、粒子系统模块简介\">五、粒子系统模块简介</h3>\n<p>🍭</p>\n<h4 id=\"模块总结图\">模块总结图</h4>\n<p><img src=\"../../../assets/game/0105/ParticleSystem.png\" alt=\"ParticleSystem\"></p>\n<ul>\n<li>打“√”的模块是初始粒子系统默认勾选的，也是基本必须模块；打<u>下划线</u>的模块是“雨云弹”所用到的。</li>\n<li>这些模块都可以通过脚本 <a href=\"https://docs.unity.cn/cn/2021.3/ScriptReference/ParticleSystem.html\"><code>ParticleSystem.xx </code></a> 来访问使用。事实上，这里没有用脚本访问使用粒子系统，因为初始就直观地设定好了粒子效果，也无需在过程中修改它。</li>\n</ul>\n<p>🐾</p>\n<h4 id=\"部分模块使用方法\">部分模块使用方法</h4>\n<p>如果能看懂英文的，可以通过鼠标在英文上悬停以了解功能介绍。这里只介绍部分常用的。</p>\n<ul>\n<li>\n<p>仿真执行控制窗口</p>\n<p>用于控制粒子系统在场景的播放演示，可以看到场景中的粒子属性如粒子数量、速度区间等。</p>\n<p><img src=\"../../../assets/game/0105/win.png\" alt=\"win\"></p>\n<ul>\n<li>\n<p>Play - 播放；Restart - 重置；Stop - 停止播放；Playback Speed - 播放速度；Playback Time - 已播放时间；</p>\n<p>Resimulate - 勾选后，粒子效果的更新会同步到仿真窗口；</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Main 模块</p>\n<p><img src=\"../../../assets/game/0105/main.png\" alt=\"main\"></p>\n<ul>\n<li>\n<p>右边有三角形的都是下拉列表，可以更改选项或模式。右上角的&quot;＋&quot;号，可以选择显示所有模块或勾选的模块。</p>\n</li>\n<li>\n<p>Duration - 粒子一次发射多久(若是循环模式，则为每轮发射时长)；Looping - 是否循环播放；</p>\n<p>Start Delay - 延迟多久发射；Start Lifetime - 粒子生命周期(存活多久)；Start Speed - 初始速度；</p>\n<p>Start Size - 初始大小；Start Rotation - 初始旋转角度；Start Color - 初始颜色；</p>\n<p>Stop Action - 当粒子效果结束时，可以选择使该对象自动销毁等</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Curve 面板</p>\n<p>当进行“大小数值”设置时，选择带有Curve的模式就会出现一条线，如果高亮该线就可以在Curve面板编辑它，不高亮时不代表没有应用，只是没有显示在面板里。</p>\n<p><img src=\"../../../assets/game/0105/curve.png\" alt=\"curve\"></p>\n<ul>\n<li>最下方是一些系统预设，可通过实践来理解变化趋势。</li>\n<li>面板左上角的数值是峰值。</li>\n<li>在线上右键可以Add Key(新建关键帧)，右键Key可以编辑它的比例（如峰值是10，Edit Key的Value为0.3，则数值大小为3）。</li>\n</ul>\n</li>\n<li>\n<p>Gradient Editor 线性编辑器</p>\n<p>当进行颜色设置，选择“Gradient”模式时，点击色条可打开编辑。</p>\n<p><img src=\"../../../assets/game/0105/gradient.png\" alt=\"gradient\"></p>\n<ul>\n<li>\n<p>Mode可以选择Blend或者Fixed，这个两端选择不同颜色，自己尝试一下就知道区别，一般使用Blend模式，过渡比较自然。</p>\n</li>\n<li>\n<p>在色条上方或下方左键即可创建一个帧(小箭头)，点击它可编辑颜色或透明度。</p>\n</li>\n<li>\n<p>色条上方的帧用于设置透明度，越黑表示越透明，Alpha为透明度数值(RGBA的A)，A越接近0越透明，Location表示在色条处于什么位置。</p>\n</li>\n<li>\n<p>色条下方的帧用于设置颜色，经典的颜色面板，一看就懂。</p>\n</li>\n<li>\n<p>Presets 有个 New，可以把当前的set保存为预设，方便重复使用。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Emission 模块</p>\n<p>粒子发射大致有3种方式，随时间发射、随距离变化发射、特定时间点发射，这三种模式可叠加使用。</p>\n<p><img src=\"../../../assets/game/0105/emission.png\" alt=\"emission\"></p>\n<ul>\n<li>\n<p>Rate over Time 为每秒发射的粒子数量。</p>\n</li>\n<li>\n<p>Rate over Distance 为每发生单位距离变化发射的粒子数量。尾迹的制作很常用。</p>\n</li>\n<li>\n<p>Burst模块可控制特定时间点(Time)发射的粒子数量(Count)，Cycles表示发射轮次，Interval表示轮次间隔时间，Probability表示发射的可能概率。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Shape 模块</p>\n<p>Shape 用于描述发射器的形状，即粒子沿着什么样的形状发射出去的。不同的shape会有不同的属性设置，在Texture上方的那部分。这里给出一些自己的理解例子。</p>\n<p><img src=\"../../../assets/game/0105/shape.png\" alt=\"shape\"></p>\n<ul>\n<li>默认的Shape是Cone(圆锥)，将其Angle设为0就是圆柱，修改Thickness可以呈现环状。</li>\n<li>Sphere是球状发射，Hemisphere是半球状发射，可用于一些需要中心向外发散的3d效果。</li>\n<li>Box是盒装发射，也比较常用。修改Scale形成一定范围，粒子速度设为很小，在体积发射时，可以营造类似萤火虫等氛围感。</li>\n<li>Circle圆、Edge边都是二维图形，也常用。圆可以作中心向外发散的2d效果，边可以作一些刀锋效果。</li>\n</ul>\n</li>\n<li>\n<p>Trails 模块</p>\n<p>如果会用GameObject的Trail，这个是相通的。可以用于制作拖尾效果。本人对这个也是初步了解状态，只会做很简陋的效果。</p>\n<p><img src=\"../../../assets/game/0105/trail.png\" alt=\"trail\"></p>\n<ul>\n<li>Mode模式选择：Particles是对每个粒子单独使用；Ribbon是通过粒子间连接形成。</li>\n<li>Paricles模式：Ratio表示粒子会应用Trail的百分比；Lifetime为Trail的生命周期；Die with Particles表示是否随粒子销毁而销毁。</li>\n<li>Ribbon模式：Ribbon count表示连线的数量，注意这个数量不要超过粒子发射的数量。</li>\n</ul>\n</li>\n</ul>\n<p>其他模块就不做介绍了，大多数看手册都能理解的。</p>\n<h3 id=\"六、“雨云弹”制作\">六、“雨云弹”制作</h3>\n<p>​\t\t由于写详细教程会使篇幅太长，此处只放出相关参数图片。</p>\n<p>​\t\t个人通用的制作思路是：整体形状-&gt;发射的时间、数量及速度-&gt;主要效果-&gt;颜色调整。</p>\n<h5 id=\"“雨云弹”结构图\">“雨云弹”结构图</h5>\n<p>“雨云弹”分为四个部分：①上升雾，②云，③雨，④雨滴溅射。</p>\n<p><img src=\"../../../assets/game/0105/%E5%AF%B9%E8%B1%A1%E7%BB%93%E6%9E%84%E5%9B%BE.png\" alt=\"对象结构图\"></p>\n<p><strong>注</strong>：</p>\n<ul>\n<li>Transform 组件参数放进模块参数图里供作参考。</li>\n<li>每个效果都不需要更改默认的Renderer渲染模块，勾上就行。</li>\n</ul>\n<p>🌁</p>\n<h4 id=\"1-上升雾\">1 上升雾</h4>\n<h5 id=\"设计要点\">设计要点</h5>\n<ul>\n<li>整体呈圆柱状上升喷射；</li>\n<li>向上喷射速度快时间短，要有”嘭“的感觉；</li>\n<li>有雾的绵密感。</li>\n</ul>\n<h5 id=\"效果图\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/up.png\" alt=\"up\"></p>\n<h5 id=\"模块参数图\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/1transform.png\" alt=\"1transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/1main.png\" alt=\"1main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/1emission.png\" alt=\"1emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/1shape.png\" alt=\"1shape\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/1color.png\" alt=\"1color\"></p>\n</li>\n</ul>\n<hr>\n<p>☁️</p>\n<h4 id=\"2-云\">2 云</h4>\n<h5 id=\"设计要点-v2\">设计要点</h5>\n<ul>\n<li>整体呈中心水平向外扩散；</li>\n<li>云的消散有渐隐效果；</li>\n<li>云的运动有波动感。</li>\n</ul>\n<h5 id=\"效果图-v2\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/cloud.png\" alt=\"cloud\"></p>\n<h5 id=\"模块参数图-v2\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/2transform.png\" alt=\"2transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/2main.png\" alt=\"2main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/2emission.png\" alt=\"2emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/2shape.png\" alt=\"2shape\"></p>\n</li>\n<li>\n<p>Velocity over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2velocity.png\" alt=\"2velocity\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2color.png\" alt=\"2color\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/2size.png\" alt=\"2size\"></p>\n</li>\n</ul>\n<hr>\n<p>🌧️</p>\n<h4 id=\"3-雨\">3 雨</h4>\n<h5 id=\"设计要点-v3\">设计要点</h5>\n<ul>\n<li>整体呈圆柱形向下喷射；</li>\n<li>雨的下落要迅速，呈线状；</li>\n<li>雨碰撞地面触发雨滴溅射效果。</li>\n</ul>\n<h5 id=\"效果图-v3\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/down.png\" alt=\"down\"></p>\n<h5 id=\"模块参数图-v3\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/3transform.png\" alt=\"3transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/3main.png\" alt=\"3main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/3emission.png\" alt=\"3emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/3shape.png\" alt=\"3shape\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/3size.png\" alt=\"3size\"></p>\n</li>\n<li>\n<p>Collision</p>\n<p><img src=\"../../../assets/game/0105/3collision.png\" alt=\"3collision\"></p>\n</li>\n<li>\n<p>Sub Emitters</p>\n<p>需做好“<strong>4 雨滴溅射</strong>”部分再勾选修改该模块。</p>\n<p><img src=\"../../../assets/game/0105/3sub.png\" alt=\"3sub\"></p>\n</li>\n<li>\n<p>Trails</p>\n<p><img src=\"../../../assets/game/0105/3trail.png\" alt=\"3trail\"></p>\n</li>\n</ul>\n<hr>\n<p>🍉</p>\n<h4 id=\"4-雨滴溅射\">4 雨滴溅射</h4>\n<h5 id=\"设计要点-v4\">设计要点</h5>\n<ul>\n<li>整体呈中心斜向上向外溅射；</li>\n<li>雨滴溅射碰撞地面有反弹效果，营造动感。</li>\n</ul>\n<h5 id=\"效果图-v4\">效果图</h5>\n<p><img src=\"../../../assets/game/0105/circle.png\" alt=\"circle\"></p>\n<h5 id=\"模块参数图-v4\">模块参数图</h5>\n<ul>\n<li>\n<p>Transform</p>\n<p><img src=\"../../../assets/game/0105/4transform.png\" alt=\"4transform\"></p>\n</li>\n<li>\n<p>Main</p>\n<p><img src=\"../../../assets/game/0105/4main.png\" alt=\"4main\"></p>\n</li>\n<li>\n<p>Emission</p>\n<p><img src=\"../../../assets/game/0105/4emission.png\" alt=\"4emission\"></p>\n</li>\n<li>\n<p>Shape</p>\n<p><img src=\"../../../assets/game/0105/4shape.png\" alt=\"4shape\"></p>\n</li>\n<li>\n<p>Color over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/4color.png\" alt=\"4color\"></p>\n</li>\n<li>\n<p>Size over Lifetime</p>\n<p><img src=\"../../../assets/game/0105/4size.png\" alt=\"4size\"></p>\n</li>\n<li>\n<p>Noise</p>\n<p><img src=\"../../../assets/game/0105/4noise.png\" alt=\"4noise\"></p>\n</li>\n<li>\n<p>Collision</p>\n<p><img src=\"../../../assets/game/0105/4collision.png\" alt=\"4collision\"></p>\n</li>\n</ul>\n<hr>\n<p>⭐</p>\n<p><strong>注</strong>：</p>\n<p>还有一件事，因为我在Rain空对象挂了一个只用Main的ParticleSystem组件，修改了生命周期，并将Stop Action设置为Destroy，效果类似于这个粒子播放xx时长，结束了这个对象就会自动销毁。因为在粒子系统触发脚本(ParticleTrigger)中，当球体与地面碰撞，这个粒子系统会作为预制件实例化，每撞一次就会实例化一次，如果不及时销毁就会一直在那里，但其实它播放一次就不再用了。</p>\n<p>当然，如果不带这个组件，处理方式也可以修改为，一开始就在场景初始化这个粒子系统，并设置不播放，每检测碰撞，就对这个空对象下挂载的三个粒子系统进行同时播放一次。我觉得比较麻烦，就采取了第一种方法，这在性能方面可能有所增加。</p>\n<p><img src=\"../../../assets/game/0105/5main.png\" alt=\"5main\"></p>\n<h3 id=\"七、其他部分制作\">七、其他部分制作</h3>\n<h4 id=\"1-背景\">1 背景</h4>\n<p>​\t\t由5个带上黑色材质球的Plane简单拼凑组成，注意Plane的朝向并检查是否带有碰撞器。用于粒子系统碰撞及颜色衬托。</p>\n<p><img src=\"../../../assets/game/0105/bg.png\" alt=\"bg\"></p>\n<h4 id=\"2-球体\">2 球体</h4>\n<ul>\n<li>\n<p>一个带有Trail子对象的球体，组件勾上碰撞器，加入刚体和碰撞检测的脚本，设置如下图。</p>\n<p><img src=\"../../../assets/game/0105/ball.png\" alt=\"ball\"></p>\n</li>\n<li>\n<p>球体的Trail拖尾效果做得比较简陋，设置如下图。</p>\n<p><img src=\"../../../assets/game/0105/btrail.png\" alt=\"btrail\"></p>\n</li>\n</ul>\n<h4 id=\"3-相机\">3 相机</h4>\n<p>​\t\t新建Camera，通过<code>ctrl+shift+f</code>将当前场景的视角作为Camera的视角，这里添加了俯视DownCamera和仰视UpCamera的视角。通过脚本添加预制件及视角切换。</p>\n<h3 id=\"八、部分代码\">八、部分代码</h3>\n<p>代码部分参考了之前做的射箭部分，主要用于获取并抛掷球体，也不是主要部分。</p>\n<p>设计模式采用课堂上的设计模式，参考的UML图如下。画的很好了，这里就不重新画了。</p>\n<p><img src=\"../../../assets/game/0105/design.png\" alt=\"design\"></p>\n<h4 id=\"代码结构图\">代码结构图</h4>\n<p>日常上代码结构图，dddd。</p>\n<p><img src=\"../../../assets/game/0105/Scripts.png\" alt=\"Scripts\"></p>\n<h4 id=\"ParticleTrigger\">ParticleTrigger</h4>\n<p>粒子系统触发脚本。在球体碰撞的位置实例化粒子系统预制件Rain，它会自动播放的。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ParticleTrigger</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnCollisionEnter</span>(<span class=\"hljs-params\">Collision other</span>)</span><br>    &#123;<br>        GameObject Rain = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Rain&quot;</span>));<br>        Rain.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-keyword\">this</span>.transform.position.x,<span class=\"hljs-number\">0</span>,<span class=\"hljs-keyword\">this</span>.transform.position.z);<br>        <span class=\"hljs-keyword\">this</span>.gameObject.tag = <span class=\"hljs-string\">&quot;Finish&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"BallFlyAction\">BallFlyAction</h4>\n<p>球体飞行运动。在初始给一个瞬间的力以添加初速度，然后给一个持续向下的力模拟重力。模拟一个斜向上抛体运动。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BallFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> Vector3 force = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">80f</span>,<span class=\"hljs-number\">30f</span>);<br>    <span class=\"hljs-keyword\">private</span> Vector3 gravity = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">-0.3f</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-comment\">// public float speed;</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> BallFlyAction <span class=\"hljs-title\">GetBallFlyAction</span>()</span>&#123;<br>        BallFlyAction action = ScriptableObject.CreateInstance&lt;BallFlyAction&gt;();<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        <br>        gameObject.GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">false</span>;<br>        gameObject.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.zero;<br>        gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force,ForceMode.Impulse);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;   <br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject.tag == <span class=\"hljs-string\">&quot;Finish&quot;</span>)&#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>        &#125;  <br>        gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(gravity,ForceMode.Impulse);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Interface\">Interface</h4>\n<p>包括<code>IUserController</code>与<code>ISceneController</code>,分别对应用户操作接口与场景行为接口。</p>\n<p>Init是获取球体，Shoot是发射球体，ChangeView用于切换视角，IsBallNull用于判断是否获取了球体；</p>\n<p>LoadResource是实例化背景及相机。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Shoot</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ChangeView</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">char</span> c</span>)</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsBallNull</span>()</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"SceneController\">SceneController</h4>\n<p>场景控制器。用于控制整个场景，实现用户操作接口与场景行为接口。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SceneController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">IUserAction</span>, <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    BallFactory factory;<br>    <span class=\"hljs-keyword\">public</span> BallActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br>    <span class=\"hljs-keyword\">public</span> GameObject ball = <span class=\"hljs-literal\">null</span>;<br>    <span class=\"hljs-keyword\">public</span> Camera mainCamera;<br>    <span class=\"hljs-keyword\">public</span> Camera upCamera;<br>    <span class=\"hljs-keyword\">public</span> Camera downCamera;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;BallFactory&gt;();<br>        factory = Singleton&lt;BallFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;BallActionManager&gt;() <span class=\"hljs-keyword\">as</span> BallActionManager;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        mainCamera = Camera.main;<br>        LoadResource();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Background&quot;</span>));<br>        upCamera = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/UpCamera&quot;</span>)).GetComponent&lt;Camera&gt;();<br>        downCamera = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/DownCamera&quot;</span>)).GetComponent&lt;Camera&gt;();<br>        ChangeView(<span class=\"hljs-string\">&#x27;z&#x27;</span>);<br>    &#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ChangeView</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">char</span> c</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(c == <span class=\"hljs-string\">&#x27;z&#x27;</span>)&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(c == <span class=\"hljs-string\">&#x27;x&#x27;</span>)&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            mainCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            upCamera.enabled = <span class=\"hljs-literal\">false</span>;<br>            downCamera.enabled = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(ball == <span class=\"hljs-literal\">null</span>)&#123;<br>            ball = factory.GetBall();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Shoot</span>()</span><br>    &#123;<br>        actionManager.MoveBall(ball);<br>        ball = <span class=\"hljs-literal\">null</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        factory.FreeBall();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsBallNull</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> (ball == <span class=\"hljs-literal\">null</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"myUserGUI\">myUserGUI</h4>\n<p>用户界面。用于监测按键及控制说明。按<code>z</code>,<code>x</code>,<code>c</code>可以切换视角，<code>space</code>可以获取球体，<code>j</code>可以发射球体。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    GUIStyle titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    GUIStyle textStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br><br>        titleStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.9f</span>, <span class=\"hljs-number\">0.65f</span>, <span class=\"hljs-number\">0.99f</span>, <span class=\"hljs-number\">1</span>);<br>        titleStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        titleStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        titleStyle.alignment = TextAnchor.MiddleCenter;<br><br>        textStyle.normal.textColor = Color.white;<br>        textStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        textStyle.fontSize = <span class=\"hljs-number\">20</span>;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(!action.IsBallNull())&#123;<br>            <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.J)) action.Shoot();<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.Space)) action.Init();<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.Z)) action.ChangeView(<span class=\"hljs-string\">&#x27;z&#x27;</span>);<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.X)) action.ChangeView(<span class=\"hljs-string\">&#x27;x&#x27;</span>);<br>        <span class=\"hljs-keyword\">if</span> (Input.GetKeyDown(KeyCode.C)) action.ChangeView(<span class=\"hljs-string\">&#x27;c&#x27;</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width<span class=\"hljs-number\">-200</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;粒子效果展示&quot;</span>, titleStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;视角切换：z, x, c&quot;</span>, textStyle);   <br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">42</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;取物：space&quot;</span>, textStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">72</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;发射：j&quot;</span>, textStyle);    <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"九、小结\">九、小结</h3>\n<ul>\n<li>做粒子特效，除了灵感，理解也很重要，即使是默认素材，也能作出很多花样。</li>\n<li>内置粒子系统还可用于做粒子流编程，作出一些流体效果，这里没有深入研究。</li>\n<li>主要是学习了模块面板的使用，没怎么用api控制粒子系统，对api还不太熟悉。</li>\n</ul>\n<h3 id=\"十、参考\">十、参考</h3>\n<ul>\n<li><a href=\"https://docs.unity.cn/cn/2021.3/Manual/ParticleSystemModules.html\">Unity官方手册ParticleSystem</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV17V4y1K7Cn/?spm_id_from=333.999.0.0&amp;vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\">bilibili-梦小天幼的粒子系统详解系列视频</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1yy4y1B7ir/?from=search&amp;seid=976722035306074353&amp;spm_id_from=333.337.0.0&amp;vd_source=e218f5ce60f09f4f0dc35f89ecd9b4f5\">bilibili-Unity官方的粒子效果制作教学</a></li>\n</ul>\n<blockquote>\n<p>2023.01.06\t\t\tCauchy.</p>\n</blockquote>"},{"layout":"post","title":"HW3: 空间与运动","date":"2022-10-23T06:00:00.000Z","subtitle":"空间与运动-牧师与恶魔","_content":"\n> 作业简介：\n> 1.简答题（涉及游戏对象运动）\n> 2.编程实践\n>\n> ps. GIF图片加载比较慢\n\n<!--more-->\n\n:owl:\n\n### 一、简答题\n\n* 游戏对象运动的本质是什么？\n\n    游戏对象随着每一帧而发生的空间位置（相对的或绝对的）、旋转角度及缩放的变化。\n\n* 用三种以上方法实现物体的抛物线运动。\n\n    抛物线运动的实质是一个方向匀速运动，与其垂直的一个方向进行匀加速运动。\n\n    效果图：\n\n    ![parabola](../../../assets/game/1023/parabola.gif)\n\n    * 法一：对transform.position分方向加变化值\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧\n                    //向下的方向 匀变速 \n                    this.transform.position += Vector3.down * Time.deltaTime * v;\n                    //向左的方向 匀速\n                    this.transform.position += Vector3.left * Time.deltaTime * 2f;\n                    \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f; //加速度为0.1\n                    frame++;\n                }\n            }\n        ```\n\n    * 法二：对transform.position整体方向加变化值\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧      \n                \t// 注意正负区分方向\n                    Vector3 change = new Vector3(-Time.deltaTime*2f, -Time.deltaTime *v, 0f);\n                    this.transform.position += change;\n                    \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f;\n                    frame++;\n                }\n            }\n        ```\n\n    * 法三：对transform.position应用transform.Translate函数\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧\n                    Vector3 change = new Vector3(-Time.deltaTime*2f, -Time.deltaTime *v, 0f);\n                    this.transform.Translate(change,Space.World);\n        \n        \t\t\t// transform.Translate默认是相对于变换的本地轴(Space.Self)来应用该移动\n        \t\t\t// 坐标变换有所区别，不是很好分辨方向\n                    // Vector3 change = new Vector3(-Time.deltaTime *v,Time.deltaTime*2f,0f);\n                    // this.transform.Translate(change);\n        \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f;\n                    frame++;\n                }\n            }\n        ```\n\n        \n\n* 写一个程序，实现完整的太阳系，其他星球围绕太阳的转速必须不一样，且不在一个法平面上。\n\n  这里的实现方式是写了个脚本，将围绕太阳旋转的星球都加入这个脚本，然后手动设置不同星球的自传和公转的速度。\n  \n  ```c#\n  using System.Collections;\n  using System.Collections.Generic;\n  using UnityEngine;\n  \n  public class planetAround : MonoBehaviour\n  {\n      public GameObject target;\n      public float selfround = 1f; //自转速度\n      public float pubaround = 1f; //公转速度\n      \n      void Update()\n      {\n          this.transform.Rotate(Vector3.up * Time.deltaTime *selfround);\n          this.transform.RotateAround(target.transform.position, Vector3.up, 5 * pubaround * Time.deltaTime);\n      }\n  }\n  \n  ```\n  \n  实际效果：\n  \n    ![solar](../../../assets/game/1023/solar.gif)\n\n:lollipop:\n\n### 二、编程实践\n\n![hw](../../../assets/game/1023/hw.jpg)\n\n试玩游戏界面\n\n![1](../../../assets/game/1023/1.jpg)\n\n**游戏规则：**\n\n* 游戏开始时，在河岸的一边有3个牧师与3个魔鬼，他们都想过到河的另一边。\n* 只有一艘小船，小船每次最多乘两个人，且必须有一个人船才能动。\n* 玩家可以点击牧师或魔鬼让他们上下船，点击船来使船在两岸往返。\n* 如果在某一河岸牧师的数量少于魔鬼的数量（包括停在岸边船上人的数量），牧师被杀死，游戏失败。\n* 使牧师与魔鬼都到达对岸时，游戏胜利。\n\n\n\n#### Object\n\n| Object       | Num  |\n| ------------ | ---- |\n| 河岸(Coast)  | 2    |\n| 河水(Water)  | 1    |\n| 船(Boat)     | 1    |\n| 牧师(Priest) | 3    |\n| 恶魔(Devil)  | 3    |\n\n\n\n#### UserAction\n\n| Action       | Condition                       | Effect         |\n| ------------ | ------------------------------- | -------------- |\n| 点击岸上角色 | 船在相应的河岸，船上人数少于2人 | 角色上船       |\n| 点击船上角色 | 无                              | 角色上岸       |\n| 点击船       | 船上有至少一个角色              | 船移动到另一岸 |\n| 点击Restart  | 游戏结束                        | 重新开始游戏   |\n\n\n\n#### Prefabs\n\n涉及的材质与部分预制来源于Assest Store。\n\n河岸(Coast)\n\n![Coast](../../../assets/game/1023/Coast.jpg)\n\n河水(Water)\n\n![Water](../../../assets/game/1023/Water.jpg)\n\n船(Boat)\n\n![Boat](../../../assets/game/1023/Boat.jpg)\n\n牧师(Priest)\n\n![Priest](../../../assets/game/1023/Priest.jpg)\n\n恶魔(Devil)\n\n![Devil](../../../assets/game/1023/Devil.jpg)\n\n\n\n#### MVC框架\n\n![Map](../../../assets/game/1023/Map.jpg)\n\n\n\n#### 主要代码\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets\n\n##### Director\n\n采用单例模式，在运行时才创建Director实例，若已创建该实例不会重复创建。\n\n```c#\npublic class Director : System.Object\n{\n    private static Director _instance;\n\n    public ISceneController currentSceneController { get; set;}\n\n    public static Director getInstance()\n    {\n        if(_instance == null){\n            _instance = new Director();\n        }\n        return _instance;\n    }\n}\n```\n\n\n\n##### ISceneController\n\n场记接口，用于加载场景资源。\n\n```c#\npublic interface ISceneController\n{\n\tvoid LoadResources();\n}\n```\n\n\n\n##### IUserAction\n\n用户操作接口，用于记录可能的用户操作。这里将上述的4个行为转化为以下3个。\n\n```c#\npublic interface IUserAction\n{\n    void ClickCharacter(myCharacterController charactorController);\n    void moveBoat();\n    void Restart();  \n}\n```\n\n\n\n##### Moveable\n\n可移动脚本，具有该组件的游戏对象才可以移动。\n\n```c#\npublic class Moveable : MonoBehaviour\n{\n    readonly float moveSpeed = 20;\n    /// 0->not moving 1->moving to middle 2->moving to destination\n    int moveStatus;\n    Vector3 destination;\n    Vector3 middle;\n\n    void Update() {\n\t\tif (moveStatus == 1) {\n\t\t\ttransform.position = Vector3.MoveTowards (transform.position, middle, moveSpeed * Time.deltaTime);\n\t\t\tif (transform.position == middle) {\n\t\t\t\tmoveStatus = 2;\n\t\t\t}\n\t\t} \n        else if (moveStatus == 2) {\n\t\t\ttransform.position = Vector3.MoveTowards (transform.position, destination, moveSpeed * Time.deltaTime);\n\t\t\tif (transform.position == destination) {\n\t\t\t\tmoveStatus = 0;\n\t\t\t}\n\t\t}\n\t}\n\tpublic void setDestination(Vector3 d) {\n\t\tdestination = d;\n\t\tmiddle = d;\n\t\t/// Moving Boat\n\t\tif (d.y == transform.position.y) {\t\n\t\t\tmoveStatus = 2;\n\t\t}\n\t\t/// Move character from coast to boat\n\t\telse if (d.y < transform.position.y) {\n\t\t\tmiddle.y = transform.position.y;\n\t\t} \n\t\t/// Move character from boat to coast\n\t\telse {\n\t\t\tmiddle.x = transform.position.x;\n\t\t}\n\t\tmoveStatus = 1;\n\t}\n\n\tpublic void reset() {\n\t\tmoveStatus = 0;\n\t}\n}\n```\n\n\n\n##### CoastController\n\n河岸控制器，用于创建河岸及涉及河岸的各种操作\n\n```c#\npublic class CoastController \n{\n\treadonly GameObject coast;\n\treadonly Vector3 startPos = new Vector3(9,1,0);\n\treadonly Vector3 endPos = new Vector3(-9,1,0);\n\treadonly Vector3[] positions;\n\t/// direction : Start or End\n\treadonly string direction;\t\n\n\t/// change frequently\n\tmyCharacterController[] passengerPlaner;\n\n\tpublic CoastController(string direc) {\n\t\tpositions = new Vector3[] {new Vector3(6.5F,2.0F,0), new Vector3(7.5F,2.0F,0), new Vector3(8.5F,2.0F,0), \n\t\t\tnew Vector3(9.5F,2.0F,0), new Vector3(10.5F,2.0F,0), new Vector3(11.5F,2.0F,0)};\n\n\t\tpassengerPlaner = new myCharacterController[6];\n\n\t\tif (direc == \"Start\") {\n\t\t\tcoast = Object.Instantiate (Resources.Load (\"Prefabs/Coast\", typeof(GameObject)), startPos, Quaternion.identity, null) as GameObject;\n\t\t\tcoast.name = \"Start\";\n            coast.tag = \"Start\";\n\t\t\tdirection = \"Start\";\n\t\t} \n        else if(direc == \"End\"){\n\t\t\tcoast = Object.Instantiate (Resources.Load (\"Prefabs/Coast\", typeof(GameObject)), endPos, Quaternion.identity, null) as GameObject;\n\t\t\tcoast.name = \"End\";\n            coast.tag = \"End\";\n\t\t\tdirection = \"End\";\n\t\t}\n\t}\n\n\tpublic int getEmptyIndex() {\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] == null) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic Vector3 getEmptyPosition() {\n\t\tVector3 pos = positions [getEmptyIndex ()];\n        if(direction == \"End\")\n            pos.x *= -1;\n\t\treturn pos;\n\t}\n\n\tpublic void getOnCoast(myCharacterController cC) {\n\t\tint index = getEmptyIndex ();\n\t\tpassengerPlaner [index] = cC;\n\t}\n\t\t\n\tpublic myCharacterController getOffCoast(string passengerName) {\t\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] != null && passengerPlaner [i].getName () == passengerName) {\n\t\t\t\tmyCharacterController cC = passengerPlaner [i];\n\t\t\t\tpassengerPlaner [i] = null;\n\t\t\t\treturn cC;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic string getDirection() {\n\t\treturn direction;\n\t}\n\n\tpublic int[] getNum() {\n\t\tint[] count = {0, 0};\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] == null)\n\t\t\t\tcontinue;\n\t\t\t/// 0->priest, 1->devil\n\t\t\tif (passengerPlaner [i].getType () == 0) {\t\n\t\t\t\tcount[0]++;\n\t\t\t} \n            else {\n\t\t\t\tcount[1]++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic void reset() {\n\t\tpassengerPlaner = new myCharacterController[6];\n\t}\n}\n```\n\n\n\n##### BoatController\n\n船控制器，用于创建船及涉及船的各种操作。\n\n```c#\npublic class BoatController\n{\n    readonly GameObject boat;\n\treadonly Moveable moveScript;\n\treadonly Vector3 startPosition = new Vector3 (5, 1, 0);\n\treadonly Vector3 endPosition = new Vector3 (-5, 1, 0);\n\treadonly Vector3[] startPositions;\n\treadonly Vector3[] endPositions;\n    \n\t/// change frequently\n    string direction; \n\tmyCharacterController[] passenger = new myCharacterController[2];\n\n\tpublic BoatController() {\n\t\tdirection = \"Start\";\n\n\t\tstartPositions = new Vector3[] { new Vector3 (4.5F, 1.1F, 0), new Vector3 (5.5F, 1.1F, 0) };\n\t\tendPositions = new Vector3[] { new Vector3 (-5.5F, 1.1F, 0), new Vector3 (-4.5F, 1.1F, 0) };\n\n\t\tboat = Object.Instantiate (Resources.Load (\"Prefabs/Boat\", typeof(GameObject)), startPosition, Quaternion.identity, null) as GameObject;\n\t\tboat.name = \"boat\";\n        boat.tag = \"Boat\";\n\n\t\tmoveScript = boat.AddComponent (typeof(Moveable)) as Moveable;\n\t\tboat.AddComponent (typeof(Click));\n\t}\n\n\tpublic void Move() {\n\t\tif (direction == \"End\") {\n\t\t\tmoveScript.setDestination(startPosition);\n\t\t\tdirection = \"Start\";\n\t\t} \n\t\telse {\n\t\t\tmoveScript.setDestination(endPosition);\n\t\t\tdirection = \"End\";\n\t\t}\n\t}\n\n\tpublic int getEmptyIndex() {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] == null) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic bool isEmpty() {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] != null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic Vector3 getEmptyPosition() {\n\t\tVector3 pos;\n\t\tint emptyIndex = getEmptyIndex ();\n\t\tif (direction == \"End\") {\n\t\t\tpos = endPositions[emptyIndex];\n\t\t} \n\t\telse {\n\t\t\tpos = startPositions[emptyIndex];\n\t\t}\n\t\treturn pos;\n\t}\n\n\tpublic void getOnBoat(myCharacterController characterCtrl) {\n\t\tint index = getEmptyIndex ();\n\t\tpassenger [index] = characterCtrl;\n\t}\n\n\tpublic myCharacterController getOffBoat(string passenger_name) {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] != null && passenger [i].getName () == passenger_name) {\n\t\t\t\tmyCharacterController charactorCtrl = passenger [i];\n\t\t\t\tpassenger [i] = null;\n\t\t\t\treturn charactorCtrl;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic GameObject getGameobj() {\n\t\treturn boat;\n\t}\n\n\tpublic string getDirection() {\n\t\treturn direction;\n\t}\n\n\tpublic int[] getNum() {\n\t\tint[] count = {0, 0};\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] == null)\n\t\t\t\tcontinue;\n\t\t\t/// 0->priest, 1->devil\n\t\t\tif (passenger [i].getType () == 0) {\t\n\t\t\t\tcount[0]++;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tcount[1]++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic void reset() {\n\t\tmoveScript.reset ();\n\t\tif (direction == \"End\") {\n\t\t\tMove ();\n\t\t}\n\t\tpassenger = new myCharacterController[2];\n\t}\n}\n```\n\n\n\n##### myCharacterController\n\n角色控制器，用于创建牧师(Priest)与魔鬼(Devil)，及涉及角色的各种操作。\n\n```c#\npublic class myCharacterController\n{\n    readonly GameObject character;\n\treadonly Moveable moveScript;\n\treadonly Click click;\n\t/// 0->priest, 1->devil\n\treadonly int characterType;\t\n\t/// change frequently\n\tbool _isOnBoat;\n\tCoastController coastController;\n\n\tpublic myCharacterController(string _character) {\n\t\tif (_character == \"Priest\") {\n\t\t\tcharacter = Object.Instantiate (Resources.Load (\"Prefabs/Priest\", typeof(GameObject)), Vector3.zero, Quaternion.Euler(0, 180, 0), null) as GameObject;\n\t\t\tcharacterType = 0;\n\t\t} \n        else {\n\t\t\tcharacter = Object.Instantiate (Resources.Load (\"Prefabs/Devil\", typeof(GameObject)), Vector3.zero, Quaternion.Euler(0, 180, 0), null) as GameObject;\n\t\t\tcharacterType = 1;\n\t\t}\n\t\tmoveScript = character.AddComponent (typeof(Moveable)) as Moveable;\n\n\t\tclick = character.AddComponent (typeof(Click)) as Click;\n\t\tclick.setController (this);\n\t}\n\n\tpublic void setName(string name) {\n\t\tcharacter.name = name;\n\t}\n\n    public void setTag(string tag) {\n\t\tcharacter.tag = tag;\n\t}\n\n\tpublic void setPosition(Vector3 pos) {\n\t\tcharacter.transform.position = pos;\n\t}\n\n\tpublic void moveTo(Vector3 destination) {\n\t\tmoveScript.setDestination(destination);\n\t}\n\n\tpublic int getType() {\n\t\treturn characterType;\n\t}\n\n\tpublic string getName() {\n\t\treturn character.name;\n\t}\n\n    public string getTag() {\n\t\treturn character.tag;\n\t}\n\n\tpublic void getOnBoat(BoatController boat) {\n\t\tcoastController = null;\n\t\tcharacter.transform.parent = boat.getGameobj().transform;\n\t\t_isOnBoat = true;\n\t}\n\n\tpublic void getOnCoast(CoastController coast) {\n\t\tcoastController = coast;\n\t\tcharacter.transform.parent = null;\n\t\t_isOnBoat = false;\n\t}\n\n\tpublic bool isOnBoat() {\n\t\treturn _isOnBoat;\n\t}\n\n\tpublic CoastController getCoastController() {\n\t\treturn coastController;\n\t}\n\n\tpublic void reset() {\n\t\tmoveScript.reset ();\n\t\tcoastController = (Director.getInstance ().currentSceneController as FirstControllor).startCoast;\n\t\tgetOnCoast (coastController);\n\t\tsetPosition (coastController.getEmptyPosition ());\n\t\tcoastController.getOnCoast (this);\n\t}\n}\n```\n\n\n\n##### FirstController\n\n最高层控制器，实现场记接口、用户行动接口的功能。\n\n```c#\npublic class FirstController : MonoBehaviour, ISceneController, IUserAction\n{\n    readonly Vector3 waterPos = new Vector3(0,0.5F,0);\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n    private myCharacterController[] characters;\n    myUserGUI userGUI;\n\n    void Start ()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        characters = new myCharacterController[6];\n        LoadResources();\n    }\n\n    public void LoadResources(){\n        GameObject water = Instantiate(Resources.Load(\"Prefabs/Water\", typeof(GameObject)), waterPos, Quaternion.identity, null) as GameObject;\n        water.name = \"water\";\n        water.tag = \"Water\";\n\n        startCoast = new CoastController(\"Start\");\n        endCoast = new CoastController(\"End\");\n        boat = new BoatController();\n\n        for(int i=0;i<3;i++){\n            myCharacterController priest = new myCharacterController(\"Priest\");\n            priest.setName(\"Priest \"+i);\n            priest.setTag(\"Priest\");\n            priest.setPosition(startCoast.getEmptyPosition());\n            priest.getOnCoast(startCoast);\n            startCoast.getOnCoast(priest);\n            characters[i] = priest;\n        }\n\n        for(int i=0;i<3;i++){\n            myCharacterController devil = new myCharacterController(\"Devil\");\n            devil.setName(\"Devil \"+i);\n            devil.setTag(\"Devil\");\n            devil.setPosition(startCoast.getEmptyPosition());\n            devil.getOnCoast(startCoast);\n            startCoast.getOnCoast(devil);\n            characters[i+3] = devil;\n        }\n    }\n\n    public void moveBoat(){\n        if(boat.isEmpty())\n            return;\n        boat.Move();\n        userGUI.status = checkGameOver();\n    }\n\n    public void ClickCharacter(myCharacterController cC){\n        if(cC.isOnBoat()){\n            CoastController coast;\n            if(boat.getDirection()==\"Start\")\n                coast = startCoast;\n            else\n                coast = endCoast;\n\n            boat.getOffBoat(cC.getName());\n            cC.moveTo(coast.getEmptyPosition());\n            cC.getOnCoast(coast);\n            coast.getOnCoast(cC);\n        }\n        else{\n            CoastController coast = cC.getCoastController();\n            if(boat.getEmptyIndex () == -1 || coast.getDirection() != boat.getDirection())\n                return;\n            coast.getOffCoast(cC.getName());\n            cC.moveTo(boat.getEmptyPosition());\n            cC.getOnBoat(boat);\n            boat.getOnBoat(cC);\n        }\n\n        userGUI.status = checkGameOver();\n    }\n\n    /// -1->lose 0->unfinish 1->win\n    int checkGameOver(){\n        int startPriest = 0;\n        int endPriest = 0;\n        int startDevil = 0;\n        int endDevil = 0;\n\n        int[] startCount = startCoast.getNum();\n        startPriest += startCount[0];\n        startDevil += startCount[1];\n\n        int[] endCount = endCoast.getNum();\n        endPriest += endCount[0];\n        endDevil += endCount[1];\n\n        if(endDevil+endPriest ==6)\n            return 1;\n        \n        int[] boatCount = boat.getNum();\n        if(boat.getDirection() == \"End\"){\n            endPriest += boatCount[0];\n            endDevil += boatCount[1];\n        }\n        else{\n            startPriest += boatCount[0];\n            startDevil += boatCount[1];\n        }\n\n        if(startPriest<startDevil && startPriest>0)\n            return -1;\n        if(endPriest<endDevil && endPriest>0)\n            return -1;\n            \n        return 0;\n        \n\n    }\n\n    public void Restart(){\n        boat.reset();\n        startCoast.reset();\n        endCoast.reset();\n        for(int i=0;i<characters.Length;i++)\n            characters[i].reset();\n    }\n}\n```\n\n\n\n##### Click\n\n点击脚本，检测船和角色是否被点击，从而进行移动的操作。其中，角色和船必须含有碰撞体的组件，不然无法监听对象是否被点击。\n\n```c#\npublic class Click : MonoBehaviour \n{\n    IUserAction userAction;\n    myCharacterController characterController;\n\n    public void setController(myCharacterController cC){\n        characterController = cC;\n    }\n\n    void Start(){\n        userAction = Director.getInstance().currentSceneController as IUserAction;\n    }\n\n    void OnMouseDown(){\n        if(gameObject.tag == \"Boat\")\n            userAction.moveBoat();\n        else if(gameObject.tag == \"Priest\" || gameObject.tag == \"Devil\")\n            userAction.ClickCharacter(characterController);\n        Debug.Log(\"Click\");\n    }\n}\n\n```\n\n\n\n##### myUserGUI\n\n游戏结束的界面设计。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    public int status = 0;\n    GUIStyle style;\n    GUIStyle buttonStyle;\n\n    void Start(){\n        action = Director.getInstance ().currentSceneController as IUserAction;\n\n\t\tstyle = new GUIStyle();\n\t\tstyle.fontSize = 40;\n\t\tstyle.alignment = TextAnchor.MiddleCenter;\n\n\t\tbuttonStyle = new GUIStyle(\"button\");\n\t\tbuttonStyle.fontSize = 30;\n    }\n\n    void OnGUI() {\n\t\tif (status == -1) {\n\t\t\tGUI.Label(new Rect(Screen.width/2-50, Screen.height/2-85, 100, 50), \"Gameover!\", style);\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-70, Screen.height/2, 140, 70), \"Restart\", buttonStyle)) {\n\t\t\t\tstatus = 0;\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t} \n        else if(status == 1) {\n\t\t\tGUI.Label(new Rect(Screen.width/2-50, Screen.height/2-85, 100, 50), \"You win!\", style);\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-70, Screen.height/2, 140, 70), \"Restart\", buttonStyle)) {\n\t\t\t\tstatus = 0;\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\n##### 实现效果\n\n![PandD](../../../assets/game/1023/PandD.gif)\n\n\n\n##### 有待改进\n\n* 没有添加角色行走的动画，及制作朝向\n* 河水和船等动画也没有制作\n* 没有加1min的倒计时\n* 游戏失败没有等船到岸之后弹出来\n\n\n\n> Cauchy       2022.10.23\n","source":"_posts/2022/Homework3/Homework3.md","raw":"---\nlayout: post\ntitle:  \"HW3: 空间与运动\"\ndate:   2022-10-23 14:00:00 +0800\ntags:\n- unity\n- MVC\ncategories: Game\nsubtitle: '空间与运动-牧师与恶魔'\n---\n\n> 作业简介：\n> 1.简答题（涉及游戏对象运动）\n> 2.编程实践\n>\n> ps. GIF图片加载比较慢\n\n<!--more-->\n\n:owl:\n\n### 一、简答题\n\n* 游戏对象运动的本质是什么？\n\n    游戏对象随着每一帧而发生的空间位置（相对的或绝对的）、旋转角度及缩放的变化。\n\n* 用三种以上方法实现物体的抛物线运动。\n\n    抛物线运动的实质是一个方向匀速运动，与其垂直的一个方向进行匀加速运动。\n\n    效果图：\n\n    ![parabola](../../../assets/game/1023/parabola.gif)\n\n    * 法一：对transform.position分方向加变化值\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧\n                    //向下的方向 匀变速 \n                    this.transform.position += Vector3.down * Time.deltaTime * v;\n                    //向左的方向 匀速\n                    this.transform.position += Vector3.left * Time.deltaTime * 2f;\n                    \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f; //加速度为0.1\n                    frame++;\n                }\n            }\n        ```\n\n    * 法二：对transform.position整体方向加变化值\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧      \n                \t// 注意正负区分方向\n                    Vector3 change = new Vector3(-Time.deltaTime*2f, -Time.deltaTime *v, 0f);\n                    this.transform.position += change;\n                    \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f;\n                    frame++;\n                }\n            }\n        ```\n\n    * 法三：对transform.position应用transform.Translate函数\n\n        ```c#\n        void Update()\n            {\n                if(frame<=60){  //运行60帧\n                    Vector3 change = new Vector3(-Time.deltaTime*2f, -Time.deltaTime *v, 0f);\n                    this.transform.Translate(change,Space.World);\n        \n        \t\t\t// transform.Translate默认是相对于变换的本地轴(Space.Self)来应用该移动\n        \t\t\t// 坐标变换有所区别，不是很好分辨方向\n                    // Vector3 change = new Vector3(-Time.deltaTime *v,Time.deltaTime*2f,0f);\n                    // this.transform.Translate(change);\n        \n                    this.transform.Rotate(0f,0f,1f,Space.Self); //每帧旋转 1°\n                    v+=0.1f;\n                    frame++;\n                }\n            }\n        ```\n\n        \n\n* 写一个程序，实现完整的太阳系，其他星球围绕太阳的转速必须不一样，且不在一个法平面上。\n\n  这里的实现方式是写了个脚本，将围绕太阳旋转的星球都加入这个脚本，然后手动设置不同星球的自传和公转的速度。\n  \n  ```c#\n  using System.Collections;\n  using System.Collections.Generic;\n  using UnityEngine;\n  \n  public class planetAround : MonoBehaviour\n  {\n      public GameObject target;\n      public float selfround = 1f; //自转速度\n      public float pubaround = 1f; //公转速度\n      \n      void Update()\n      {\n          this.transform.Rotate(Vector3.up * Time.deltaTime *selfround);\n          this.transform.RotateAround(target.transform.position, Vector3.up, 5 * pubaround * Time.deltaTime);\n      }\n  }\n  \n  ```\n  \n  实际效果：\n  \n    ![solar](../../../assets/game/1023/solar.gif)\n\n:lollipop:\n\n### 二、编程实践\n\n![hw](../../../assets/game/1023/hw.jpg)\n\n试玩游戏界面\n\n![1](../../../assets/game/1023/1.jpg)\n\n**游戏规则：**\n\n* 游戏开始时，在河岸的一边有3个牧师与3个魔鬼，他们都想过到河的另一边。\n* 只有一艘小船，小船每次最多乘两个人，且必须有一个人船才能动。\n* 玩家可以点击牧师或魔鬼让他们上下船，点击船来使船在两岸往返。\n* 如果在某一河岸牧师的数量少于魔鬼的数量（包括停在岸边船上人的数量），牧师被杀死，游戏失败。\n* 使牧师与魔鬼都到达对岸时，游戏胜利。\n\n\n\n#### Object\n\n| Object       | Num  |\n| ------------ | ---- |\n| 河岸(Coast)  | 2    |\n| 河水(Water)  | 1    |\n| 船(Boat)     | 1    |\n| 牧师(Priest) | 3    |\n| 恶魔(Devil)  | 3    |\n\n\n\n#### UserAction\n\n| Action       | Condition                       | Effect         |\n| ------------ | ------------------------------- | -------------- |\n| 点击岸上角色 | 船在相应的河岸，船上人数少于2人 | 角色上船       |\n| 点击船上角色 | 无                              | 角色上岸       |\n| 点击船       | 船上有至少一个角色              | 船移动到另一岸 |\n| 点击Restart  | 游戏结束                        | 重新开始游戏   |\n\n\n\n#### Prefabs\n\n涉及的材质与部分预制来源于Assest Store。\n\n河岸(Coast)\n\n![Coast](../../../assets/game/1023/Coast.jpg)\n\n河水(Water)\n\n![Water](../../../assets/game/1023/Water.jpg)\n\n船(Boat)\n\n![Boat](../../../assets/game/1023/Boat.jpg)\n\n牧师(Priest)\n\n![Priest](../../../assets/game/1023/Priest.jpg)\n\n恶魔(Devil)\n\n![Devil](../../../assets/game/1023/Devil.jpg)\n\n\n\n#### MVC框架\n\n![Map](../../../assets/game/1023/Map.jpg)\n\n\n\n#### 主要代码\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets\n\n##### Director\n\n采用单例模式，在运行时才创建Director实例，若已创建该实例不会重复创建。\n\n```c#\npublic class Director : System.Object\n{\n    private static Director _instance;\n\n    public ISceneController currentSceneController { get; set;}\n\n    public static Director getInstance()\n    {\n        if(_instance == null){\n            _instance = new Director();\n        }\n        return _instance;\n    }\n}\n```\n\n\n\n##### ISceneController\n\n场记接口，用于加载场景资源。\n\n```c#\npublic interface ISceneController\n{\n\tvoid LoadResources();\n}\n```\n\n\n\n##### IUserAction\n\n用户操作接口，用于记录可能的用户操作。这里将上述的4个行为转化为以下3个。\n\n```c#\npublic interface IUserAction\n{\n    void ClickCharacter(myCharacterController charactorController);\n    void moveBoat();\n    void Restart();  \n}\n```\n\n\n\n##### Moveable\n\n可移动脚本，具有该组件的游戏对象才可以移动。\n\n```c#\npublic class Moveable : MonoBehaviour\n{\n    readonly float moveSpeed = 20;\n    /// 0->not moving 1->moving to middle 2->moving to destination\n    int moveStatus;\n    Vector3 destination;\n    Vector3 middle;\n\n    void Update() {\n\t\tif (moveStatus == 1) {\n\t\t\ttransform.position = Vector3.MoveTowards (transform.position, middle, moveSpeed * Time.deltaTime);\n\t\t\tif (transform.position == middle) {\n\t\t\t\tmoveStatus = 2;\n\t\t\t}\n\t\t} \n        else if (moveStatus == 2) {\n\t\t\ttransform.position = Vector3.MoveTowards (transform.position, destination, moveSpeed * Time.deltaTime);\n\t\t\tif (transform.position == destination) {\n\t\t\t\tmoveStatus = 0;\n\t\t\t}\n\t\t}\n\t}\n\tpublic void setDestination(Vector3 d) {\n\t\tdestination = d;\n\t\tmiddle = d;\n\t\t/// Moving Boat\n\t\tif (d.y == transform.position.y) {\t\n\t\t\tmoveStatus = 2;\n\t\t}\n\t\t/// Move character from coast to boat\n\t\telse if (d.y < transform.position.y) {\n\t\t\tmiddle.y = transform.position.y;\n\t\t} \n\t\t/// Move character from boat to coast\n\t\telse {\n\t\t\tmiddle.x = transform.position.x;\n\t\t}\n\t\tmoveStatus = 1;\n\t}\n\n\tpublic void reset() {\n\t\tmoveStatus = 0;\n\t}\n}\n```\n\n\n\n##### CoastController\n\n河岸控制器，用于创建河岸及涉及河岸的各种操作\n\n```c#\npublic class CoastController \n{\n\treadonly GameObject coast;\n\treadonly Vector3 startPos = new Vector3(9,1,0);\n\treadonly Vector3 endPos = new Vector3(-9,1,0);\n\treadonly Vector3[] positions;\n\t/// direction : Start or End\n\treadonly string direction;\t\n\n\t/// change frequently\n\tmyCharacterController[] passengerPlaner;\n\n\tpublic CoastController(string direc) {\n\t\tpositions = new Vector3[] {new Vector3(6.5F,2.0F,0), new Vector3(7.5F,2.0F,0), new Vector3(8.5F,2.0F,0), \n\t\t\tnew Vector3(9.5F,2.0F,0), new Vector3(10.5F,2.0F,0), new Vector3(11.5F,2.0F,0)};\n\n\t\tpassengerPlaner = new myCharacterController[6];\n\n\t\tif (direc == \"Start\") {\n\t\t\tcoast = Object.Instantiate (Resources.Load (\"Prefabs/Coast\", typeof(GameObject)), startPos, Quaternion.identity, null) as GameObject;\n\t\t\tcoast.name = \"Start\";\n            coast.tag = \"Start\";\n\t\t\tdirection = \"Start\";\n\t\t} \n        else if(direc == \"End\"){\n\t\t\tcoast = Object.Instantiate (Resources.Load (\"Prefabs/Coast\", typeof(GameObject)), endPos, Quaternion.identity, null) as GameObject;\n\t\t\tcoast.name = \"End\";\n            coast.tag = \"End\";\n\t\t\tdirection = \"End\";\n\t\t}\n\t}\n\n\tpublic int getEmptyIndex() {\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] == null) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic Vector3 getEmptyPosition() {\n\t\tVector3 pos = positions [getEmptyIndex ()];\n        if(direction == \"End\")\n            pos.x *= -1;\n\t\treturn pos;\n\t}\n\n\tpublic void getOnCoast(myCharacterController cC) {\n\t\tint index = getEmptyIndex ();\n\t\tpassengerPlaner [index] = cC;\n\t}\n\t\t\n\tpublic myCharacterController getOffCoast(string passengerName) {\t\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] != null && passengerPlaner [i].getName () == passengerName) {\n\t\t\t\tmyCharacterController cC = passengerPlaner [i];\n\t\t\t\tpassengerPlaner [i] = null;\n\t\t\t\treturn cC;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic string getDirection() {\n\t\treturn direction;\n\t}\n\n\tpublic int[] getNum() {\n\t\tint[] count = {0, 0};\n\t\tfor (int i = 0; i < passengerPlaner.Length; i++) {\n\t\t\tif (passengerPlaner [i] == null)\n\t\t\t\tcontinue;\n\t\t\t/// 0->priest, 1->devil\n\t\t\tif (passengerPlaner [i].getType () == 0) {\t\n\t\t\t\tcount[0]++;\n\t\t\t} \n            else {\n\t\t\t\tcount[1]++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic void reset() {\n\t\tpassengerPlaner = new myCharacterController[6];\n\t}\n}\n```\n\n\n\n##### BoatController\n\n船控制器，用于创建船及涉及船的各种操作。\n\n```c#\npublic class BoatController\n{\n    readonly GameObject boat;\n\treadonly Moveable moveScript;\n\treadonly Vector3 startPosition = new Vector3 (5, 1, 0);\n\treadonly Vector3 endPosition = new Vector3 (-5, 1, 0);\n\treadonly Vector3[] startPositions;\n\treadonly Vector3[] endPositions;\n    \n\t/// change frequently\n    string direction; \n\tmyCharacterController[] passenger = new myCharacterController[2];\n\n\tpublic BoatController() {\n\t\tdirection = \"Start\";\n\n\t\tstartPositions = new Vector3[] { new Vector3 (4.5F, 1.1F, 0), new Vector3 (5.5F, 1.1F, 0) };\n\t\tendPositions = new Vector3[] { new Vector3 (-5.5F, 1.1F, 0), new Vector3 (-4.5F, 1.1F, 0) };\n\n\t\tboat = Object.Instantiate (Resources.Load (\"Prefabs/Boat\", typeof(GameObject)), startPosition, Quaternion.identity, null) as GameObject;\n\t\tboat.name = \"boat\";\n        boat.tag = \"Boat\";\n\n\t\tmoveScript = boat.AddComponent (typeof(Moveable)) as Moveable;\n\t\tboat.AddComponent (typeof(Click));\n\t}\n\n\tpublic void Move() {\n\t\tif (direction == \"End\") {\n\t\t\tmoveScript.setDestination(startPosition);\n\t\t\tdirection = \"Start\";\n\t\t} \n\t\telse {\n\t\t\tmoveScript.setDestination(endPosition);\n\t\t\tdirection = \"End\";\n\t\t}\n\t}\n\n\tpublic int getEmptyIndex() {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] == null) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic bool isEmpty() {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] != null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic Vector3 getEmptyPosition() {\n\t\tVector3 pos;\n\t\tint emptyIndex = getEmptyIndex ();\n\t\tif (direction == \"End\") {\n\t\t\tpos = endPositions[emptyIndex];\n\t\t} \n\t\telse {\n\t\t\tpos = startPositions[emptyIndex];\n\t\t}\n\t\treturn pos;\n\t}\n\n\tpublic void getOnBoat(myCharacterController characterCtrl) {\n\t\tint index = getEmptyIndex ();\n\t\tpassenger [index] = characterCtrl;\n\t}\n\n\tpublic myCharacterController getOffBoat(string passenger_name) {\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] != null && passenger [i].getName () == passenger_name) {\n\t\t\t\tmyCharacterController charactorCtrl = passenger [i];\n\t\t\t\tpassenger [i] = null;\n\t\t\t\treturn charactorCtrl;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic GameObject getGameobj() {\n\t\treturn boat;\n\t}\n\n\tpublic string getDirection() {\n\t\treturn direction;\n\t}\n\n\tpublic int[] getNum() {\n\t\tint[] count = {0, 0};\n\t\tfor (int i = 0; i < passenger.Length; i++) {\n\t\t\tif (passenger [i] == null)\n\t\t\t\tcontinue;\n\t\t\t/// 0->priest, 1->devil\n\t\t\tif (passenger [i].getType () == 0) {\t\n\t\t\t\tcount[0]++;\n\t\t\t} \n\t\t\telse {\n\t\t\t\tcount[1]++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic void reset() {\n\t\tmoveScript.reset ();\n\t\tif (direction == \"End\") {\n\t\t\tMove ();\n\t\t}\n\t\tpassenger = new myCharacterController[2];\n\t}\n}\n```\n\n\n\n##### myCharacterController\n\n角色控制器，用于创建牧师(Priest)与魔鬼(Devil)，及涉及角色的各种操作。\n\n```c#\npublic class myCharacterController\n{\n    readonly GameObject character;\n\treadonly Moveable moveScript;\n\treadonly Click click;\n\t/// 0->priest, 1->devil\n\treadonly int characterType;\t\n\t/// change frequently\n\tbool _isOnBoat;\n\tCoastController coastController;\n\n\tpublic myCharacterController(string _character) {\n\t\tif (_character == \"Priest\") {\n\t\t\tcharacter = Object.Instantiate (Resources.Load (\"Prefabs/Priest\", typeof(GameObject)), Vector3.zero, Quaternion.Euler(0, 180, 0), null) as GameObject;\n\t\t\tcharacterType = 0;\n\t\t} \n        else {\n\t\t\tcharacter = Object.Instantiate (Resources.Load (\"Prefabs/Devil\", typeof(GameObject)), Vector3.zero, Quaternion.Euler(0, 180, 0), null) as GameObject;\n\t\t\tcharacterType = 1;\n\t\t}\n\t\tmoveScript = character.AddComponent (typeof(Moveable)) as Moveable;\n\n\t\tclick = character.AddComponent (typeof(Click)) as Click;\n\t\tclick.setController (this);\n\t}\n\n\tpublic void setName(string name) {\n\t\tcharacter.name = name;\n\t}\n\n    public void setTag(string tag) {\n\t\tcharacter.tag = tag;\n\t}\n\n\tpublic void setPosition(Vector3 pos) {\n\t\tcharacter.transform.position = pos;\n\t}\n\n\tpublic void moveTo(Vector3 destination) {\n\t\tmoveScript.setDestination(destination);\n\t}\n\n\tpublic int getType() {\n\t\treturn characterType;\n\t}\n\n\tpublic string getName() {\n\t\treturn character.name;\n\t}\n\n    public string getTag() {\n\t\treturn character.tag;\n\t}\n\n\tpublic void getOnBoat(BoatController boat) {\n\t\tcoastController = null;\n\t\tcharacter.transform.parent = boat.getGameobj().transform;\n\t\t_isOnBoat = true;\n\t}\n\n\tpublic void getOnCoast(CoastController coast) {\n\t\tcoastController = coast;\n\t\tcharacter.transform.parent = null;\n\t\t_isOnBoat = false;\n\t}\n\n\tpublic bool isOnBoat() {\n\t\treturn _isOnBoat;\n\t}\n\n\tpublic CoastController getCoastController() {\n\t\treturn coastController;\n\t}\n\n\tpublic void reset() {\n\t\tmoveScript.reset ();\n\t\tcoastController = (Director.getInstance ().currentSceneController as FirstControllor).startCoast;\n\t\tgetOnCoast (coastController);\n\t\tsetPosition (coastController.getEmptyPosition ());\n\t\tcoastController.getOnCoast (this);\n\t}\n}\n```\n\n\n\n##### FirstController\n\n最高层控制器，实现场记接口、用户行动接口的功能。\n\n```c#\npublic class FirstController : MonoBehaviour, ISceneController, IUserAction\n{\n    readonly Vector3 waterPos = new Vector3(0,0.5F,0);\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n    private myCharacterController[] characters;\n    myUserGUI userGUI;\n\n    void Start ()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        characters = new myCharacterController[6];\n        LoadResources();\n    }\n\n    public void LoadResources(){\n        GameObject water = Instantiate(Resources.Load(\"Prefabs/Water\", typeof(GameObject)), waterPos, Quaternion.identity, null) as GameObject;\n        water.name = \"water\";\n        water.tag = \"Water\";\n\n        startCoast = new CoastController(\"Start\");\n        endCoast = new CoastController(\"End\");\n        boat = new BoatController();\n\n        for(int i=0;i<3;i++){\n            myCharacterController priest = new myCharacterController(\"Priest\");\n            priest.setName(\"Priest \"+i);\n            priest.setTag(\"Priest\");\n            priest.setPosition(startCoast.getEmptyPosition());\n            priest.getOnCoast(startCoast);\n            startCoast.getOnCoast(priest);\n            characters[i] = priest;\n        }\n\n        for(int i=0;i<3;i++){\n            myCharacterController devil = new myCharacterController(\"Devil\");\n            devil.setName(\"Devil \"+i);\n            devil.setTag(\"Devil\");\n            devil.setPosition(startCoast.getEmptyPosition());\n            devil.getOnCoast(startCoast);\n            startCoast.getOnCoast(devil);\n            characters[i+3] = devil;\n        }\n    }\n\n    public void moveBoat(){\n        if(boat.isEmpty())\n            return;\n        boat.Move();\n        userGUI.status = checkGameOver();\n    }\n\n    public void ClickCharacter(myCharacterController cC){\n        if(cC.isOnBoat()){\n            CoastController coast;\n            if(boat.getDirection()==\"Start\")\n                coast = startCoast;\n            else\n                coast = endCoast;\n\n            boat.getOffBoat(cC.getName());\n            cC.moveTo(coast.getEmptyPosition());\n            cC.getOnCoast(coast);\n            coast.getOnCoast(cC);\n        }\n        else{\n            CoastController coast = cC.getCoastController();\n            if(boat.getEmptyIndex () == -1 || coast.getDirection() != boat.getDirection())\n                return;\n            coast.getOffCoast(cC.getName());\n            cC.moveTo(boat.getEmptyPosition());\n            cC.getOnBoat(boat);\n            boat.getOnBoat(cC);\n        }\n\n        userGUI.status = checkGameOver();\n    }\n\n    /// -1->lose 0->unfinish 1->win\n    int checkGameOver(){\n        int startPriest = 0;\n        int endPriest = 0;\n        int startDevil = 0;\n        int endDevil = 0;\n\n        int[] startCount = startCoast.getNum();\n        startPriest += startCount[0];\n        startDevil += startCount[1];\n\n        int[] endCount = endCoast.getNum();\n        endPriest += endCount[0];\n        endDevil += endCount[1];\n\n        if(endDevil+endPriest ==6)\n            return 1;\n        \n        int[] boatCount = boat.getNum();\n        if(boat.getDirection() == \"End\"){\n            endPriest += boatCount[0];\n            endDevil += boatCount[1];\n        }\n        else{\n            startPriest += boatCount[0];\n            startDevil += boatCount[1];\n        }\n\n        if(startPriest<startDevil && startPriest>0)\n            return -1;\n        if(endPriest<endDevil && endPriest>0)\n            return -1;\n            \n        return 0;\n        \n\n    }\n\n    public void Restart(){\n        boat.reset();\n        startCoast.reset();\n        endCoast.reset();\n        for(int i=0;i<characters.Length;i++)\n            characters[i].reset();\n    }\n}\n```\n\n\n\n##### Click\n\n点击脚本，检测船和角色是否被点击，从而进行移动的操作。其中，角色和船必须含有碰撞体的组件，不然无法监听对象是否被点击。\n\n```c#\npublic class Click : MonoBehaviour \n{\n    IUserAction userAction;\n    myCharacterController characterController;\n\n    public void setController(myCharacterController cC){\n        characterController = cC;\n    }\n\n    void Start(){\n        userAction = Director.getInstance().currentSceneController as IUserAction;\n    }\n\n    void OnMouseDown(){\n        if(gameObject.tag == \"Boat\")\n            userAction.moveBoat();\n        else if(gameObject.tag == \"Priest\" || gameObject.tag == \"Devil\")\n            userAction.ClickCharacter(characterController);\n        Debug.Log(\"Click\");\n    }\n}\n\n```\n\n\n\n##### myUserGUI\n\n游戏结束的界面设计。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    public int status = 0;\n    GUIStyle style;\n    GUIStyle buttonStyle;\n\n    void Start(){\n        action = Director.getInstance ().currentSceneController as IUserAction;\n\n\t\tstyle = new GUIStyle();\n\t\tstyle.fontSize = 40;\n\t\tstyle.alignment = TextAnchor.MiddleCenter;\n\n\t\tbuttonStyle = new GUIStyle(\"button\");\n\t\tbuttonStyle.fontSize = 30;\n    }\n\n    void OnGUI() {\n\t\tif (status == -1) {\n\t\t\tGUI.Label(new Rect(Screen.width/2-50, Screen.height/2-85, 100, 50), \"Gameover!\", style);\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-70, Screen.height/2, 140, 70), \"Restart\", buttonStyle)) {\n\t\t\t\tstatus = 0;\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t} \n        else if(status == 1) {\n\t\t\tGUI.Label(new Rect(Screen.width/2-50, Screen.height/2-85, 100, 50), \"You win!\", style);\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-70, Screen.height/2, 140, 70), \"Restart\", buttonStyle)) {\n\t\t\t\tstatus = 0;\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\n##### 实现效果\n\n![PandD](../../../assets/game/1023/PandD.gif)\n\n\n\n##### 有待改进\n\n* 没有添加角色行走的动画，及制作朝向\n* 河水和船等动画也没有制作\n* 没有加1min的倒计时\n* 游戏失败没有等船到岸之后弹出来\n\n\n\n> Cauchy       2022.10.23\n","slug":"2022/Homework3/Homework3","published":1,"updated":"2023-05-19T07:05:21.915Z","comments":1,"photos":[],"link":"","_id":"clhudj1f600057g84bkia6yn5","content":"<blockquote>\n<p>作业简介：<br>\n1.简答题（涉及游戏对象运动）<br>\n2.编程实践</p>\n<p>ps. GIF图片加载比较慢</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>🦉</p>\n<h3 id=\"一、简答题\">一、简答题</h3>\n<ul>\n<li>\n<p>游戏对象运动的本质是什么？</p>\n<p>游戏对象随着每一帧而发生的空间位置（相对的或绝对的）、旋转角度及缩放的变化。</p>\n</li>\n<li>\n<p>用三种以上方法实现物体的抛物线运动。</p>\n<p>抛物线运动的实质是一个方向匀速运动，与其垂直的一个方向进行匀加速运动。</p>\n<p>效果图：</p>\n<p><img src=\"../../../assets/game/1023/parabola.gif\" alt=\"parabola\"></p>\n<ul>\n<li>\n<p>法一：对transform.position分方向加变化值</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧</span><br>            <span class=\"hljs-comment\">//向下的方向 匀变速 </span><br>            <span class=\"hljs-keyword\">this</span>.transform.position += Vector3.down * Time.deltaTime * v;<br>            <span class=\"hljs-comment\">//向左的方向 匀速</span><br>            <span class=\"hljs-keyword\">this</span>.transform.position += Vector3.left * Time.deltaTime * <span class=\"hljs-number\">2f</span>;<br>            <br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>; <span class=\"hljs-comment\">//加速度为0.1</span><br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>法二：对transform.position整体方向加变化值</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧      </span><br>        \t<span class=\"hljs-comment\">// 注意正负区分方向</span><br>            Vector3 change = <span class=\"hljs-keyword\">new</span> Vector3(-Time.deltaTime*<span class=\"hljs-number\">2f</span>, -Time.deltaTime *v, <span class=\"hljs-number\">0f</span>);<br>            <span class=\"hljs-keyword\">this</span>.transform.position += change;<br>            <br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>;<br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>法三：对transform.position应用transform.Translate函数</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧</span><br>            Vector3 change = <span class=\"hljs-keyword\">new</span> Vector3(-Time.deltaTime*<span class=\"hljs-number\">2f</span>, -Time.deltaTime *v, <span class=\"hljs-number\">0f</span>);<br>            <span class=\"hljs-keyword\">this</span>.transform.Translate(change,Space.World);<br><br>\t\t\t<span class=\"hljs-comment\">// transform.Translate默认是相对于变换的本地轴(Space.Self)来应用该移动</span><br>\t\t\t<span class=\"hljs-comment\">// 坐标变换有所区别，不是很好分辨方向</span><br>            <span class=\"hljs-comment\">// Vector3 change = new Vector3(-Time.deltaTime *v,Time.deltaTime*2f,0f);</span><br>            <span class=\"hljs-comment\">// this.transform.Translate(change);</span><br><br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>;<br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>写一个程序，实现完整的太阳系，其他星球围绕太阳的转速必须不一样，且不在一个法平面上。</p>\n<p>这里的实现方式是写了个脚本，将围绕太阳旋转的星球都加入这个脚本，然后手动设置不同星球的自传和公转的速度。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">planetAround</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> selfround = <span class=\"hljs-number\">1f</span>; <span class=\"hljs-comment\">//自转速度</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> pubaround = <span class=\"hljs-number\">1f</span>; <span class=\"hljs-comment\">//公转速度</span><br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.transform.Rotate(Vector3.up * Time.deltaTime *selfround);<br>        <span class=\"hljs-keyword\">this</span>.transform.RotateAround(target.transform.position, Vector3.up, <span class=\"hljs-number\">5</span> * pubaround * Time.deltaTime);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>实际效果：</p>\n<p><img src=\"../../../assets/game/1023/solar.gif\" alt=\"solar\"></p>\n</li>\n</ul>\n<p>🍭</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p><img src=\"../../../assets/game/1023/hw.jpg\" alt=\"hw\"></p>\n<p>试玩游戏界面</p>\n<p><img src=\"../../../assets/game/1023/1.jpg\" alt=\"1\"></p>\n<p><strong>游戏规则：</strong></p>\n<ul>\n<li>游戏开始时，在河岸的一边有3个牧师与3个魔鬼，他们都想过到河的另一边。</li>\n<li>只有一艘小船，小船每次最多乘两个人，且必须有一个人船才能动。</li>\n<li>玩家可以点击牧师或魔鬼让他们上下船，点击船来使船在两岸往返。</li>\n<li>如果在某一河岸牧师的数量少于魔鬼的数量（包括停在岸边船上人的数量），牧师被杀死，游戏失败。</li>\n<li>使牧师与魔鬼都到达对岸时，游戏胜利。</li>\n</ul>\n<h4 id=\"Object\">Object</h4>\n<table>\n<thead>\n<tr>\n<th>Object</th>\n<th>Num</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>河岸(Coast)</td>\n<td>2</td>\n</tr>\n<tr>\n<td>河水(Water)</td>\n<td>1</td>\n</tr>\n<tr>\n<td>船(Boat)</td>\n<td>1</td>\n</tr>\n<tr>\n<td>牧师(Priest)</td>\n<td>3</td>\n</tr>\n<tr>\n<td>恶魔(Devil)</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"UserAction\">UserAction</h4>\n<table>\n<thead>\n<tr>\n<th>Action</th>\n<th>Condition</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>点击岸上角色</td>\n<td>船在相应的河岸，船上人数少于2人</td>\n<td>角色上船</td>\n</tr>\n<tr>\n<td>点击船上角色</td>\n<td>无</td>\n<td>角色上岸</td>\n</tr>\n<tr>\n<td>点击船</td>\n<td>船上有至少一个角色</td>\n<td>船移动到另一岸</td>\n</tr>\n<tr>\n<td>点击Restart</td>\n<td>游戏结束</td>\n<td>重新开始游戏</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Prefabs\">Prefabs</h4>\n<p>涉及的材质与部分预制来源于Assest Store。</p>\n<p>河岸(Coast)</p>\n<p><img src=\"../../../assets/game/1023/Coast.jpg\" alt=\"Coast\"></p>\n<p>河水(Water)</p>\n<p><img src=\"../../../assets/game/1023/Water.jpg\" alt=\"Water\"></p>\n<p>船(Boat)</p>\n<p><img src=\"../../../assets/game/1023/Boat.jpg\" alt=\"Boat\"></p>\n<p>牧师(Priest)</p>\n<p><img src=\"../../../assets/game/1023/Priest.jpg\" alt=\"Priest\"></p>\n<p>恶魔(Devil)</p>\n<p><img src=\"../../../assets/game/1023/Devil.jpg\" alt=\"Devil\"></p>\n<h4 id=\"MVC框架\">MVC框架</h4>\n<p><img src=\"../../../assets/game/1023/Map.jpg\" alt=\"Map\"></p>\n<h4 id=\"主要代码\">主要代码</h4>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets</a></p>\n<h5 id=\"Director\">Director</h5>\n<p>采用单例模式，在运行时才创建Director实例，若已创建该实例不会重复创建。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Director</span> : <span class=\"hljs-title\">System.Object</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> Director _instance;<br><br>    <span class=\"hljs-keyword\">public</span> ISceneController currentSceneController &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Director <span class=\"hljs-title\">getInstance</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(_instance == <span class=\"hljs-literal\">null</span>)&#123;<br>            _instance = <span class=\"hljs-keyword\">new</span> Director();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> _instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"ISceneController\">ISceneController</h5>\n<p>场记接口，用于加载场景资源。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResources</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"IUserAction\">IUserAction</h5>\n<p>用户操作接口，用于记录可能的用户操作。这里将上述的4个行为转化为以下3个。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController charactorController</span>)</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>;  <br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"Moveable\">Moveable</h5>\n<p>可移动脚本，具有该组件的游戏对象才可以移动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Moveable</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">20</span>;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;not moving 1-&gt;moving to middle 2-&gt;moving to destination</span><br>    <span class=\"hljs-built_in\">int</span> moveStatus;<br>    Vector3 destination;<br>    Vector3 middle;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (moveStatus == <span class=\"hljs-number\">1</span>) &#123;<br>\t\t\ttransform.position = Vector3.MoveTowards (transform.position, middle, moveSpeed * Time.deltaTime);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (transform.position == middle) &#123;<br>\t\t\t\tmoveStatus = <span class=\"hljs-number\">2</span>;<br>\t\t\t&#125;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (moveStatus == <span class=\"hljs-number\">2</span>) &#123;<br>\t\t\ttransform.position = Vector3.MoveTowards (transform.position, destination, moveSpeed * Time.deltaTime);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (transform.position == destination) &#123;<br>\t\t\t\tmoveStatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setDestination</span>(<span class=\"hljs-params\">Vector3 d</span>)</span> &#123;<br>\t\tdestination = d;<br>\t\tmiddle = d;<br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Moving Boat</span><br>\t\t<span class=\"hljs-keyword\">if</span> (d.y == transform.position.y) &#123;\t<br>\t\t\tmoveStatus = <span class=\"hljs-number\">2</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Move character from coast to boat</span><br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (d.y &lt; transform.position.y) &#123;<br>\t\t\tmiddle.y = transform.position.y;<br>\t\t&#125; <br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Move character from boat to coast</span><br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tmiddle.x = transform.position.x;<br>\t\t&#125;<br>\t\tmoveStatus = <span class=\"hljs-number\">1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveStatus = <span class=\"hljs-number\">0</span>;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"CoastController\">CoastController</h5>\n<p>河岸控制器，用于创建河岸及涉及河岸的各种操作</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CoastController</span> <br>&#123;<br>\t<span class=\"hljs-keyword\">readonly</span> GameObject coast;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 startPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 endPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">-9</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] positions;<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> direction : Start or End</span><br>\t<span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">string</span> direction;\t<br><br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>\tmyCharacterController[] passengerPlaner;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CoastController</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> direc</span>)</span> &#123;<br>\t\tpositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123;<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">6.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">7.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">8.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <br>\t\t\t<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">9.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">10.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">11.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>)&#125;;<br><br>\t\tpassengerPlaner = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br><br>\t\t<span class=\"hljs-keyword\">if</span> (direc == <span class=\"hljs-string\">&quot;Start&quot;</span>) &#123;<br>\t\t\tcoast = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Coast&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), startPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcoast.name = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>            coast.tag = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(direc == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>\t\t\tcoast = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Coast&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), endPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcoast.name = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>            coast.tag = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getEmptyIndex</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] == <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> i;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Vector3 <span class=\"hljs-title\">getEmptyPosition</span>()</span> &#123;<br>\t\tVector3 pos = positions [getEmptyIndex ()];<br>        <span class=\"hljs-keyword\">if</span>(direction == <span class=\"hljs-string\">&quot;End&quot;</span>)<br>            pos.x *= <span class=\"hljs-number\">-1</span>;<br>\t\t<span class=\"hljs-keyword\">return</span> pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnCoast</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span> index = getEmptyIndex ();<br>\t\tpassengerPlaner [index] = cC;<br>\t&#125;<br>\t\t<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> myCharacterController <span class=\"hljs-title\">getOffCoast</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> passengerName</span>)</span> &#123;\t<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] != <span class=\"hljs-literal\">null</span> &amp;&amp; passengerPlaner [i].getName () == passengerName) &#123;<br>\t\t\t\tmyCharacterController cC = passengerPlaner [i];<br>\t\t\t\tpassengerPlaner [i] = <span class=\"hljs-literal\">null</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> cC;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDirection</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> direction;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] <span class=\"hljs-title\">getNum</span>()</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span>[] count = &#123;<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>&#125;;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] == <span class=\"hljs-literal\">null</span>)<br>\t\t\t\t<span class=\"hljs-keyword\">continue</span>;<br>\t\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i].getType () == <span class=\"hljs-number\">0</span>) &#123;\t<br>\t\t\t\tcount[<span class=\"hljs-number\">0</span>]++;<br>\t\t\t&#125; <br>            <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tcount[<span class=\"hljs-number\">1</span>]++;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> count;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tpassengerPlaner = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"BoatController\">BoatController</h5>\n<p>船控制器，用于创建船及涉及船的各种操作。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BoatController</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> GameObject boat;<br>\t<span class=\"hljs-keyword\">readonly</span> Moveable moveScript;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 startPosition = <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 endPosition = <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] startPositions;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] endPositions;<br>    <br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>    <span class=\"hljs-built_in\">string</span> direction; <br>\tmyCharacterController[] passenger = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">2</span>];<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">BoatController</span>()</span> &#123;<br>\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br><br>\t\tstartPositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123; <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">4.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">5.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>) &#125;;<br>\t\tendPositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123; <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-5.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-4.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>) &#125;;<br><br>\t\tboat = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Boat&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), startPosition, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\tboat.name = <span class=\"hljs-string\">&quot;boat&quot;</span>;<br>        boat.tag = <span class=\"hljs-string\">&quot;Boat&quot;</span>;<br><br>\t\tmoveScript = boat.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Moveable)) <span class=\"hljs-keyword\">as</span> Moveable;<br>\t\tboat.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Click));<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Move</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tmoveScript.setDestination(startPosition);<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tmoveScript.setDestination(endPosition);<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getEmptyIndex</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] == <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> i;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isEmpty</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] != <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Vector3 <span class=\"hljs-title\">getEmptyPosition</span>()</span> &#123;<br>\t\tVector3 pos;<br>\t\t<span class=\"hljs-built_in\">int</span> emptyIndex = getEmptyIndex ();<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tpos = endPositions[emptyIndex];<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tpos = startPositions[emptyIndex];<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnBoat</span>(<span class=\"hljs-params\">myCharacterController characterCtrl</span>)</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span> index = getEmptyIndex ();<br>\t\tpassenger [index] = characterCtrl;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> myCharacterController <span class=\"hljs-title\">getOffBoat</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> passenger_name</span>)</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] != <span class=\"hljs-literal\">null</span> &amp;&amp; passenger [i].getName () == passenger_name) &#123;<br>\t\t\t\tmyCharacterController charactorCtrl = passenger [i];<br>\t\t\t\tpassenger [i] = <span class=\"hljs-literal\">null</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> charactorCtrl;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">getGameobj</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> boat;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDirection</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> direction;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] <span class=\"hljs-title\">getNum</span>()</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span>[] count = &#123;<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>&#125;;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] == <span class=\"hljs-literal\">null</span>)<br>\t\t\t\t<span class=\"hljs-keyword\">continue</span>;<br>\t\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i].getType () == <span class=\"hljs-number\">0</span>) &#123;\t<br>\t\t\t\tcount[<span class=\"hljs-number\">0</span>]++;<br>\t\t\t&#125; <br>\t\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tcount[<span class=\"hljs-number\">1</span>]++;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> count;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveScript.reset ();<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tMove ();<br>\t\t&#125;<br>\t\tpassenger = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">2</span>];<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"myCharacterController\">myCharacterController</h5>\n<p>角色控制器，用于创建牧师(Priest)与魔鬼(Devil)，及涉及角色的各种操作。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myCharacterController</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> GameObject character;<br>\t<span class=\"hljs-keyword\">readonly</span> Moveable moveScript;<br>\t<span class=\"hljs-keyword\">readonly</span> Click click;<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t<span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">int</span> characterType;\t<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>\t<span class=\"hljs-built_in\">bool</span> _isOnBoat;<br>\tCoastController coastController;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">myCharacterController</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> _character</span>)</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (_character == <span class=\"hljs-string\">&quot;Priest&quot;</span>) &#123;<br>\t\t\tcharacter = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Priest&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), Vector3.zero, Quaternion.Euler(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcharacterType = <span class=\"hljs-number\">0</span>;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tcharacter = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Devil&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), Vector3.zero, Quaternion.Euler(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcharacterType = <span class=\"hljs-number\">1</span>;<br>\t\t&#125;<br>\t\tmoveScript = character.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Moveable)) <span class=\"hljs-keyword\">as</span> Moveable;<br><br>\t\tclick = character.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Click)) <span class=\"hljs-keyword\">as</span> Click;<br>\t\tclick.setController (<span class=\"hljs-keyword\">this</span>);<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setName</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> name</span>)</span> &#123;<br>\t\tcharacter.name = name;<br>\t&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setTag</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> tag</span>)</span> &#123;<br>\t\tcharacter.tag = tag;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setPosition</span>(<span class=\"hljs-params\">Vector3 pos</span>)</span> &#123;<br>\t\tcharacter.transform.position = pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveTo</span>(<span class=\"hljs-params\">Vector3 destination</span>)</span> &#123;<br>\t\tmoveScript.setDestination(destination);<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getType</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> characterType;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getName</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> character.name;<br>\t&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getTag</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> character.tag;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnBoat</span>(<span class=\"hljs-params\">BoatController boat</span>)</span> &#123;<br>\t\tcoastController = <span class=\"hljs-literal\">null</span>;<br>\t\tcharacter.transform.parent = boat.getGameobj().transform;<br>\t\t_isOnBoat = <span class=\"hljs-literal\">true</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnCoast</span>(<span class=\"hljs-params\">CoastController coast</span>)</span> &#123;<br>\t\tcoastController = coast;<br>\t\tcharacter.transform.parent = <span class=\"hljs-literal\">null</span>;<br>\t\t_isOnBoat = <span class=\"hljs-literal\">false</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isOnBoat</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> _isOnBoat;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> CoastController <span class=\"hljs-title\">getCoastController</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> coastController;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveScript.reset ();<br>\t\tcoastController = (Director.getInstance ().currentSceneController <span class=\"hljs-keyword\">as</span> FirstControllor).startCoast;<br>\t\tgetOnCoast (coastController);<br>\t\tsetPosition (coastController.getEmptyPosition ());<br>\t\tcoastController.getOnCoast (<span class=\"hljs-keyword\">this</span>);<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"FirstController\">FirstController</h5>\n<p>最高层控制器，实现场记接口、用户行动接口的功能。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> Vector3 waterPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.5F</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br>    <span class=\"hljs-keyword\">private</span> myCharacterController[] characters;<br>    myUserGUI userGUI;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        characters = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>        LoadResources();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResources</span>()</span>&#123;<br>        GameObject water = Instantiate(Resources.Load(<span class=\"hljs-string\">&quot;Prefabs/Water&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), waterPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>        water.name = <span class=\"hljs-string\">&quot;water&quot;</span>;<br>        water.tag = <span class=\"hljs-string\">&quot;Water&quot;</span>;<br><br>        startCoast = <span class=\"hljs-keyword\">new</span> CoastController(<span class=\"hljs-string\">&quot;Start&quot;</span>);<br>        endCoast = <span class=\"hljs-keyword\">new</span> CoastController(<span class=\"hljs-string\">&quot;End&quot;</span>);<br>        boat = <span class=\"hljs-keyword\">new</span> BoatController();<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">3</span>;i++)&#123;<br>            myCharacterController priest = <span class=\"hljs-keyword\">new</span> myCharacterController(<span class=\"hljs-string\">&quot;Priest&quot;</span>);<br>            priest.setName(<span class=\"hljs-string\">&quot;Priest &quot;</span>+i);<br>            priest.setTag(<span class=\"hljs-string\">&quot;Priest&quot;</span>);<br>            priest.setPosition(startCoast.getEmptyPosition());<br>            priest.getOnCoast(startCoast);<br>            startCoast.getOnCoast(priest);<br>            characters[i] = priest;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">3</span>;i++)&#123;<br>            myCharacterController devil = <span class=\"hljs-keyword\">new</span> myCharacterController(<span class=\"hljs-string\">&quot;Devil&quot;</span>);<br>            devil.setName(<span class=\"hljs-string\">&quot;Devil &quot;</span>+i);<br>            devil.setTag(<span class=\"hljs-string\">&quot;Devil&quot;</span>);<br>            devil.setPosition(startCoast.getEmptyPosition());<br>            devil.getOnCoast(startCoast);<br>            startCoast.getOnCoast(devil);<br>            characters[i+<span class=\"hljs-number\">3</span>] = devil;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(boat.isEmpty())<br>            <span class=\"hljs-keyword\">return</span>;<br>        boat.Move();<br>        userGUI.status = checkGameOver();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(cC.isOnBoat())&#123;<br>            CoastController coast;<br>            <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;Start&quot;</span>)<br>                coast = startCoast;<br>            <span class=\"hljs-keyword\">else</span><br>                coast = endCoast;<br><br>            boat.getOffBoat(cC.getName());<br>            cC.moveTo(coast.getEmptyPosition());<br>            cC.getOnCoast(coast);<br>            coast.getOnCoast(cC);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            CoastController coast = cC.getCoastController();<br>            <span class=\"hljs-keyword\">if</span>(boat.getEmptyIndex () == <span class=\"hljs-number\">-1</span> || coast.getDirection() != boat.getDirection())<br>                <span class=\"hljs-keyword\">return</span>;<br>            coast.getOffCoast(cC.getName());<br>            cC.moveTo(boat.getEmptyPosition());<br>            cC.getOnBoat(boat);<br>            boat.getOnBoat(cC);<br>        &#125;<br><br>        userGUI.status = checkGameOver();<br>    &#125;<br><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> -1-&gt;lose 0-&gt;unfinish 1-&gt;win</span><br>    <span class=\"hljs-function\"><span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">checkGameOver</span>()</span>&#123;<br>        <span class=\"hljs-built_in\">int</span> startPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> startDevil = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endDevil = <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-built_in\">int</span>[] startCount = startCoast.getNum();<br>        startPriest += startCount[<span class=\"hljs-number\">0</span>];<br>        startDevil += startCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-built_in\">int</span>[] endCount = endCoast.getNum();<br>        endPriest += endCount[<span class=\"hljs-number\">0</span>];<br>        endDevil += endCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-keyword\">if</span>(endDevil+endPriest ==<span class=\"hljs-number\">6</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>        <br>        <span class=\"hljs-built_in\">int</span>[] boatCount = boat.getNum();<br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection() == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            endPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            endDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            startPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            startDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(startPriest&lt;startDevil &amp;&amp; startPriest&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>        <span class=\"hljs-keyword\">if</span>(endPriest&lt;endDevil &amp;&amp; endPriest&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>            <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>        <br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        boat.reset();<br>        startCoast.reset();<br>        endCoast.reset();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;characters.Length;i++)<br>            characters[i].reset();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"Click\">Click</h5>\n<p>点击脚本，检测船和角色是否被点击，从而进行移动的操作。其中，角色和船必须含有碰撞体的组件，不然无法监听对象是否被点击。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Click</span> : <span class=\"hljs-title\">MonoBehaviour</span> <br>&#123;<br>    IUserAction userAction;<br>    myCharacterController characterController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setController</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        characterController = cC;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        userAction = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnMouseDown</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(gameObject.tag == <span class=\"hljs-string\">&quot;Boat&quot;</span>)<br>            userAction.moveBoat();<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(gameObject.tag == <span class=\"hljs-string\">&quot;Priest&quot;</span> || gameObject.tag == <span class=\"hljs-string\">&quot;Devil&quot;</span>)<br>            userAction.ClickCharacter(characterController);<br>        Debug.Log(<span class=\"hljs-string\">&quot;Click&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h5 id=\"myUserGUI\">myUserGUI</h5>\n<p>游戏结束的界面设计。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> status = <span class=\"hljs-number\">0</span>;<br>    GUIStyle style;<br>    GUIStyle buttonStyle;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        action = Director.getInstance ().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br><br>\t\tstyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>\t\tstyle.fontSize = <span class=\"hljs-number\">40</span>;<br>\t\tstyle.alignment = TextAnchor.MiddleCenter;<br><br>\t\tbuttonStyle = <span class=\"hljs-keyword\">new</span> GUIStyle(<span class=\"hljs-string\">&quot;button&quot;</span>);<br>\t\tbuttonStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (status == <span class=\"hljs-number\">-1</span>) &#123;<br>\t\t\tGUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-50</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-85</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Gameover!&quot;</span>, style);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-70</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">140</span>, <span class=\"hljs-number\">70</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>, buttonStyle)) &#123;<br>\t\t\t\tstatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(status == <span class=\"hljs-number\">1</span>) &#123;<br>\t\t\tGUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-50</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-85</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;You win!&quot;</span>, style);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-70</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">140</span>, <span class=\"hljs-number\">70</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>, buttonStyle)) &#123;<br>\t\t\t\tstatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"实现效果\">实现效果</h5>\n<p><img src=\"../../../assets/game/1023/PandD.gif\" alt=\"PandD\"></p>\n<h5 id=\"有待改进\">有待改进</h5>\n<ul>\n<li>没有添加角色行走的动画，及制作朝向</li>\n<li>河水和船等动画也没有制作</li>\n<li>没有加1min的倒计时</li>\n<li>游戏失败没有等船到岸之后弹出来</li>\n</ul>\n<blockquote>\n<p>Cauchy       2022.10.23</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：<br>\n1.简答题（涉及游戏对象运动）<br>\n2.编程实践</p>\n<p>ps. GIF图片加载比较慢</p>\n</blockquote>","more":"<p>🦉</p>\n<h3 id=\"一、简答题\">一、简答题</h3>\n<ul>\n<li>\n<p>游戏对象运动的本质是什么？</p>\n<p>游戏对象随着每一帧而发生的空间位置（相对的或绝对的）、旋转角度及缩放的变化。</p>\n</li>\n<li>\n<p>用三种以上方法实现物体的抛物线运动。</p>\n<p>抛物线运动的实质是一个方向匀速运动，与其垂直的一个方向进行匀加速运动。</p>\n<p>效果图：</p>\n<p><img src=\"../../../assets/game/1023/parabola.gif\" alt=\"parabola\"></p>\n<ul>\n<li>\n<p>法一：对transform.position分方向加变化值</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧</span><br>            <span class=\"hljs-comment\">//向下的方向 匀变速 </span><br>            <span class=\"hljs-keyword\">this</span>.transform.position += Vector3.down * Time.deltaTime * v;<br>            <span class=\"hljs-comment\">//向左的方向 匀速</span><br>            <span class=\"hljs-keyword\">this</span>.transform.position += Vector3.left * Time.deltaTime * <span class=\"hljs-number\">2f</span>;<br>            <br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>; <span class=\"hljs-comment\">//加速度为0.1</span><br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>法二：对transform.position整体方向加变化值</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧      </span><br>        \t<span class=\"hljs-comment\">// 注意正负区分方向</span><br>            Vector3 change = <span class=\"hljs-keyword\">new</span> Vector3(-Time.deltaTime*<span class=\"hljs-number\">2f</span>, -Time.deltaTime *v, <span class=\"hljs-number\">0f</span>);<br>            <span class=\"hljs-keyword\">this</span>.transform.position += change;<br>            <br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>;<br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>法三：对transform.position应用transform.Translate函数</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(frame&lt;=<span class=\"hljs-number\">60</span>)&#123;  <span class=\"hljs-comment\">//运行60帧</span><br>            Vector3 change = <span class=\"hljs-keyword\">new</span> Vector3(-Time.deltaTime*<span class=\"hljs-number\">2f</span>, -Time.deltaTime *v, <span class=\"hljs-number\">0f</span>);<br>            <span class=\"hljs-keyword\">this</span>.transform.Translate(change,Space.World);<br><br>\t\t\t<span class=\"hljs-comment\">// transform.Translate默认是相对于变换的本地轴(Space.Self)来应用该移动</span><br>\t\t\t<span class=\"hljs-comment\">// 坐标变换有所区别，不是很好分辨方向</span><br>            <span class=\"hljs-comment\">// Vector3 change = new Vector3(-Time.deltaTime *v,Time.deltaTime*2f,0f);</span><br>            <span class=\"hljs-comment\">// this.transform.Translate(change);</span><br><br>            <span class=\"hljs-keyword\">this</span>.transform.Rotate(<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">0f</span>,<span class=\"hljs-number\">1f</span>,Space.Self); <span class=\"hljs-comment\">//每帧旋转 1°</span><br>            v+=<span class=\"hljs-number\">0.1f</span>;<br>            frame++;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>写一个程序，实现完整的太阳系，其他星球围绕太阳的转速必须不一样，且不在一个法平面上。</p>\n<p>这里的实现方式是写了个脚本，将围绕太阳旋转的星球都加入这个脚本，然后手动设置不同星球的自传和公转的速度。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">planetAround</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> selfround = <span class=\"hljs-number\">1f</span>; <span class=\"hljs-comment\">//自转速度</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> pubaround = <span class=\"hljs-number\">1f</span>; <span class=\"hljs-comment\">//公转速度</span><br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.transform.Rotate(Vector3.up * Time.deltaTime *selfround);<br>        <span class=\"hljs-keyword\">this</span>.transform.RotateAround(target.transform.position, Vector3.up, <span class=\"hljs-number\">5</span> * pubaround * Time.deltaTime);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>实际效果：</p>\n<p><img src=\"../../../assets/game/1023/solar.gif\" alt=\"solar\"></p>\n</li>\n</ul>\n<p>🍭</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p><img src=\"../../../assets/game/1023/hw.jpg\" alt=\"hw\"></p>\n<p>试玩游戏界面</p>\n<p><img src=\"../../../assets/game/1023/1.jpg\" alt=\"1\"></p>\n<p><strong>游戏规则：</strong></p>\n<ul>\n<li>游戏开始时，在河岸的一边有3个牧师与3个魔鬼，他们都想过到河的另一边。</li>\n<li>只有一艘小船，小船每次最多乘两个人，且必须有一个人船才能动。</li>\n<li>玩家可以点击牧师或魔鬼让他们上下船，点击船来使船在两岸往返。</li>\n<li>如果在某一河岸牧师的数量少于魔鬼的数量（包括停在岸边船上人的数量），牧师被杀死，游戏失败。</li>\n<li>使牧师与魔鬼都到达对岸时，游戏胜利。</li>\n</ul>\n<h4 id=\"Object\">Object</h4>\n<table>\n<thead>\n<tr>\n<th>Object</th>\n<th>Num</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>河岸(Coast)</td>\n<td>2</td>\n</tr>\n<tr>\n<td>河水(Water)</td>\n<td>1</td>\n</tr>\n<tr>\n<td>船(Boat)</td>\n<td>1</td>\n</tr>\n<tr>\n<td>牧师(Priest)</td>\n<td>3</td>\n</tr>\n<tr>\n<td>恶魔(Devil)</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"UserAction\">UserAction</h4>\n<table>\n<thead>\n<tr>\n<th>Action</th>\n<th>Condition</th>\n<th>Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>点击岸上角色</td>\n<td>船在相应的河岸，船上人数少于2人</td>\n<td>角色上船</td>\n</tr>\n<tr>\n<td>点击船上角色</td>\n<td>无</td>\n<td>角色上岸</td>\n</tr>\n<tr>\n<td>点击船</td>\n<td>船上有至少一个角色</td>\n<td>船移动到另一岸</td>\n</tr>\n<tr>\n<td>点击Restart</td>\n<td>游戏结束</td>\n<td>重新开始游戏</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Prefabs\">Prefabs</h4>\n<p>涉及的材质与部分预制来源于Assest Store。</p>\n<p>河岸(Coast)</p>\n<p><img src=\"../../../assets/game/1023/Coast.jpg\" alt=\"Coast\"></p>\n<p>河水(Water)</p>\n<p><img src=\"../../../assets/game/1023/Water.jpg\" alt=\"Water\"></p>\n<p>船(Boat)</p>\n<p><img src=\"../../../assets/game/1023/Boat.jpg\" alt=\"Boat\"></p>\n<p>牧师(Priest)</p>\n<p><img src=\"../../../assets/game/1023/Priest.jpg\" alt=\"Priest\"></p>\n<p>恶魔(Devil)</p>\n<p><img src=\"../../../assets/game/1023/Devil.jpg\" alt=\"Devil\"></p>\n<h4 id=\"MVC框架\">MVC框架</h4>\n<p><img src=\"../../../assets/game/1023/Map.jpg\" alt=\"Map\"></p>\n<h4 id=\"主要代码\">主要代码</h4>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw3/Assets</a></p>\n<h5 id=\"Director\">Director</h5>\n<p>采用单例模式，在运行时才创建Director实例，若已创建该实例不会重复创建。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Director</span> : <span class=\"hljs-title\">System.Object</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> Director _instance;<br><br>    <span class=\"hljs-keyword\">public</span> ISceneController currentSceneController &#123; <span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Director <span class=\"hljs-title\">getInstance</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(_instance == <span class=\"hljs-literal\">null</span>)&#123;<br>            _instance = <span class=\"hljs-keyword\">new</span> Director();<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> _instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"ISceneController\">ISceneController</h5>\n<p>场记接口，用于加载场景资源。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResources</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"IUserAction\">IUserAction</h5>\n<p>用户操作接口，用于记录可能的用户操作。这里将上述的4个行为转化为以下3个。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController charactorController</span>)</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>;  <br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"Moveable\">Moveable</h5>\n<p>可移动脚本，具有该组件的游戏对象才可以移动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Moveable</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">20</span>;<br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;not moving 1-&gt;moving to middle 2-&gt;moving to destination</span><br>    <span class=\"hljs-built_in\">int</span> moveStatus;<br>    Vector3 destination;<br>    Vector3 middle;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (moveStatus == <span class=\"hljs-number\">1</span>) &#123;<br>\t\t\ttransform.position = Vector3.MoveTowards (transform.position, middle, moveSpeed * Time.deltaTime);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (transform.position == middle) &#123;<br>\t\t\t\tmoveStatus = <span class=\"hljs-number\">2</span>;<br>\t\t\t&#125;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (moveStatus == <span class=\"hljs-number\">2</span>) &#123;<br>\t\t\ttransform.position = Vector3.MoveTowards (transform.position, destination, moveSpeed * Time.deltaTime);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (transform.position == destination) &#123;<br>\t\t\t\tmoveStatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setDestination</span>(<span class=\"hljs-params\">Vector3 d</span>)</span> &#123;<br>\t\tdestination = d;<br>\t\tmiddle = d;<br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Moving Boat</span><br>\t\t<span class=\"hljs-keyword\">if</span> (d.y == transform.position.y) &#123;\t<br>\t\t\tmoveStatus = <span class=\"hljs-number\">2</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Move character from coast to boat</span><br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (d.y &lt; transform.position.y) &#123;<br>\t\t\tmiddle.y = transform.position.y;<br>\t\t&#125; <br>\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Move character from boat to coast</span><br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tmiddle.x = transform.position.x;<br>\t\t&#125;<br>\t\tmoveStatus = <span class=\"hljs-number\">1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveStatus = <span class=\"hljs-number\">0</span>;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"CoastController\">CoastController</h5>\n<p>河岸控制器，用于创建河岸及涉及河岸的各种操作</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CoastController</span> <br>&#123;<br>\t<span class=\"hljs-keyword\">readonly</span> GameObject coast;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 startPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 endPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">-9</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] positions;<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> direction : Start or End</span><br>\t<span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">string</span> direction;\t<br><br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>\tmyCharacterController[] passengerPlaner;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CoastController</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> direc</span>)</span> &#123;<br>\t\tpositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123;<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">6.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">7.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">8.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <br>\t\t\t<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">9.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">10.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">11.5F</span>,<span class=\"hljs-number\">2.0F</span>,<span class=\"hljs-number\">0</span>)&#125;;<br><br>\t\tpassengerPlaner = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br><br>\t\t<span class=\"hljs-keyword\">if</span> (direc == <span class=\"hljs-string\">&quot;Start&quot;</span>) &#123;<br>\t\t\tcoast = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Coast&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), startPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcoast.name = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>            coast.tag = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(direc == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>\t\t\tcoast = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Coast&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), endPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcoast.name = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>            coast.tag = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getEmptyIndex</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] == <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> i;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Vector3 <span class=\"hljs-title\">getEmptyPosition</span>()</span> &#123;<br>\t\tVector3 pos = positions [getEmptyIndex ()];<br>        <span class=\"hljs-keyword\">if</span>(direction == <span class=\"hljs-string\">&quot;End&quot;</span>)<br>            pos.x *= <span class=\"hljs-number\">-1</span>;<br>\t\t<span class=\"hljs-keyword\">return</span> pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnCoast</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span> index = getEmptyIndex ();<br>\t\tpassengerPlaner [index] = cC;<br>\t&#125;<br>\t\t<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> myCharacterController <span class=\"hljs-title\">getOffCoast</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> passengerName</span>)</span> &#123;\t<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] != <span class=\"hljs-literal\">null</span> &amp;&amp; passengerPlaner [i].getName () == passengerName) &#123;<br>\t\t\t\tmyCharacterController cC = passengerPlaner [i];<br>\t\t\t\tpassengerPlaner [i] = <span class=\"hljs-literal\">null</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> cC;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDirection</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> direction;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] <span class=\"hljs-title\">getNum</span>()</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span>[] count = &#123;<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>&#125;;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passengerPlaner.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i] == <span class=\"hljs-literal\">null</span>)<br>\t\t\t\t<span class=\"hljs-keyword\">continue</span>;<br>\t\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t\t\t<span class=\"hljs-keyword\">if</span> (passengerPlaner [i].getType () == <span class=\"hljs-number\">0</span>) &#123;\t<br>\t\t\t\tcount[<span class=\"hljs-number\">0</span>]++;<br>\t\t\t&#125; <br>            <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tcount[<span class=\"hljs-number\">1</span>]++;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> count;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tpassengerPlaner = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"BoatController\">BoatController</h5>\n<p>船控制器，用于创建船及涉及船的各种操作。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BoatController</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> GameObject boat;<br>\t<span class=\"hljs-keyword\">readonly</span> Moveable moveScript;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 startPosition = <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3 endPosition = <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] startPositions;<br>\t<span class=\"hljs-keyword\">readonly</span> Vector3[] endPositions;<br>    <br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>    <span class=\"hljs-built_in\">string</span> direction; <br>\tmyCharacterController[] passenger = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">2</span>];<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">BoatController</span>()</span> &#123;<br>\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br><br>\t\tstartPositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123; <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">4.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">5.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>) &#125;;<br>\t\tendPositions = <span class=\"hljs-keyword\">new</span> Vector3[] &#123; <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-5.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">-4.5F</span>, <span class=\"hljs-number\">1.1F</span>, <span class=\"hljs-number\">0</span>) &#125;;<br><br>\t\tboat = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Boat&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), startPosition, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\tboat.name = <span class=\"hljs-string\">&quot;boat&quot;</span>;<br>        boat.tag = <span class=\"hljs-string\">&quot;Boat&quot;</span>;<br><br>\t\tmoveScript = boat.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Moveable)) <span class=\"hljs-keyword\">as</span> Moveable;<br>\t\tboat.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Click));<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Move</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tmoveScript.setDestination(startPosition);<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;Start&quot;</span>;<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tmoveScript.setDestination(endPosition);<br>\t\t\tdirection = <span class=\"hljs-string\">&quot;End&quot;</span>;<br>\t\t&#125;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getEmptyIndex</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] == <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> i;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isEmpty</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] != <span class=\"hljs-literal\">null</span>) &#123;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Vector3 <span class=\"hljs-title\">getEmptyPosition</span>()</span> &#123;<br>\t\tVector3 pos;<br>\t\t<span class=\"hljs-built_in\">int</span> emptyIndex = getEmptyIndex ();<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tpos = endPositions[emptyIndex];<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tpos = startPositions[emptyIndex];<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnBoat</span>(<span class=\"hljs-params\">myCharacterController characterCtrl</span>)</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span> index = getEmptyIndex ();<br>\t\tpassenger [index] = characterCtrl;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> myCharacterController <span class=\"hljs-title\">getOffBoat</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> passenger_name</span>)</span> &#123;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] != <span class=\"hljs-literal\">null</span> &amp;&amp; passenger [i].getName () == passenger_name) &#123;<br>\t\t\t\tmyCharacterController charactorCtrl = passenger [i];<br>\t\t\t\tpassenger [i] = <span class=\"hljs-literal\">null</span>;<br>\t\t\t\t<span class=\"hljs-keyword\">return</span> charactorCtrl;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">getGameobj</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> boat;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDirection</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> direction;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span>[] <span class=\"hljs-title\">getNum</span>()</span> &#123;<br>\t\t<span class=\"hljs-built_in\">int</span>[] count = &#123;<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>&#125;;<br>\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; passenger.Length; i++) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i] == <span class=\"hljs-literal\">null</span>)<br>\t\t\t\t<span class=\"hljs-keyword\">continue</span>;<br>\t\t\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t\t\t<span class=\"hljs-keyword\">if</span> (passenger [i].getType () == <span class=\"hljs-number\">0</span>) &#123;\t<br>\t\t\t\tcount[<span class=\"hljs-number\">0</span>]++;<br>\t\t\t&#125; <br>\t\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t\tcount[<span class=\"hljs-number\">1</span>]++;<br>\t\t\t&#125;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">return</span> count;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveScript.reset ();<br>\t\t<span class=\"hljs-keyword\">if</span> (direction == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tMove ();<br>\t\t&#125;<br>\t\tpassenger = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">2</span>];<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"myCharacterController\">myCharacterController</h5>\n<p>角色控制器，用于创建牧师(Priest)与魔鬼(Devil)，及涉及角色的各种操作。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myCharacterController</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> GameObject character;<br>\t<span class=\"hljs-keyword\">readonly</span> Moveable moveScript;<br>\t<span class=\"hljs-keyword\">readonly</span> Click click;<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> 0-&gt;priest, 1-&gt;devil</span><br>\t<span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">int</span> characterType;\t<br>\t<span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> change frequently</span><br>\t<span class=\"hljs-built_in\">bool</span> _isOnBoat;<br>\tCoastController coastController;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">myCharacterController</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> _character</span>)</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (_character == <span class=\"hljs-string\">&quot;Priest&quot;</span>) &#123;<br>\t\t\tcharacter = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Priest&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), Vector3.zero, Quaternion.Euler(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcharacterType = <span class=\"hljs-number\">0</span>;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tcharacter = Object.Instantiate (Resources.Load (<span class=\"hljs-string\">&quot;Prefabs/Devil&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), Vector3.zero, Quaternion.Euler(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>\t\t\tcharacterType = <span class=\"hljs-number\">1</span>;<br>\t\t&#125;<br>\t\tmoveScript = character.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Moveable)) <span class=\"hljs-keyword\">as</span> Moveable;<br><br>\t\tclick = character.AddComponent (<span class=\"hljs-keyword\">typeof</span>(Click)) <span class=\"hljs-keyword\">as</span> Click;<br>\t\tclick.setController (<span class=\"hljs-keyword\">this</span>);<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setName</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> name</span>)</span> &#123;<br>\t\tcharacter.name = name;<br>\t&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setTag</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> tag</span>)</span> &#123;<br>\t\tcharacter.tag = tag;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setPosition</span>(<span class=\"hljs-params\">Vector3 pos</span>)</span> &#123;<br>\t\tcharacter.transform.position = pos;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveTo</span>(<span class=\"hljs-params\">Vector3 destination</span>)</span> &#123;<br>\t\tmoveScript.setDestination(destination);<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getType</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> characterType;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getName</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> character.name;<br>\t&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getTag</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> character.tag;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnBoat</span>(<span class=\"hljs-params\">BoatController boat</span>)</span> &#123;<br>\t\tcoastController = <span class=\"hljs-literal\">null</span>;<br>\t\tcharacter.transform.parent = boat.getGameobj().transform;<br>\t\t_isOnBoat = <span class=\"hljs-literal\">true</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getOnCoast</span>(<span class=\"hljs-params\">CoastController coast</span>)</span> &#123;<br>\t\tcoastController = coast;<br>\t\tcharacter.transform.parent = <span class=\"hljs-literal\">null</span>;<br>\t\t_isOnBoat = <span class=\"hljs-literal\">false</span>;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isOnBoat</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> _isOnBoat;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> CoastController <span class=\"hljs-title\">getCoastController</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">return</span> coastController;<br>\t&#125;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span> &#123;<br>\t\tmoveScript.reset ();<br>\t\tcoastController = (Director.getInstance ().currentSceneController <span class=\"hljs-keyword\">as</span> FirstControllor).startCoast;<br>\t\tgetOnCoast (coastController);<br>\t\tsetPosition (coastController.getEmptyPosition ());<br>\t\tcoastController.getOnCoast (<span class=\"hljs-keyword\">this</span>);<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"FirstController\">FirstController</h5>\n<p>最高层控制器，实现场记接口、用户行动接口的功能。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> Vector3 waterPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.5F</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br>    <span class=\"hljs-keyword\">private</span> myCharacterController[] characters;<br>    myUserGUI userGUI;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        characters = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>        LoadResources();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResources</span>()</span>&#123;<br>        GameObject water = Instantiate(Resources.Load(<span class=\"hljs-string\">&quot;Prefabs/Water&quot;</span>, <span class=\"hljs-keyword\">typeof</span>(GameObject)), waterPos, Quaternion.identity, <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">as</span> GameObject;<br>        water.name = <span class=\"hljs-string\">&quot;water&quot;</span>;<br>        water.tag = <span class=\"hljs-string\">&quot;Water&quot;</span>;<br><br>        startCoast = <span class=\"hljs-keyword\">new</span> CoastController(<span class=\"hljs-string\">&quot;Start&quot;</span>);<br>        endCoast = <span class=\"hljs-keyword\">new</span> CoastController(<span class=\"hljs-string\">&quot;End&quot;</span>);<br>        boat = <span class=\"hljs-keyword\">new</span> BoatController();<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">3</span>;i++)&#123;<br>            myCharacterController priest = <span class=\"hljs-keyword\">new</span> myCharacterController(<span class=\"hljs-string\">&quot;Priest&quot;</span>);<br>            priest.setName(<span class=\"hljs-string\">&quot;Priest &quot;</span>+i);<br>            priest.setTag(<span class=\"hljs-string\">&quot;Priest&quot;</span>);<br>            priest.setPosition(startCoast.getEmptyPosition());<br>            priest.getOnCoast(startCoast);<br>            startCoast.getOnCoast(priest);<br>            characters[i] = priest;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">3</span>;i++)&#123;<br>            myCharacterController devil = <span class=\"hljs-keyword\">new</span> myCharacterController(<span class=\"hljs-string\">&quot;Devil&quot;</span>);<br>            devil.setName(<span class=\"hljs-string\">&quot;Devil &quot;</span>+i);<br>            devil.setTag(<span class=\"hljs-string\">&quot;Devil&quot;</span>);<br>            devil.setPosition(startCoast.getEmptyPosition());<br>            devil.getOnCoast(startCoast);<br>            startCoast.getOnCoast(devil);<br>            characters[i+<span class=\"hljs-number\">3</span>] = devil;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(boat.isEmpty())<br>            <span class=\"hljs-keyword\">return</span>;<br>        boat.Move();<br>        userGUI.status = checkGameOver();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(cC.isOnBoat())&#123;<br>            CoastController coast;<br>            <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;Start&quot;</span>)<br>                coast = startCoast;<br>            <span class=\"hljs-keyword\">else</span><br>                coast = endCoast;<br><br>            boat.getOffBoat(cC.getName());<br>            cC.moveTo(coast.getEmptyPosition());<br>            cC.getOnCoast(coast);<br>            coast.getOnCoast(cC);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            CoastController coast = cC.getCoastController();<br>            <span class=\"hljs-keyword\">if</span>(boat.getEmptyIndex () == <span class=\"hljs-number\">-1</span> || coast.getDirection() != boat.getDirection())<br>                <span class=\"hljs-keyword\">return</span>;<br>            coast.getOffCoast(cC.getName());<br>            cC.moveTo(boat.getEmptyPosition());<br>            cC.getOnBoat(boat);<br>            boat.getOnBoat(cC);<br>        &#125;<br><br>        userGUI.status = checkGameOver();<br>    &#125;<br><br>    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> -1-&gt;lose 0-&gt;unfinish 1-&gt;win</span><br>    <span class=\"hljs-function\"><span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">checkGameOver</span>()</span>&#123;<br>        <span class=\"hljs-built_in\">int</span> startPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> startDevil = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endDevil = <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-built_in\">int</span>[] startCount = startCoast.getNum();<br>        startPriest += startCount[<span class=\"hljs-number\">0</span>];<br>        startDevil += startCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-built_in\">int</span>[] endCount = endCoast.getNum();<br>        endPriest += endCount[<span class=\"hljs-number\">0</span>];<br>        endDevil += endCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-keyword\">if</span>(endDevil+endPriest ==<span class=\"hljs-number\">6</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;<br>        <br>        <span class=\"hljs-built_in\">int</span>[] boatCount = boat.getNum();<br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection() == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            endPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            endDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            startPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            startDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(startPriest&lt;startDevil &amp;&amp; startPriest&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>        <span class=\"hljs-keyword\">if</span>(endPriest&lt;endDevil &amp;&amp; endPriest&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;<br>            <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;<br>        <br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        boat.reset();<br>        startCoast.reset();<br>        endCoast.reset();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;characters.Length;i++)<br>            characters[i].reset();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"Click\">Click</h5>\n<p>点击脚本，检测船和角色是否被点击，从而进行移动的操作。其中，角色和船必须含有碰撞体的组件，不然无法监听对象是否被点击。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Click</span> : <span class=\"hljs-title\">MonoBehaviour</span> <br>&#123;<br>    IUserAction userAction;<br>    myCharacterController characterController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setController</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        characterController = cC;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        userAction = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnMouseDown</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(gameObject.tag == <span class=\"hljs-string\">&quot;Boat&quot;</span>)<br>            userAction.moveBoat();<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(gameObject.tag == <span class=\"hljs-string\">&quot;Priest&quot;</span> || gameObject.tag == <span class=\"hljs-string\">&quot;Devil&quot;</span>)<br>            userAction.ClickCharacter(characterController);<br>        Debug.Log(<span class=\"hljs-string\">&quot;Click&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h5 id=\"myUserGUI\">myUserGUI</h5>\n<p>游戏结束的界面设计。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> status = <span class=\"hljs-number\">0</span>;<br>    GUIStyle style;<br>    GUIStyle buttonStyle;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        action = Director.getInstance ().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br><br>\t\tstyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>\t\tstyle.fontSize = <span class=\"hljs-number\">40</span>;<br>\t\tstyle.alignment = TextAnchor.MiddleCenter;<br><br>\t\tbuttonStyle = <span class=\"hljs-keyword\">new</span> GUIStyle(<span class=\"hljs-string\">&quot;button&quot;</span>);<br>\t\tbuttonStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>\t\t<span class=\"hljs-keyword\">if</span> (status == <span class=\"hljs-number\">-1</span>) &#123;<br>\t\t\tGUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-50</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-85</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Gameover!&quot;</span>, style);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-70</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">140</span>, <span class=\"hljs-number\">70</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>, buttonStyle)) &#123;<br>\t\t\t\tstatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125; <br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(status == <span class=\"hljs-number\">1</span>) &#123;<br>\t\t\tGUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-50</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-85</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;You win!&quot;</span>, style);<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-70</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">140</span>, <span class=\"hljs-number\">70</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>, buttonStyle)) &#123;<br>\t\t\t\tstatus = <span class=\"hljs-number\">0</span>;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125;<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h5 id=\"实现效果\">实现效果</h5>\n<p><img src=\"../../../assets/game/1023/PandD.gif\" alt=\"PandD\"></p>\n<h5 id=\"有待改进\">有待改进</h5>\n<ul>\n<li>没有添加角色行走的动画，及制作朝向</li>\n<li>河水和船等动画也没有制作</li>\n<li>没有加1min的倒计时</li>\n<li>游戏失败没有等船到岸之后弹出来</li>\n</ul>\n<blockquote>\n<p>Cauchy       2022.10.23</p>\n</blockquote>"},{"layout":"post","title":"HW2: 离散仿真引擎基础","date":"2022-10-04T06:00:00.000Z","subtitle":"离散仿真引擎基础","_content":"\n> 作业简介：\n> 1.简答题（涉及GameObject, Transform, Assets, Prefabs, Component, MonoBehaviour等）\n> 2.编程实践（仅允许使用IMGUI构建UI，训练数据-控制分离的编程思维）\n> 3.思考题（涉及游戏设计模式）\n\n<!--more-->\n\n:rainbow:\n\n### 一、简答题\n\n1. 解释游戏对象(**GameObjects**)和资源(**Assets**)的区别与联系\n\n    **GameObjects**：是 Unity 中的基础对象，表示角色、道具和景物。它们本身并没有取得多大作为，但它们充当组件(Component)的容器，而组件可实现功能。\n\n    <img src=\"02.jpg\" alt=\"02\" style=\"zoom: 80%;\" />\n\n    我们可以看到GameObject列表下有各种属性的对象，包括空属性对象、3D对象、效果、灯光等\n\n    \n\n    **Assets**：表示 Unity 项目中用来创建游戏或应用的任何项；也可以代表项目中的视觉或音频元素，例如 3D 模型、纹理、精灵、音效或音乐；还可以表示更抽象的项目，例如任何用途的颜色渐变、动画遮罩或任意文本或数字数据。\n\n    <img src=\"03.jpg\" alt=\"03\" style=\"zoom:80%;\" />\n\n    我们可以看到Assets创建下有很多类型的资源，如C#脚本，着色器，预制件等。\n\n    \n\n    简单地理解，游戏对象是真正加入到游戏场景里的实体，类似一个空盒子，需要向里面添加各种组件来实功能。资源是创建或外导入的各种数据，可以应用到不同游戏对象身上，可以只是存储在项目里，不一定会使用到当前的游戏场景中。\n\n    <img src=\"01.png\" alt=\"01\" style=\"zoom:80%;\" />\n\n    \n\n2. 下载几个游戏案列，分别总结资源、对象组织和结构（指资源的目录组织结构与游戏对象树的层次结构）\n\n     这里用作展示的是官方的游戏教程里的资源与对象的组织和结构。\n\n    <img src=\"04.jpg\" alt=\"04\" style=\"zoom:80%;\" />\n\n    我们可以看到**资源**一般是按**用途**来分的，不同的文件夹存放不同类别的资源，包括音频、角色、环境、脚本、预制件、场景等，这里还可以看到模型资源里的环境精灵是按颜色来分类的，脚本里面按使用场景分类。\n\n    \n\n    <img src=\"05.jpg\" alt=\"05\" style=\"zoom:80%;\" /><img src=\"06.jpg\" alt=\"06\" style=\"zoom:80%;\" />\n\n    **游戏对象**主要是根据**功能**不同分类的，可以看到第一个游戏对象树有UI画布、摄像机、角色、格子、敌人等分支，第二个游戏对象树则是利用空对象来写分割线区分结构。\n\n    养成合理分类资源与游戏对象的好习惯，能让我们更高效地制作游戏。\n\n    \n\n3. 编写一个代码，使用 debug 语句来验证 `MonoBehaviour` 基本行为或事件触发的条件\n\n    * 基本行为包括 `Awake()` `Start()` `Update()` `FixedUpdate()` `LateUpdate()`\n    * 常用事件包括 `OnGUI()` `OnDisable()` `OnEnable()`\n\n    *\"MonoBehaviour 类是一个基类，所有 Unity 脚本都默认派生自该类。MonoBehaviour 类允许您启动、停止和管理协程。MonoBehaviour 类提供对大量事件消息的访问，允许您根据项目中当前发生的情况执行代码。\"*\n\n    **MonoBehaviour 方法简介**\n\n    * `Awake`：在加载脚本实例时调用，无论该脚本是否启用，初始化脚本时都会调用。其在 Start 前调用\n    * `Start`：在首次调用任何 Update 方法之前启用脚本时，在帧上调用\n    * `Update`：如果启用了 MonoBehaviour，则每帧调用 Update\n    * `FixedUpdate`：具有物理系统的频率；每个固定帧率帧调用该函数；在 FixedUpdate之后，进行Physics系统计算。帧率可以通过 Time.fixedDeltaTime 来访问。与Update相互独立。\n    * `LateUpdate`：如果启用了 Behaviour（指可启用或禁用的组件），则每帧在Update调用后调用 LateUpdate，对于安排脚本的执行顺序很有用。\n    * `OnGUI`：系统调用 OnGUI 来渲染和处理 GUI 事件，是唯一可以实现**“即时模式”GUI (IMGUI)**系统来渲染和处理 GUI 事件的函数。OnGUI 实现可以每帧调用多次（每个事件调用一次），若MonoBehaviour 的 enabled 属性设置为 false，则不会调用 OnGUI()。\n    * `OnDisable`：该函数在行为被禁用时调用。当对象销毁时也会调用该函数，它可用于任何清理代码。 当编译完成后重新加载脚本时，将调用 OnDisable，并在加载脚本后调用 OnEnable。      \n    * `OnEnable`：该函数在对象变为启用和激活状态时调用。\n\n    代码验证：\n\n    ```c#\n    public class Hello : MonoBehaviour\n    {\n        void Awake() {Debug.Log(\"Awake\");}\n        \n        void Start() {Debug.Log(\"Start\");}\n    \n        void Update() {Debug.Log(\"Update\");}\n    \n        void FixedUpdate() {Debug.Log(\"Fixed\");}\n    \n        void OnGUI() {Debug.Log(\"OnGUI\");}\n    \n        void OnEnable() {Debug.Log(\"Enabled\");}\n    \n        void OnDisable() {Debug.Log(\"Disabled\");}\n    }\n    ```\n\n    ![07](07.jpg)\n\n    \n\n    \n\n4. 查找脚本手册，了解 GameObjects, Transform, Component 对象\n\n    * 分别翻译官方对三个对象的描述(Description)\n    * 描述下图中 table 对象(实体)的属性、table 的 Transform 的属性、table 的部件\n    * 用UML图描述三者的关系\n\n    **官方描述**\n\n    * **GameObject** 是 Unity 中的基础对象，表示角色、道具和景物，可以被用来表示所有可以存在于场景中的事物。它是Unity中场景的建筑块，可作为决定GameObject外观功能的功能组件的容器。在脚本中，GameObject类提供了一个可以在代码中使用的方法集合，包括查找、建立连接和在它们 之间发送消息，以及添加或移除附加到 GameObject 的组件和设置它们在场景中与状态有关的值。  \n\n    * **Transform** 用于存储游戏对象的位置、旋转、缩放和父子化状态。每个游戏对象始终附加一个变换组件，无法删除变换组件或创建没有变换组件的游戏对象。 \n\n    * **Component** 是每个GameObject的功能部分，它包含一些可编辑的属性，可以通过编辑这些属性来定义GameObject的行为。\n\n    **图**\n\n    ![08](08.jpg)\n\n    Table的GameObject属性包含Tag(标签)、Layer(层)、Static(是否静态)、勾选框(是否活动)、属性名；\n    Table的Transform属性包含Position(坐标)、Rotation(旋转角)、Scale(大小)；\n    Table的Component属性包括Cube(Mesh Filter)、Mesh Renderer、Box Collider、RIgidbody、Hello(Script)、Red(Material)。\n\n    **UML图**\n\n    <img src=\"09.png\" alt=\"09\" style=\"zoom:80%;\" />\n\n     \n\n5. 资源预设(**Prefabs**)与对象克隆(**clone**)\n\n   * 预设(Prefabs)有什么好处?\n   \n       Unity 的**Prenfabs**系统允许创建、配置和存储游戏对象及其所有组件、属性值和子游戏对象作为可重用资源。预制件资源充当模板，在此模板的基础之上可以在场景中创建新的预制件实例。这可以避免重复制作的无用功，提高资源复用率，节省资源空间。\n   \n   * 预设与对象克隆(clone or copy or Instantiate of Unity Object)关系?\n   \n       预设本身不需要有实例化的游戏对象，而克隆需要复制实例化的游戏对象。预设也更方便进行批量修改。\n   \n   * 制作table预制，写一段代码将table预制资源实例化成游戏对象\n   \n       ```c#\n       public class hello:MonoBehaviour\n       {\n       \tvoid Start()\n       \t{\n       \t\tGameObject table = (GameObject)Resources.Load(\"table\");\n       \t\ttable = Instantiate(table);\n       \t\n       \t\ttable.transform.parent = this.transform;\n       \t\ttable.transform.position = new Vector3(0,0,0);\n       \t}\n       }\n       ```\n   \n\n:cake:\n\n### 二、编程实践\n\n源码地址：[https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs][ydm]\n\n[ydm]:https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs\n\n这里是利用IMGUI做了一个扫雷小游戏。运行窗口大小为Full HD(1920x1080)\n\n实现的效果如下图\n\n![win](win.gif)\n\n**数据定义部分代码：**\n\n```c#\n // Data\n    private int[,] control_arr = new int[16,20]; //用于记录雷和数字 -1是雷 0是空 其他是周围的雷数\n    private int[,] show_arr = new int[16,20]; //用于记录格子可见性 0是可见 1是不可见\n    private int[,] mark_arr = new int[16,20]; //用于玩家标记雷 标记雷为1 此时按钮不可点击\n    \n    private int mine_num = 60; //用于记录剩余雷数\n    private int wrong = 0; //用于记录标错的雷数\n    private int time = 0; //用于记录用时\n    private float tmptime = 0; //用于记录上一帧时间(不会重复初始化)\n    private int state = 0; //0为挖矿模式，1为标记模式 输了为-1，赢了为-2\n\n    // Controls Style\n    GUIStyle smileStyle = new GUIStyle();\n    GUIStyle mineStyle = new GUIStyle();\n    GUIStyle[] numStyle = new GUIStyle[8]; //记录数字1-8的格式\n    GUIStyle state0 = new GUIStyle();\n    GUIStyle state1 = new GUIStyle();\n    GUIStyle worl = new GUIStyle();\n    GUIStyle txt = new GUIStyle();\n```\n\n由于不是很想利用Texture2D导入图片素材，这里用的是IMGUI里简陋的`GUIStyle()`，配合可显示的Unicode符号食用。\n\n\n\n**数据初始启动部分代码：**\n\n```c#\nvoid Start () {\n        // 对图标格式的初始化\n        smileStyle.fontSize=50;\n        smileStyle.normal.textColor=Color.yellow;\n        smileStyle.alignment=TextAnchor.MiddleCenter;\n\n        mineStyle.fontSize=20;\n        mineStyle.normal.textColor=Color.red;\n        mineStyle.alignment=TextAnchor.MiddleCenter;\n\n        state0.fontSize=20;\n        state0.normal.textColor=Color.red;\n        state0.alignment=TextAnchor.MiddleCenter;\n\n        state1.fontSize=20;\n        state1.normal.textColor=Color.black;\n        state1.alignment=TextAnchor.MiddleCenter;\n\n        worl.fontSize = 50;\n        worl.normal.textColor = Color.red; //win=red / lose=blue\n        worl.alignment=TextAnchor.MiddleCenter;\n\n        txt.fontSize = 30;\n        txt.normal.textColor=Color.white;\n        txt.alignment=TextAnchor.MiddleCenter;\n         \n        for(int i=0;i<8;i++){\n            numStyle[i] = new GUIStyle();\n            numStyle[i].fontSize = 20;\n            numStyle[i].alignment = TextAnchor.MiddleCenter;\n        }\n        numStyle[0].normal.textColor=Color.blue; //数字1红色\n        numStyle[1].normal.textColor=Color.green; //数字2蓝色\n        numStyle[2].normal.textColor=Color.red; //数字3蓝色\n        numStyle[3].normal.textColor=new Color(1.00f,0.84f,0.00f,1.00f); //数字4蓝色\n        numStyle[4].normal.textColor=new Color(0.63f,0.13f,0.94f,1.00f); //数字5紫色\n        numStyle[5].normal.textColor=new Color(1.00f,0.38f,0.00f,1.00f); //数字6橙色\n        numStyle[6].normal.textColor=new Color(1.00f,0.75f,0.80f,1.00f); //数字7粉色\n        numStyle[7].normal.textColor=Color.black; //数字8黑色\n\n        Init(); //游戏参数初始化\n    }\n```\n\n由于GUIStyle在游戏过程中，基本不会有何变化，就放在Start()函数调用初始化。\n\n\n\n**游戏参数初始化代码：**\n\n```c#\nvoid Init() {\n        // 时间，雷数等参数初始化\n        time = 0;\n        mine_num = 60;\n        wrong = 0;\n        state = 0;\n        \n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                // 格子可见性初始化\n                show_arr[i,j] = 0;\n            }\n        }\n\n        // 雷区初始化\n        clearMine();\n        InitMine();\n    }\n```\n\n每局新游戏开始前的初始化函数，要把各种参数归零，并重新随机生成雷区。\n\n\n\n**雷区初始化代码：**\n\n```c#\nvoid InitMine(){\n        //初始化数字和雷区\n        int num=0;\n        while (num<60)\n        {\n            int x=Random.Range(0,16);\n            int y=Random.Range(0,20);\n            if(control_arr[x,y]==0){\n                control_arr[x,y] = -1;\n                num++;\n            }\n        }\n\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                if(control_arr[i,j]>-1){\n                    //左边\n                    if(i>0 && control_arr[i-1,j]==-1)\n                        control_arr[i,j]++;\n                    //右边\n                    if(i<15 && control_arr[i+1,j]==-1)\n                        control_arr[i,j]++;\n                    //上方\n                    if(j>0 && control_arr[i,j-1]==-1)\n                        control_arr[i,j]++;\n                    //下方\n                    if(j<19 && control_arr[i,j+1]==-1)\n                        control_arr[i,j]++;\n                    //左上角\n                    if(i>0 && j>0 && control_arr[i-1,j-1]==-1)\n                        control_arr[i,j]++;\n                    //右下角\n                    if(i<15 && j<19 && control_arr[i+1,j+1]==-1)\n                        control_arr[i,j]++;\n                    //右上角\n                    if(i<15 && j>0 && control_arr[i+1,j-1]==-1)\n                        control_arr[i,j]++;\n                    //左下角\n                    if(i>0 && j<19 && control_arr[i-1,j+1]==-1)\n                        control_arr[i,j]++;\n                }\n            }\n        }\n    }\n\n    void clearMine(){\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                control_arr[i,j]=0;\n                mark_arr[i,j]=0;  \n            }\n        }\n    }\n```\n\n`clearMine()`函数会把上一局的标记去除，雷全部清除，且格子值全部设为0，配合生成雷的函数`InitMine()`，`InitMine()`初始化雷的位置(值为-1)后，会通过循环得出每个格子的数字（周围一圈的雷数）。\n\n\n\n**OnGUI()循环代码：**\n\n```c#\nvoid OnGUI() {\n        GUI.Box(new Rect(720,180,480,720),\"\");\n            // 生成smile按钮 for restart\n            if(GUI.Button(new Rect(935,220,50,50), \"☺\",smileStyle)){\n                Debug.Log(\"Push Smile\");\n                if(state>=0)\n                    Init();             \n            }\n            // 生成挖雷按钮\n            if(GUI.Button(new Rect(1000,200,50,50), \"挖\",state0)){\n                state = 0;\n                state0.normal.textColor=Color.red;\n                state1.normal.textColor=Color.black;\n\n            }\n\n            // 生成标记按钮\n            if(GUI.Button(new Rect(1000,240,50,50), \"标\",state1)){\n                state = 1;\n                state0.normal.textColor=Color.black;\n                state1.normal.textColor=Color.red;\n\n            }\n            //显示剩余雷数\n            GUI.Button(new Rect(736,220,160,60), \"剩余雷数:\"+mine_num.ToString());\n\n            //显示时间\n            GUI.Button(new Rect(1050,220,130,60), \"用时(s):\"+time.ToString());\n\n            // 每个大小28*28\n            // 生成可点击扫雷按钮\n            for(int i=0;i<16;i++){\n                for(int j=0;j<20;j++){\n                    if(show_arr[i,j]==1)    continue;\n                    // 标记的格子可取消标记\n                    if(mark_arr[i,j]==1){\n                        if(GUI.Button(new Rect(736+i*28,300+j*28,28,28),\"✯\")){\n                            if(state == 1){\n                                mark_arr[i,j] = 0;\n                                mine_num++;\n                                if (control_arr[i,j]<0)\n                                    wrong--;\n                            }\n                        }\n                        continue;\n                    }\n\n                    if(GUI.Button(new Rect(736+i*28,300+j*28,28,28),\"\")){\n                        // 按下按钮的行为\n                        if(state == 1){\n                            mark_arr[i,j] = 1;\n                            mine_num--;\n                            if (control_arr[i,j]>-1)\n                                wrong++;\n                            if (mine_num==0)\n                            {\n                                if(wrong>0){\n                                    showAllMine();\n                                    state = -1; //lose\n                                }\n                                else{    \n                                    state = -2; //win\n                                }\n                                \n                            }\n                        }\n                        else{\n                            if(mark_arr[i,j]==0){\n                                show_arr[i,j]=1;\n                                if(control_arr[i,j]==0)\n                                    showEmpty(i,j);\n                                if(control_arr[i,j]<0){\n                                    showAllMine();\n                                    state = -1; //lose\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // 显示数字和雷    \n            for(int i=0;i<16;i++){\n                for(int j=0;j<20;j++){\n                    if(show_arr[i,j]==0)    continue; //\n                    int ctlnum = control_arr[i,j];\n                    if(ctlnum==0){\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),\" \");\n                    }\n                    else if(ctlnum>0){\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),ctlnum.ToString(),numStyle[ctlnum-1]);\n                    }\n                    else{\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),\"✵\",mineStyle);\n                    }\n                }\n            }\n\n        if(state<0){\n            GUI.Box(new Rect(810,420,300,240),\"\");\n            if(GUI.Button(new Rect(910,630,100,20), \"Restart\"))\n                Init();\n            if(state == -1){\n                worl.normal.textColor =  Color.blue;\n                GUI.Label(new Rect(910,440,100,50), \"LOSE\", worl);\n            }\n            else{\n                worl.normal.textColor =  Color.red;\n                GUI.Label(new Rect(910,440,100,50), \"WIN\", worl);\n            }  \n            int endnum = 60 - mine_num - wrong;\n            GUI.Label(new Rect(910,510,100,50), \"扫雷数：\"+endnum.ToString(), txt);\n            GUI.Label(new Rect(910,560,100,50), \"总用时：\"+time.ToString(), txt);\n\n            tmptime = Mathf.Floor(Time.fixedTime);\n        }\n        else{\n            //计时\n            if(Mathf.Floor(Time.fixedTime)-tmptime==1){\n                tmptime = Mathf.Floor(Time.fixedTime);\n                time++;\n            }\n        }\n\n    }\n```\n\n由于IMGUI的控件部分只能在`OnGUI()`函数使用，因此这里会写的比较冗杂，嵌套也比较多。这里利用Time类来辅助我们计时。\n\n\n\n**其他相关代码：**\n\n```c#\nvoid showAllMine(){\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                if(control_arr[i,j]==-1){\n                    show_arr[i,j]=1;\n                }  \n            }\n        }\n    }\n\n    // 递归显示无雷区域\n    void showEmpty(int i,int j){\n        // 遇到被标记的非雷 直接翻开\n        if(mark_arr[i,j]==1){\n            mark_arr[i,j]=0;\n            mine_num++;\n        }            \n        show_arr[i,j]=1;\n        if(control_arr[i,j]>0)\n            return;\n   \n        if(i>0 && show_arr[i-1,j]==0)\n            showEmpty(i-1,j);\n        if(i<15 && show_arr[i+1,j]==0)\n            showEmpty(i+1,j);\n        if(j>0 && show_arr[i,j-1]==0)\n            showEmpty(i,j-1);\n        if(j<19 && show_arr[i,j+1]==0)\n            showEmpty(i,j+1);\n        if(i>0 && j>0 && show_arr[i-1,j-1]==0)\n            showEmpty(i-1,j-1);\n        if(i<15 && j<19 && show_arr[i+1,j+1]==0)\n            showEmpty(i+1,j+1);\n        if(i<15 && j>0 && show_arr[i+1,j-1]==0)\n            showEmpty(i+1,j-1);\n        if(i>0 && j<19 && show_arr[i-1,j+1]==0)\n            showEmpty(i-1,j+1);\n        \n    }\n```\n\n`showAllMine()`函数是使用在踩雷情况，把剩下的雷也显示出来；`showEmpty()`函数是在扫雷过程中，如果遇到一个连续空白无雷区，会把没有数字(周围一圈没有雷)的区域及围绕它们的数字显示出来。\n\n\n\n**小结**\n\n* 在写控件Style的时候，感觉这也不太好设置，那也不太好设置，默认的Style风格又不太适用，整体看起来勉强过得去，有的按钮周围没有边框(比如“标”和“挖”)，就是皮肤设置的问题，做不出想要的风格，多少有点痛苦。可能还是乖乖导入Texture2D会更美观一些，但也要耗费时间去找合适的素材。\n* 制作计时器的时候，因为OnGUI()调用频率，以及Time可以获取从游戏启动的时间，就想到了这个先floor()，再比较有无变化的这个方法计时。其他的一些协程或是延时调用的方法看起来都比较复杂，不太好实现。\n* 关于利用Button按钮控件的“标”和“挖”来实现标雷和挖格子。似乎是在IMGUI中没能找到控件比较广泛的按键功能，只能监听到按钮被点击，无法监听是被左键或是右键点击又或是按键按下或松开这种，因此实现起来有点怪怪的并且有些麻烦。\n* 利用自定义状态值`state`来表示不同的游戏状态，能帮助更好地实现这个游戏功能。\n\n:sailboat:\n\n### 三、思考题\n\n* 微软XNA引擎的Game对象屏蔽了游戏循环的细节，并使用一组虚方法让继承者完成它们，我们称这种设计为“模板方法模式”。\n\n    * 为什么是“模板方法”模式而不是“策略模式”呢？\n\n        **模板方法模式：**一个抽象类公开定义了执行它的方法的方式/模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。\n\n        **策略模式：**是针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。\n\n        -- 微软XNA引擎的Game对象屏蔽了游戏循环的细节，用虚方法让继承者完成它们，更强调继承重写，明显更符合模板方法模式。\n\n        \n\n* 将优先对象组成树形结构，每个节点都是游戏对象（或数）。\n\n    * 尝试解释组合模式(Composite Pattern /一种设计模式)。\n\n        *将对象组合成树形结构以表示\"部分-整体\"的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。*\n\n    * 使用 BroadcastMessage() 方法，向子对象发送消息。写出 BroadcastMessage() 的伪代码。\n\n        <img src=\"10.jpg\" alt=\"10\" style=\"zoom:80%;\" />\n        <img src=\"11.jpg\" alt=\"11\" style=\"zoom:80%;\" />\n        <img src=\"12.jpg\" alt=\"12\" style=\"zoom:80%;\" />\n\n        ```c#\n        public class BcM : MonoBehaviour\n        {\n          public GameObject pobject;\n          void Update () {\n        \t\tpobject.BroadcastMessage(\"dbug\",\"inputstr\",SendMessageOptions.RequireReceiver);\n        \t}\n        }\n        \n        public class c1 : MonoBehaviour\n        {\n            void dbug(){\n                Debug.Log(\"c1\");\n            }\n        }\n        \n        public class c2 : MonoBehaviour\n        {\n            void dbug(string str){\n                Debug.Log(\"c2:\"+str);\n            }\n        }\n        ```\n\n        <img src=\"13.jpg\" alt=\"13\" style=\"zoom:80%;\" />\n\n        \n\n* 一个游戏对象用于许多部件描述不同方面的特征。我们设计坦克游戏对象不是继承于 GameObject 对象，而是 GameObject 添加一组行为部件(Component)。\n\n    * 这是什么设计模式？\n\n        装饰器模式?\n\n    * 为什么不用继承设计特殊的游戏对象？\n\n        由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。使用继承的话，扩展不够灵活。\n\n\n\n参考资料：[策略模式][lin1]，[模板模式][lin2]，[组合模式][lin3]，[装饰器模式][lin4]，[桥接模式][lin5]，[u3d计时器][lin6]，[IMGUI][lin7]\n\n[lin1]:https://www.runoob.com/design-pattern/strategy-pattern.html\n[lin2]:https://www.runoob.com/design-pattern/template-pattern.html\n[lin3]:https://juejin.cn/post/7031727773613817893\n[lin4]:https://www.runoob.com/design-pattern/decorator-pattern.html\n[lin5]:https://www.runoob.com/design-pattern/bridge-pattern.html\n[lin6]:https://blog.csdn.net/xiumang/article/details/88750110\n[lin7]:https://docs.unity.cn/cn/2021.3/Manual/gui-Basics.html\n\n\n\n> Cauchy    2022.10.04","source":"_posts/2022/Homework2/Homework2.md","raw":"---\nlayout: post\ntitle:  \"HW2: 离散仿真引擎基础\"\ndate:   2022-10-04 14:00:00 +0800\ntags: \n    - unity\n    - IMGUI\ncategories: Game\nsubtitle: '离散仿真引擎基础'\n---\n\n> 作业简介：\n> 1.简答题（涉及GameObject, Transform, Assets, Prefabs, Component, MonoBehaviour等）\n> 2.编程实践（仅允许使用IMGUI构建UI，训练数据-控制分离的编程思维）\n> 3.思考题（涉及游戏设计模式）\n\n<!--more-->\n\n:rainbow:\n\n### 一、简答题\n\n1. 解释游戏对象(**GameObjects**)和资源(**Assets**)的区别与联系\n\n    **GameObjects**：是 Unity 中的基础对象，表示角色、道具和景物。它们本身并没有取得多大作为，但它们充当组件(Component)的容器，而组件可实现功能。\n\n    <img src=\"02.jpg\" alt=\"02\" style=\"zoom: 80%;\" />\n\n    我们可以看到GameObject列表下有各种属性的对象，包括空属性对象、3D对象、效果、灯光等\n\n    \n\n    **Assets**：表示 Unity 项目中用来创建游戏或应用的任何项；也可以代表项目中的视觉或音频元素，例如 3D 模型、纹理、精灵、音效或音乐；还可以表示更抽象的项目，例如任何用途的颜色渐变、动画遮罩或任意文本或数字数据。\n\n    <img src=\"03.jpg\" alt=\"03\" style=\"zoom:80%;\" />\n\n    我们可以看到Assets创建下有很多类型的资源，如C#脚本，着色器，预制件等。\n\n    \n\n    简单地理解，游戏对象是真正加入到游戏场景里的实体，类似一个空盒子，需要向里面添加各种组件来实功能。资源是创建或外导入的各种数据，可以应用到不同游戏对象身上，可以只是存储在项目里，不一定会使用到当前的游戏场景中。\n\n    <img src=\"01.png\" alt=\"01\" style=\"zoom:80%;\" />\n\n    \n\n2. 下载几个游戏案列，分别总结资源、对象组织和结构（指资源的目录组织结构与游戏对象树的层次结构）\n\n     这里用作展示的是官方的游戏教程里的资源与对象的组织和结构。\n\n    <img src=\"04.jpg\" alt=\"04\" style=\"zoom:80%;\" />\n\n    我们可以看到**资源**一般是按**用途**来分的，不同的文件夹存放不同类别的资源，包括音频、角色、环境、脚本、预制件、场景等，这里还可以看到模型资源里的环境精灵是按颜色来分类的，脚本里面按使用场景分类。\n\n    \n\n    <img src=\"05.jpg\" alt=\"05\" style=\"zoom:80%;\" /><img src=\"06.jpg\" alt=\"06\" style=\"zoom:80%;\" />\n\n    **游戏对象**主要是根据**功能**不同分类的，可以看到第一个游戏对象树有UI画布、摄像机、角色、格子、敌人等分支，第二个游戏对象树则是利用空对象来写分割线区分结构。\n\n    养成合理分类资源与游戏对象的好习惯，能让我们更高效地制作游戏。\n\n    \n\n3. 编写一个代码，使用 debug 语句来验证 `MonoBehaviour` 基本行为或事件触发的条件\n\n    * 基本行为包括 `Awake()` `Start()` `Update()` `FixedUpdate()` `LateUpdate()`\n    * 常用事件包括 `OnGUI()` `OnDisable()` `OnEnable()`\n\n    *\"MonoBehaviour 类是一个基类，所有 Unity 脚本都默认派生自该类。MonoBehaviour 类允许您启动、停止和管理协程。MonoBehaviour 类提供对大量事件消息的访问，允许您根据项目中当前发生的情况执行代码。\"*\n\n    **MonoBehaviour 方法简介**\n\n    * `Awake`：在加载脚本实例时调用，无论该脚本是否启用，初始化脚本时都会调用。其在 Start 前调用\n    * `Start`：在首次调用任何 Update 方法之前启用脚本时，在帧上调用\n    * `Update`：如果启用了 MonoBehaviour，则每帧调用 Update\n    * `FixedUpdate`：具有物理系统的频率；每个固定帧率帧调用该函数；在 FixedUpdate之后，进行Physics系统计算。帧率可以通过 Time.fixedDeltaTime 来访问。与Update相互独立。\n    * `LateUpdate`：如果启用了 Behaviour（指可启用或禁用的组件），则每帧在Update调用后调用 LateUpdate，对于安排脚本的执行顺序很有用。\n    * `OnGUI`：系统调用 OnGUI 来渲染和处理 GUI 事件，是唯一可以实现**“即时模式”GUI (IMGUI)**系统来渲染和处理 GUI 事件的函数。OnGUI 实现可以每帧调用多次（每个事件调用一次），若MonoBehaviour 的 enabled 属性设置为 false，则不会调用 OnGUI()。\n    * `OnDisable`：该函数在行为被禁用时调用。当对象销毁时也会调用该函数，它可用于任何清理代码。 当编译完成后重新加载脚本时，将调用 OnDisable，并在加载脚本后调用 OnEnable。      \n    * `OnEnable`：该函数在对象变为启用和激活状态时调用。\n\n    代码验证：\n\n    ```c#\n    public class Hello : MonoBehaviour\n    {\n        void Awake() {Debug.Log(\"Awake\");}\n        \n        void Start() {Debug.Log(\"Start\");}\n    \n        void Update() {Debug.Log(\"Update\");}\n    \n        void FixedUpdate() {Debug.Log(\"Fixed\");}\n    \n        void OnGUI() {Debug.Log(\"OnGUI\");}\n    \n        void OnEnable() {Debug.Log(\"Enabled\");}\n    \n        void OnDisable() {Debug.Log(\"Disabled\");}\n    }\n    ```\n\n    ![07](07.jpg)\n\n    \n\n    \n\n4. 查找脚本手册，了解 GameObjects, Transform, Component 对象\n\n    * 分别翻译官方对三个对象的描述(Description)\n    * 描述下图中 table 对象(实体)的属性、table 的 Transform 的属性、table 的部件\n    * 用UML图描述三者的关系\n\n    **官方描述**\n\n    * **GameObject** 是 Unity 中的基础对象，表示角色、道具和景物，可以被用来表示所有可以存在于场景中的事物。它是Unity中场景的建筑块，可作为决定GameObject外观功能的功能组件的容器。在脚本中，GameObject类提供了一个可以在代码中使用的方法集合，包括查找、建立连接和在它们 之间发送消息，以及添加或移除附加到 GameObject 的组件和设置它们在场景中与状态有关的值。  \n\n    * **Transform** 用于存储游戏对象的位置、旋转、缩放和父子化状态。每个游戏对象始终附加一个变换组件，无法删除变换组件或创建没有变换组件的游戏对象。 \n\n    * **Component** 是每个GameObject的功能部分，它包含一些可编辑的属性，可以通过编辑这些属性来定义GameObject的行为。\n\n    **图**\n\n    ![08](08.jpg)\n\n    Table的GameObject属性包含Tag(标签)、Layer(层)、Static(是否静态)、勾选框(是否活动)、属性名；\n    Table的Transform属性包含Position(坐标)、Rotation(旋转角)、Scale(大小)；\n    Table的Component属性包括Cube(Mesh Filter)、Mesh Renderer、Box Collider、RIgidbody、Hello(Script)、Red(Material)。\n\n    **UML图**\n\n    <img src=\"09.png\" alt=\"09\" style=\"zoom:80%;\" />\n\n     \n\n5. 资源预设(**Prefabs**)与对象克隆(**clone**)\n\n   * 预设(Prefabs)有什么好处?\n   \n       Unity 的**Prenfabs**系统允许创建、配置和存储游戏对象及其所有组件、属性值和子游戏对象作为可重用资源。预制件资源充当模板，在此模板的基础之上可以在场景中创建新的预制件实例。这可以避免重复制作的无用功，提高资源复用率，节省资源空间。\n   \n   * 预设与对象克隆(clone or copy or Instantiate of Unity Object)关系?\n   \n       预设本身不需要有实例化的游戏对象，而克隆需要复制实例化的游戏对象。预设也更方便进行批量修改。\n   \n   * 制作table预制，写一段代码将table预制资源实例化成游戏对象\n   \n       ```c#\n       public class hello:MonoBehaviour\n       {\n       \tvoid Start()\n       \t{\n       \t\tGameObject table = (GameObject)Resources.Load(\"table\");\n       \t\ttable = Instantiate(table);\n       \t\n       \t\ttable.transform.parent = this.transform;\n       \t\ttable.transform.position = new Vector3(0,0,0);\n       \t}\n       }\n       ```\n   \n\n:cake:\n\n### 二、编程实践\n\n源码地址：[https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs][ydm]\n\n[ydm]:https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs\n\n这里是利用IMGUI做了一个扫雷小游戏。运行窗口大小为Full HD(1920x1080)\n\n实现的效果如下图\n\n![win](win.gif)\n\n**数据定义部分代码：**\n\n```c#\n // Data\n    private int[,] control_arr = new int[16,20]; //用于记录雷和数字 -1是雷 0是空 其他是周围的雷数\n    private int[,] show_arr = new int[16,20]; //用于记录格子可见性 0是可见 1是不可见\n    private int[,] mark_arr = new int[16,20]; //用于玩家标记雷 标记雷为1 此时按钮不可点击\n    \n    private int mine_num = 60; //用于记录剩余雷数\n    private int wrong = 0; //用于记录标错的雷数\n    private int time = 0; //用于记录用时\n    private float tmptime = 0; //用于记录上一帧时间(不会重复初始化)\n    private int state = 0; //0为挖矿模式，1为标记模式 输了为-1，赢了为-2\n\n    // Controls Style\n    GUIStyle smileStyle = new GUIStyle();\n    GUIStyle mineStyle = new GUIStyle();\n    GUIStyle[] numStyle = new GUIStyle[8]; //记录数字1-8的格式\n    GUIStyle state0 = new GUIStyle();\n    GUIStyle state1 = new GUIStyle();\n    GUIStyle worl = new GUIStyle();\n    GUIStyle txt = new GUIStyle();\n```\n\n由于不是很想利用Texture2D导入图片素材，这里用的是IMGUI里简陋的`GUIStyle()`，配合可显示的Unicode符号食用。\n\n\n\n**数据初始启动部分代码：**\n\n```c#\nvoid Start () {\n        // 对图标格式的初始化\n        smileStyle.fontSize=50;\n        smileStyle.normal.textColor=Color.yellow;\n        smileStyle.alignment=TextAnchor.MiddleCenter;\n\n        mineStyle.fontSize=20;\n        mineStyle.normal.textColor=Color.red;\n        mineStyle.alignment=TextAnchor.MiddleCenter;\n\n        state0.fontSize=20;\n        state0.normal.textColor=Color.red;\n        state0.alignment=TextAnchor.MiddleCenter;\n\n        state1.fontSize=20;\n        state1.normal.textColor=Color.black;\n        state1.alignment=TextAnchor.MiddleCenter;\n\n        worl.fontSize = 50;\n        worl.normal.textColor = Color.red; //win=red / lose=blue\n        worl.alignment=TextAnchor.MiddleCenter;\n\n        txt.fontSize = 30;\n        txt.normal.textColor=Color.white;\n        txt.alignment=TextAnchor.MiddleCenter;\n         \n        for(int i=0;i<8;i++){\n            numStyle[i] = new GUIStyle();\n            numStyle[i].fontSize = 20;\n            numStyle[i].alignment = TextAnchor.MiddleCenter;\n        }\n        numStyle[0].normal.textColor=Color.blue; //数字1红色\n        numStyle[1].normal.textColor=Color.green; //数字2蓝色\n        numStyle[2].normal.textColor=Color.red; //数字3蓝色\n        numStyle[3].normal.textColor=new Color(1.00f,0.84f,0.00f,1.00f); //数字4蓝色\n        numStyle[4].normal.textColor=new Color(0.63f,0.13f,0.94f,1.00f); //数字5紫色\n        numStyle[5].normal.textColor=new Color(1.00f,0.38f,0.00f,1.00f); //数字6橙色\n        numStyle[6].normal.textColor=new Color(1.00f,0.75f,0.80f,1.00f); //数字7粉色\n        numStyle[7].normal.textColor=Color.black; //数字8黑色\n\n        Init(); //游戏参数初始化\n    }\n```\n\n由于GUIStyle在游戏过程中，基本不会有何变化，就放在Start()函数调用初始化。\n\n\n\n**游戏参数初始化代码：**\n\n```c#\nvoid Init() {\n        // 时间，雷数等参数初始化\n        time = 0;\n        mine_num = 60;\n        wrong = 0;\n        state = 0;\n        \n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                // 格子可见性初始化\n                show_arr[i,j] = 0;\n            }\n        }\n\n        // 雷区初始化\n        clearMine();\n        InitMine();\n    }\n```\n\n每局新游戏开始前的初始化函数，要把各种参数归零，并重新随机生成雷区。\n\n\n\n**雷区初始化代码：**\n\n```c#\nvoid InitMine(){\n        //初始化数字和雷区\n        int num=0;\n        while (num<60)\n        {\n            int x=Random.Range(0,16);\n            int y=Random.Range(0,20);\n            if(control_arr[x,y]==0){\n                control_arr[x,y] = -1;\n                num++;\n            }\n        }\n\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                if(control_arr[i,j]>-1){\n                    //左边\n                    if(i>0 && control_arr[i-1,j]==-1)\n                        control_arr[i,j]++;\n                    //右边\n                    if(i<15 && control_arr[i+1,j]==-1)\n                        control_arr[i,j]++;\n                    //上方\n                    if(j>0 && control_arr[i,j-1]==-1)\n                        control_arr[i,j]++;\n                    //下方\n                    if(j<19 && control_arr[i,j+1]==-1)\n                        control_arr[i,j]++;\n                    //左上角\n                    if(i>0 && j>0 && control_arr[i-1,j-1]==-1)\n                        control_arr[i,j]++;\n                    //右下角\n                    if(i<15 && j<19 && control_arr[i+1,j+1]==-1)\n                        control_arr[i,j]++;\n                    //右上角\n                    if(i<15 && j>0 && control_arr[i+1,j-1]==-1)\n                        control_arr[i,j]++;\n                    //左下角\n                    if(i>0 && j<19 && control_arr[i-1,j+1]==-1)\n                        control_arr[i,j]++;\n                }\n            }\n        }\n    }\n\n    void clearMine(){\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                control_arr[i,j]=0;\n                mark_arr[i,j]=0;  \n            }\n        }\n    }\n```\n\n`clearMine()`函数会把上一局的标记去除，雷全部清除，且格子值全部设为0，配合生成雷的函数`InitMine()`，`InitMine()`初始化雷的位置(值为-1)后，会通过循环得出每个格子的数字（周围一圈的雷数）。\n\n\n\n**OnGUI()循环代码：**\n\n```c#\nvoid OnGUI() {\n        GUI.Box(new Rect(720,180,480,720),\"\");\n            // 生成smile按钮 for restart\n            if(GUI.Button(new Rect(935,220,50,50), \"☺\",smileStyle)){\n                Debug.Log(\"Push Smile\");\n                if(state>=0)\n                    Init();             \n            }\n            // 生成挖雷按钮\n            if(GUI.Button(new Rect(1000,200,50,50), \"挖\",state0)){\n                state = 0;\n                state0.normal.textColor=Color.red;\n                state1.normal.textColor=Color.black;\n\n            }\n\n            // 生成标记按钮\n            if(GUI.Button(new Rect(1000,240,50,50), \"标\",state1)){\n                state = 1;\n                state0.normal.textColor=Color.black;\n                state1.normal.textColor=Color.red;\n\n            }\n            //显示剩余雷数\n            GUI.Button(new Rect(736,220,160,60), \"剩余雷数:\"+mine_num.ToString());\n\n            //显示时间\n            GUI.Button(new Rect(1050,220,130,60), \"用时(s):\"+time.ToString());\n\n            // 每个大小28*28\n            // 生成可点击扫雷按钮\n            for(int i=0;i<16;i++){\n                for(int j=0;j<20;j++){\n                    if(show_arr[i,j]==1)    continue;\n                    // 标记的格子可取消标记\n                    if(mark_arr[i,j]==1){\n                        if(GUI.Button(new Rect(736+i*28,300+j*28,28,28),\"✯\")){\n                            if(state == 1){\n                                mark_arr[i,j] = 0;\n                                mine_num++;\n                                if (control_arr[i,j]<0)\n                                    wrong--;\n                            }\n                        }\n                        continue;\n                    }\n\n                    if(GUI.Button(new Rect(736+i*28,300+j*28,28,28),\"\")){\n                        // 按下按钮的行为\n                        if(state == 1){\n                            mark_arr[i,j] = 1;\n                            mine_num--;\n                            if (control_arr[i,j]>-1)\n                                wrong++;\n                            if (mine_num==0)\n                            {\n                                if(wrong>0){\n                                    showAllMine();\n                                    state = -1; //lose\n                                }\n                                else{    \n                                    state = -2; //win\n                                }\n                                \n                            }\n                        }\n                        else{\n                            if(mark_arr[i,j]==0){\n                                show_arr[i,j]=1;\n                                if(control_arr[i,j]==0)\n                                    showEmpty(i,j);\n                                if(control_arr[i,j]<0){\n                                    showAllMine();\n                                    state = -1; //lose\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // 显示数字和雷    \n            for(int i=0;i<16;i++){\n                for(int j=0;j<20;j++){\n                    if(show_arr[i,j]==0)    continue; //\n                    int ctlnum = control_arr[i,j];\n                    if(ctlnum==0){\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),\" \");\n                    }\n                    else if(ctlnum>0){\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),ctlnum.ToString(),numStyle[ctlnum-1]);\n                    }\n                    else{\n                        GUI.Label(new Rect(736+i*28,300+j*28,28,28),\"✵\",mineStyle);\n                    }\n                }\n            }\n\n        if(state<0){\n            GUI.Box(new Rect(810,420,300,240),\"\");\n            if(GUI.Button(new Rect(910,630,100,20), \"Restart\"))\n                Init();\n            if(state == -1){\n                worl.normal.textColor =  Color.blue;\n                GUI.Label(new Rect(910,440,100,50), \"LOSE\", worl);\n            }\n            else{\n                worl.normal.textColor =  Color.red;\n                GUI.Label(new Rect(910,440,100,50), \"WIN\", worl);\n            }  \n            int endnum = 60 - mine_num - wrong;\n            GUI.Label(new Rect(910,510,100,50), \"扫雷数：\"+endnum.ToString(), txt);\n            GUI.Label(new Rect(910,560,100,50), \"总用时：\"+time.ToString(), txt);\n\n            tmptime = Mathf.Floor(Time.fixedTime);\n        }\n        else{\n            //计时\n            if(Mathf.Floor(Time.fixedTime)-tmptime==1){\n                tmptime = Mathf.Floor(Time.fixedTime);\n                time++;\n            }\n        }\n\n    }\n```\n\n由于IMGUI的控件部分只能在`OnGUI()`函数使用，因此这里会写的比较冗杂，嵌套也比较多。这里利用Time类来辅助我们计时。\n\n\n\n**其他相关代码：**\n\n```c#\nvoid showAllMine(){\n        for(int i=0;i<16;i++){\n            for(int j=0;j<20;j++){\n                if(control_arr[i,j]==-1){\n                    show_arr[i,j]=1;\n                }  \n            }\n        }\n    }\n\n    // 递归显示无雷区域\n    void showEmpty(int i,int j){\n        // 遇到被标记的非雷 直接翻开\n        if(mark_arr[i,j]==1){\n            mark_arr[i,j]=0;\n            mine_num++;\n        }            \n        show_arr[i,j]=1;\n        if(control_arr[i,j]>0)\n            return;\n   \n        if(i>0 && show_arr[i-1,j]==0)\n            showEmpty(i-1,j);\n        if(i<15 && show_arr[i+1,j]==0)\n            showEmpty(i+1,j);\n        if(j>0 && show_arr[i,j-1]==0)\n            showEmpty(i,j-1);\n        if(j<19 && show_arr[i,j+1]==0)\n            showEmpty(i,j+1);\n        if(i>0 && j>0 && show_arr[i-1,j-1]==0)\n            showEmpty(i-1,j-1);\n        if(i<15 && j<19 && show_arr[i+1,j+1]==0)\n            showEmpty(i+1,j+1);\n        if(i<15 && j>0 && show_arr[i+1,j-1]==0)\n            showEmpty(i+1,j-1);\n        if(i>0 && j<19 && show_arr[i-1,j+1]==0)\n            showEmpty(i-1,j+1);\n        \n    }\n```\n\n`showAllMine()`函数是使用在踩雷情况，把剩下的雷也显示出来；`showEmpty()`函数是在扫雷过程中，如果遇到一个连续空白无雷区，会把没有数字(周围一圈没有雷)的区域及围绕它们的数字显示出来。\n\n\n\n**小结**\n\n* 在写控件Style的时候，感觉这也不太好设置，那也不太好设置，默认的Style风格又不太适用，整体看起来勉强过得去，有的按钮周围没有边框(比如“标”和“挖”)，就是皮肤设置的问题，做不出想要的风格，多少有点痛苦。可能还是乖乖导入Texture2D会更美观一些，但也要耗费时间去找合适的素材。\n* 制作计时器的时候，因为OnGUI()调用频率，以及Time可以获取从游戏启动的时间，就想到了这个先floor()，再比较有无变化的这个方法计时。其他的一些协程或是延时调用的方法看起来都比较复杂，不太好实现。\n* 关于利用Button按钮控件的“标”和“挖”来实现标雷和挖格子。似乎是在IMGUI中没能找到控件比较广泛的按键功能，只能监听到按钮被点击，无法监听是被左键或是右键点击又或是按键按下或松开这种，因此实现起来有点怪怪的并且有些麻烦。\n* 利用自定义状态值`state`来表示不同的游戏状态，能帮助更好地实现这个游戏功能。\n\n:sailboat:\n\n### 三、思考题\n\n* 微软XNA引擎的Game对象屏蔽了游戏循环的细节，并使用一组虚方法让继承者完成它们，我们称这种设计为“模板方法模式”。\n\n    * 为什么是“模板方法”模式而不是“策略模式”呢？\n\n        **模板方法模式：**一个抽象类公开定义了执行它的方法的方式/模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。\n\n        **策略模式：**是针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。\n\n        -- 微软XNA引擎的Game对象屏蔽了游戏循环的细节，用虚方法让继承者完成它们，更强调继承重写，明显更符合模板方法模式。\n\n        \n\n* 将优先对象组成树形结构，每个节点都是游戏对象（或数）。\n\n    * 尝试解释组合模式(Composite Pattern /一种设计模式)。\n\n        *将对象组合成树形结构以表示\"部分-整体\"的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。*\n\n    * 使用 BroadcastMessage() 方法，向子对象发送消息。写出 BroadcastMessage() 的伪代码。\n\n        <img src=\"10.jpg\" alt=\"10\" style=\"zoom:80%;\" />\n        <img src=\"11.jpg\" alt=\"11\" style=\"zoom:80%;\" />\n        <img src=\"12.jpg\" alt=\"12\" style=\"zoom:80%;\" />\n\n        ```c#\n        public class BcM : MonoBehaviour\n        {\n          public GameObject pobject;\n          void Update () {\n        \t\tpobject.BroadcastMessage(\"dbug\",\"inputstr\",SendMessageOptions.RequireReceiver);\n        \t}\n        }\n        \n        public class c1 : MonoBehaviour\n        {\n            void dbug(){\n                Debug.Log(\"c1\");\n            }\n        }\n        \n        public class c2 : MonoBehaviour\n        {\n            void dbug(string str){\n                Debug.Log(\"c2:\"+str);\n            }\n        }\n        ```\n\n        <img src=\"13.jpg\" alt=\"13\" style=\"zoom:80%;\" />\n\n        \n\n* 一个游戏对象用于许多部件描述不同方面的特征。我们设计坦克游戏对象不是继承于 GameObject 对象，而是 GameObject 添加一组行为部件(Component)。\n\n    * 这是什么设计模式？\n\n        装饰器模式?\n\n    * 为什么不用继承设计特殊的游戏对象？\n\n        由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。使用继承的话，扩展不够灵活。\n\n\n\n参考资料：[策略模式][lin1]，[模板模式][lin2]，[组合模式][lin3]，[装饰器模式][lin4]，[桥接模式][lin5]，[u3d计时器][lin6]，[IMGUI][lin7]\n\n[lin1]:https://www.runoob.com/design-pattern/strategy-pattern.html\n[lin2]:https://www.runoob.com/design-pattern/template-pattern.html\n[lin3]:https://juejin.cn/post/7031727773613817893\n[lin4]:https://www.runoob.com/design-pattern/decorator-pattern.html\n[lin5]:https://www.runoob.com/design-pattern/bridge-pattern.html\n[lin6]:https://blog.csdn.net/xiumang/article/details/88750110\n[lin7]:https://docs.unity.cn/cn/2021.3/Manual/gui-Basics.html\n\n\n\n> Cauchy    2022.10.04","slug":"2022/Homework2/Homework2","published":1,"updated":"2023-05-19T09:05:59.398Z","comments":1,"photos":[],"link":"","_id":"clhudj1f700067g84dabo7fjm","content":"<blockquote>\n<p>作业简介：<br>\n1.简答题（涉及GameObject, Transform, Assets, Prefabs, Component, MonoBehaviour等）<br>\n2.编程实践（仅允许使用IMGUI构建UI，训练数据-控制分离的编程思维）<br>\n3.思考题（涉及游戏设计模式）</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>🌈</p>\n<h3 id=\"一、简答题\">一、简答题</h3>\n<ol>\n<li>\n<p>解释游戏对象(<strong>GameObjects</strong>)和资源(<strong>Assets</strong>)的区别与联系</p>\n<p><strong>GameObjects</strong>：是 Unity 中的基础对象，表示角色、道具和景物。它们本身并没有取得多大作为，但它们充当组件(Component)的容器，而组件可实现功能。</p>\n <img src=\"02.jpg\" alt=\"02\" style=\"zoom: 80%;\" />\n<p>我们可以看到GameObject列表下有各种属性的对象，包括空属性对象、3D对象、效果、灯光等</p>\n<p><strong>Assets</strong>：表示 Unity 项目中用来创建游戏或应用的任何项；也可以代表项目中的视觉或音频元素，例如 3D 模型、纹理、精灵、音效或音乐；还可以表示更抽象的项目，例如任何用途的颜色渐变、动画遮罩或任意文本或数字数据。</p>\n <img src=\"03.jpg\" alt=\"03\" style=\"zoom:80%;\" />\n<p>我们可以看到Assets创建下有很多类型的资源，如C#脚本，着色器，预制件等。</p>\n<p>简单地理解，游戏对象是真正加入到游戏场景里的实体，类似一个空盒子，需要向里面添加各种组件来实功能。资源是创建或外导入的各种数据，可以应用到不同游戏对象身上，可以只是存储在项目里，不一定会使用到当前的游戏场景中。</p>\n <img src=\"01.png\" alt=\"01\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>下载几个游戏案列，分别总结资源、对象组织和结构（指资源的目录组织结构与游戏对象树的层次结构）</p>\n<p>这里用作展示的是官方的游戏教程里的资源与对象的组织和结构。</p>\n <img src=\"04.jpg\" alt=\"04\" style=\"zoom:80%;\" />\n<p>我们可以看到<strong>资源</strong>一般是按<strong>用途</strong>来分的，不同的文件夹存放不同类别的资源，包括音频、角色、环境、脚本、预制件、场景等，这里还可以看到模型资源里的环境精灵是按颜色来分类的，脚本里面按使用场景分类。</p>\n<p><img src=\"05.jpg\" alt=\"05\" style=\"zoom:80%;\" /><img src=\"06.jpg\" alt=\"06\" style=\"zoom:80%;\" /></p>\n<p><strong>游戏对象</strong>主要是根据<strong>功能</strong>不同分类的，可以看到第一个游戏对象树有UI画布、摄像机、角色、格子、敌人等分支，第二个游戏对象树则是利用空对象来写分割线区分结构。</p>\n<p>养成合理分类资源与游戏对象的好习惯，能让我们更高效地制作游戏。</p>\n</li>\n<li>\n<p>编写一个代码，使用 debug 语句来验证 <code>MonoBehaviour</code> 基本行为或事件触发的条件</p>\n<ul>\n<li>基本行为包括 <code>Awake()</code> <code>Start()</code> <code>Update()</code> <code>FixedUpdate()</code> <code>LateUpdate()</code></li>\n<li>常用事件包括 <code>OnGUI()</code> <code>OnDisable()</code> <code>OnEnable()</code></li>\n</ul>\n<p><em>“MonoBehaviour 类是一个基类，所有 Unity 脚本都默认派生自该类。MonoBehaviour 类允许您启动、停止和管理协程。MonoBehaviour 类提供对大量事件消息的访问，允许您根据项目中当前发生的情况执行代码。”</em></p>\n<p><strong>MonoBehaviour 方法简介</strong></p>\n<ul>\n<li><code>Awake</code>：在加载脚本实例时调用，无论该脚本是否启用，初始化脚本时都会调用。其在 Start 前调用</li>\n<li><code>Start</code>：在首次调用任何 Update 方法之前启用脚本时，在帧上调用</li>\n<li><code>Update</code>：如果启用了 MonoBehaviour，则每帧调用 Update</li>\n<li><code>FixedUpdate</code>：具有物理系统的频率；每个固定帧率帧调用该函数；在 FixedUpdate之后，进行Physics系统计算。帧率可以通过 Time.fixedDeltaTime 来访问。与Update相互独立。</li>\n<li><code>LateUpdate</code>：如果启用了 Behaviour（指可启用或禁用的组件），则每帧在Update调用后调用 LateUpdate，对于安排脚本的执行顺序很有用。</li>\n<li><code>OnGUI</code>：系统调用 OnGUI 来渲染和处理 GUI 事件，是唯一可以实现**“即时模式”GUI (IMGUI)**系统来渲染和处理 GUI 事件的函数。OnGUI 实现可以每帧调用多次（每个事件调用一次），若MonoBehaviour 的 enabled 属性设置为 false，则不会调用 OnGUI()。</li>\n<li><code>OnDisable</code>：该函数在行为被禁用时调用。当对象销毁时也会调用该函数，它可用于任何清理代码。 当编译完成后重新加载脚本时，将调用 OnDisable，并在加载脚本后调用 OnEnable。</li>\n<li><code>OnEnable</code>：该函数在对象变为启用和激活状态时调用。</li>\n</ul>\n<p>代码验证：</p>\n <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hello</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Awake</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Awake&quot;</span>);&#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Start&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Update&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Fixed&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;OnGUI&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEnable</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Enabled&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDisable</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Disabled&quot;</span>);&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><img src=\"07.jpg\" alt=\"07\"></p>\n</li>\n<li>\n<p>查找脚本手册，了解 GameObjects, Transform, Component 对象</p>\n<ul>\n<li>分别翻译官方对三个对象的描述(Description)</li>\n<li>描述下图中 table 对象(实体)的属性、table 的 Transform 的属性、table 的部件</li>\n<li>用UML图描述三者的关系</li>\n</ul>\n<p><strong>官方描述</strong></p>\n<ul>\n<li>\n<p><strong>GameObject</strong> 是 Unity 中的基础对象，表示角色、道具和景物，可以被用来表示所有可以存在于场景中的事物。它是Unity中场景的建筑块，可作为决定GameObject外观功能的功能组件的容器。在脚本中，GameObject类提供了一个可以在代码中使用的方法集合，包括查找、建立连接和在它们 之间发送消息，以及添加或移除附加到 GameObject 的组件和设置它们在场景中与状态有关的值。</p>\n</li>\n<li>\n<p><strong>Transform</strong> 用于存储游戏对象的位置、旋转、缩放和父子化状态。每个游戏对象始终附加一个变换组件，无法删除变换组件或创建没有变换组件的游戏对象。</p>\n</li>\n<li>\n<p><strong>Component</strong> 是每个GameObject的功能部分，它包含一些可编辑的属性，可以通过编辑这些属性来定义GameObject的行为。</p>\n</li>\n</ul>\n<p><strong>图</strong></p>\n<p><img src=\"08.jpg\" alt=\"08\"></p>\n<p>Table的GameObject属性包含Tag(标签)、Layer(层)、Static(是否静态)、勾选框(是否活动)、属性名；<br>\nTable的Transform属性包含Position(坐标)、Rotation(旋转角)、Scale(大小)；<br>\nTable的Component属性包括Cube(Mesh Filter)、Mesh Renderer、Box Collider、RIgidbody、Hello(Script)、Red(Material)。</p>\n<p><strong>UML图</strong></p>\n <img src=\"09.png\" alt=\"09\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>资源预设(<strong>Prefabs</strong>)与对象克隆(<strong>clone</strong>)</p>\n<ul>\n<li>\n<p>预设(Prefabs)有什么好处?</p>\n<p>Unity 的<strong>Prenfabs</strong>系统允许创建、配置和存储游戏对象及其所有组件、属性值和子游戏对象作为可重用资源。预制件资源充当模板，在此模板的基础之上可以在场景中创建新的预制件实例。这可以避免重复制作的无用功，提高资源复用率，节省资源空间。</p>\n</li>\n<li>\n<p>预设与对象克隆(clone or copy or Instantiate of Unity Object)关系?</p>\n<p>预设本身不需要有实例化的游戏对象，而克隆需要复制实例化的游戏对象。预设也更方便进行批量修改。</p>\n</li>\n<li>\n<p>制作table预制，写一段代码将table预制资源实例化成游戏对象</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">hello</span>:<span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>\t&#123;<br>\t\tGameObject table = (GameObject)Resources.Load(<span class=\"hljs-string\">&quot;table&quot;</span>);<br>\t\ttable = Instantiate(table);<br>\t<br>\t\ttable.transform.parent = <span class=\"hljs-keyword\">this</span>.transform;<br>\t\ttable.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p>🍰</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>源码地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs\">https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs</a></p>\n<p>这里是利用IMGUI做了一个扫雷小游戏。运行窗口大小为Full HD(1920x1080)</p>\n<p>实现的效果如下图</p>\n<p><img src=\"win.gif\" alt=\"win\"></p>\n<p><strong>数据定义部分代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// Data</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] control_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于记录雷和数字 -1是雷 0是空 其他是周围的雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] show_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于记录格子可见性 0是可见 1是不可见</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] mark_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于玩家标记雷 标记雷为1 此时按钮不可点击</span><br>   <br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> mine_num = <span class=\"hljs-number\">60</span>; <span class=\"hljs-comment\">//用于记录剩余雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> wrong = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录标错的雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> time = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录用时</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> tmptime = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录上一帧时间(不会重复初始化)</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> state = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//0为挖矿模式，1为标记模式 输了为-1，赢了为-2</span><br><br>   <span class=\"hljs-comment\">// Controls Style</span><br>   GUIStyle smileStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle mineStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle[] numStyle = <span class=\"hljs-keyword\">new</span> GUIStyle[<span class=\"hljs-number\">8</span>]; <span class=\"hljs-comment\">//记录数字1-8的格式</span><br>   GUIStyle state0 = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle state1 = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle worl = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle txt = <span class=\"hljs-keyword\">new</span> GUIStyle();<br></code></pre></td></tr></table></figure>\n<p>由于不是很想利用Texture2D导入图片素材，这里用的是IMGUI里简陋的<code>GUIStyle()</code>，配合可显示的Unicode符号食用。</p>\n<p><strong>数据初始启动部分代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span> &#123;<br>        <span class=\"hljs-comment\">// 对图标格式的初始化</span><br>        smileStyle.fontSize=<span class=\"hljs-number\">50</span>;<br>        smileStyle.normal.textColor=Color.yellow;<br>        smileStyle.alignment=TextAnchor.MiddleCenter;<br><br>        mineStyle.fontSize=<span class=\"hljs-number\">20</span>;<br>        mineStyle.normal.textColor=Color.red;<br>        mineStyle.alignment=TextAnchor.MiddleCenter;<br><br>        state0.fontSize=<span class=\"hljs-number\">20</span>;<br>        state0.normal.textColor=Color.red;<br>        state0.alignment=TextAnchor.MiddleCenter;<br><br>        state1.fontSize=<span class=\"hljs-number\">20</span>;<br>        state1.normal.textColor=Color.black;<br>        state1.alignment=TextAnchor.MiddleCenter;<br><br>        worl.fontSize = <span class=\"hljs-number\">50</span>;<br>        worl.normal.textColor = Color.red; <span class=\"hljs-comment\">//win=red / lose=blue</span><br>        worl.alignment=TextAnchor.MiddleCenter;<br><br>        txt.fontSize = <span class=\"hljs-number\">30</span>;<br>        txt.normal.textColor=Color.white;<br>        txt.alignment=TextAnchor.MiddleCenter;<br>         <br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">8</span>;i++)&#123;<br>            numStyle[i] = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>            numStyle[i].fontSize = <span class=\"hljs-number\">20</span>;<br>            numStyle[i].alignment = TextAnchor.MiddleCenter;<br>        &#125;<br>        numStyle[<span class=\"hljs-number\">0</span>].normal.textColor=Color.blue; <span class=\"hljs-comment\">//数字1红色</span><br>        numStyle[<span class=\"hljs-number\">1</span>].normal.textColor=Color.green; <span class=\"hljs-comment\">//数字2蓝色</span><br>        numStyle[<span class=\"hljs-number\">2</span>].normal.textColor=Color.red; <span class=\"hljs-comment\">//数字3蓝色</span><br>        numStyle[<span class=\"hljs-number\">3</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.84f</span>,<span class=\"hljs-number\">0.00f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字4蓝色</span><br>        numStyle[<span class=\"hljs-number\">4</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.63f</span>,<span class=\"hljs-number\">0.13f</span>,<span class=\"hljs-number\">0.94f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字5紫色</span><br>        numStyle[<span class=\"hljs-number\">5</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.38f</span>,<span class=\"hljs-number\">0.00f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字6橙色</span><br>        numStyle[<span class=\"hljs-number\">6</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.75f</span>,<span class=\"hljs-number\">0.80f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字7粉色</span><br>        numStyle[<span class=\"hljs-number\">7</span>].normal.textColor=Color.black; <span class=\"hljs-comment\">//数字8黑色</span><br><br>        Init(); <span class=\"hljs-comment\">//游戏参数初始化</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>由于GUIStyle在游戏过程中，基本不会有何变化，就放在Start()函数调用初始化。</p>\n<p><strong>游戏参数初始化代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span> &#123;<br>        <span class=\"hljs-comment\">// 时间，雷数等参数初始化</span><br>        time = <span class=\"hljs-number\">0</span>;<br>        mine_num = <span class=\"hljs-number\">60</span>;<br>        wrong = <span class=\"hljs-number\">0</span>;<br>        state = <span class=\"hljs-number\">0</span>;<br>        <br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-comment\">// 格子可见性初始化</span><br>                show_arr[i,j] = <span class=\"hljs-number\">0</span>;<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-comment\">// 雷区初始化</span><br>        clearMine();<br>        InitMine();<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>每局新游戏开始前的初始化函数，要把各种参数归零，并重新随机生成雷区。</p>\n<p><strong>雷区初始化代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">InitMine</span>()</span>&#123;<br>        <span class=\"hljs-comment\">//初始化数字和雷区</span><br>        <span class=\"hljs-built_in\">int</span> num=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">while</span> (num&lt;<span class=\"hljs-number\">60</span>)<br>        &#123;<br>            <span class=\"hljs-built_in\">int</span> x=Random.Range(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">16</span>);<br>            <span class=\"hljs-built_in\">int</span> y=Random.Range(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">20</span>);<br>            <span class=\"hljs-keyword\">if</span>(control_arr[x,y]==<span class=\"hljs-number\">0</span>)&#123;<br>                control_arr[x,y] = <span class=\"hljs-number\">-1</span>;<br>                num++;<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&gt;<span class=\"hljs-number\">-1</span>)&#123;<br>                    <span class=\"hljs-comment\">//左边</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右边</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//上方</span><br>                    <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//下方</span><br>                    <span class=\"hljs-keyword\">if</span>(j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//左上角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右下角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右上角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//左下角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">clearMine</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                control_arr[i,j]=<span class=\"hljs-number\">0</span>;<br>                mark_arr[i,j]=<span class=\"hljs-number\">0</span>;  <br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p><code>clearMine()</code>函数会把上一局的标记去除，雷全部清除，且格子值全部设为0，配合生成雷的函数<code>InitMine()</code>，<code>InitMine()</code>初始化雷的位置(值为-1)后，会通过循环得出每个格子的数字（周围一圈的雷数）。</p>\n<p><strong>OnGUI()循环代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>        GUI.Box(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">720</span>,<span class=\"hljs-number\">180</span>,<span class=\"hljs-number\">480</span>,<span class=\"hljs-number\">720</span>),<span class=\"hljs-string\">&quot;&quot;</span>);<br>            <span class=\"hljs-comment\">// 生成smile按钮 for restart</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">935</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;☺&quot;</span>,smileStyle))&#123;<br>                Debug.Log(<span class=\"hljs-string\">&quot;Push Smile&quot;</span>);<br>                <span class=\"hljs-keyword\">if</span>(state&gt;=<span class=\"hljs-number\">0</span>)<br>                    Init();             <br>            &#125;<br>            <span class=\"hljs-comment\">// 生成挖雷按钮</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1000</span>,<span class=\"hljs-number\">200</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;挖&quot;</span>,state0))&#123;<br>                state = <span class=\"hljs-number\">0</span>;<br>                state0.normal.textColor=Color.red;<br>                state1.normal.textColor=Color.black;<br><br>            &#125;<br><br>            <span class=\"hljs-comment\">// 生成标记按钮</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1000</span>,<span class=\"hljs-number\">240</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;标&quot;</span>,state1))&#123;<br>                state = <span class=\"hljs-number\">1</span>;<br>                state0.normal.textColor=Color.black;<br>                state1.normal.textColor=Color.red;<br><br>            &#125;<br>            <span class=\"hljs-comment\">//显示剩余雷数</span><br>            GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">160</span>,<span class=\"hljs-number\">60</span>), <span class=\"hljs-string\">&quot;剩余雷数:&quot;</span>+mine_num.ToString());<br><br>            <span class=\"hljs-comment\">//显示时间</span><br>            GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1050</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">130</span>,<span class=\"hljs-number\">60</span>), <span class=\"hljs-string\">&quot;用时(s):&quot;</span>+time.ToString());<br><br>            <span class=\"hljs-comment\">// 每个大小28*28</span><br>            <span class=\"hljs-comment\">// 生成可点击扫雷按钮</span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                    <span class=\"hljs-keyword\">if</span>(show_arr[i,j]==<span class=\"hljs-number\">1</span>)    <span class=\"hljs-keyword\">continue</span>;<br>                    <span class=\"hljs-comment\">// 标记的格子可取消标记</span><br>                    <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">1</span>)&#123;<br>                        <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;✯&quot;</span>))&#123;<br>                            <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">1</span>)&#123;<br>                                mark_arr[i,j] = <span class=\"hljs-number\">0</span>;<br>                                mine_num++;<br>                                <span class=\"hljs-keyword\">if</span> (control_arr[i,j]&lt;<span class=\"hljs-number\">0</span>)<br>                                    wrong--;<br>                            &#125;<br>                        &#125;<br>                        <span class=\"hljs-keyword\">continue</span>;<br>                    &#125;<br><br>                    <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;&quot;</span>))&#123;<br>                        <span class=\"hljs-comment\">// 按下按钮的行为</span><br>                        <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">1</span>)&#123;<br>                            mark_arr[i,j] = <span class=\"hljs-number\">1</span>;<br>                            mine_num--;<br>                            <span class=\"hljs-keyword\">if</span> (control_arr[i,j]&gt;<span class=\"hljs-number\">-1</span>)<br>                                wrong++;<br>                            <span class=\"hljs-keyword\">if</span> (mine_num==<span class=\"hljs-number\">0</span>)<br>                            &#123;<br>                                <span class=\"hljs-keyword\">if</span>(wrong&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                                    showAllMine();<br>                                    state = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//lose</span><br>                                &#125;<br>                                <span class=\"hljs-keyword\">else</span>&#123;    <br>                                    state = <span class=\"hljs-number\">-2</span>; <span class=\"hljs-comment\">//win</span><br>                                &#125;<br>                                <br>                            &#125;<br>                        &#125;<br>                        <span class=\"hljs-keyword\">else</span>&#123;<br>                            <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">0</span>)&#123;<br>                                show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>                                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]==<span class=\"hljs-number\">0</span>)<br>                                    showEmpty(i,j);<br>                                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&lt;<span class=\"hljs-number\">0</span>)&#123;<br>                                    showAllMine();<br>                                    state = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//lose</span><br>                                &#125;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-comment\">// 显示数字和雷    </span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                    <span class=\"hljs-keyword\">if</span>(show_arr[i,j]==<span class=\"hljs-number\">0</span>)    <span class=\"hljs-keyword\">continue</span>; <span class=\"hljs-comment\">//</span><br>                    <span class=\"hljs-built_in\">int</span> ctlnum = control_arr[i,j];<br>                    <span class=\"hljs-keyword\">if</span>(ctlnum==<span class=\"hljs-number\">0</span>)&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot; &quot;</span>);<br>                    &#125;<br>                    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ctlnum&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),ctlnum.ToString(),numStyle[ctlnum<span class=\"hljs-number\">-1</span>]);<br>                    &#125;<br>                    <span class=\"hljs-keyword\">else</span>&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;✵&quot;</span>,mineStyle);<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(state&lt;<span class=\"hljs-number\">0</span>)&#123;<br>            GUI.Box(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">810</span>,<span class=\"hljs-number\">420</span>,<span class=\"hljs-number\">300</span>,<span class=\"hljs-number\">240</span>),<span class=\"hljs-string\">&quot;&quot;</span>);<br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">630</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">20</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>))<br>                Init();<br>            <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">-1</span>)&#123;<br>                worl.normal.textColor =  Color.blue;<br>                GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">440</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;LOSE&quot;</span>, worl);<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span>&#123;<br>                worl.normal.textColor =  Color.red;<br>                GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">440</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;WIN&quot;</span>, worl);<br>            &#125;  <br>            <span class=\"hljs-built_in\">int</span> endnum = <span class=\"hljs-number\">60</span> - mine_num - wrong;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">510</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;扫雷数：&quot;</span>+endnum.ToString(), txt);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">560</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;总用时：&quot;</span>+time.ToString(), txt);<br><br>            tmptime = Mathf.Floor(Time.fixedTime);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-comment\">//计时</span><br>            <span class=\"hljs-keyword\">if</span>(Mathf.Floor(Time.fixedTime)-tmptime==<span class=\"hljs-number\">1</span>)&#123;<br>                tmptime = Mathf.Floor(Time.fixedTime);<br>                time++;<br>            &#125;<br>        &#125;<br><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>由于IMGUI的控件部分只能在<code>OnGUI()</code>函数使用，因此这里会写的比较冗杂，嵌套也比较多。这里利用Time类来辅助我们计时。</p>\n<p><strong>其他相关代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">showAllMine</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]==<span class=\"hljs-number\">-1</span>)&#123;<br>                    show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>                &#125;  <br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// 递归显示无雷区域</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">showEmpty</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> i,<span class=\"hljs-built_in\">int</span> j</span>)</span>&#123;<br>        <span class=\"hljs-comment\">// 遇到被标记的非雷 直接翻开</span><br>        <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">1</span>)&#123;<br>            mark_arr[i,j]=<span class=\"hljs-number\">0</span>;<br>            mine_num++;<br>        &#125;            <br>        show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>   <br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j);<br>        <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i,j+<span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>);<br>        <br>    &#125;<br></code></pre></td></tr></table></figure>\n<p><code>showAllMine()</code>函数是使用在踩雷情况，把剩下的雷也显示出来；<code>showEmpty()</code>函数是在扫雷过程中，如果遇到一个连续空白无雷区，会把没有数字(周围一圈没有雷)的区域及围绕它们的数字显示出来。</p>\n<p><strong>小结</strong></p>\n<ul>\n<li>在写控件Style的时候，感觉这也不太好设置，那也不太好设置，默认的Style风格又不太适用，整体看起来勉强过得去，有的按钮周围没有边框(比如“标”和“挖”)，就是皮肤设置的问题，做不出想要的风格，多少有点痛苦。可能还是乖乖导入Texture2D会更美观一些，但也要耗费时间去找合适的素材。</li>\n<li>制作计时器的时候，因为OnGUI()调用频率，以及Time可以获取从游戏启动的时间，就想到了这个先floor()，再比较有无变化的这个方法计时。其他的一些协程或是延时调用的方法看起来都比较复杂，不太好实现。</li>\n<li>关于利用Button按钮控件的“标”和“挖”来实现标雷和挖格子。似乎是在IMGUI中没能找到控件比较广泛的按键功能，只能监听到按钮被点击，无法监听是被左键或是右键点击又或是按键按下或松开这种，因此实现起来有点怪怪的并且有些麻烦。</li>\n<li>利用自定义状态值<code>state</code>来表示不同的游戏状态，能帮助更好地实现这个游戏功能。</li>\n</ul>\n<p>⛵</p>\n<h3 id=\"三、思考题\">三、思考题</h3>\n<ul>\n<li>\n<p>微软XNA引擎的Game对象屏蔽了游戏循环的细节，并使用一组虚方法让继承者完成它们，我们称这种设计为“模板方法模式”。</p>\n<ul>\n<li>\n<p>为什么是“模板方法”模式而不是“策略模式”呢？</p>\n<p>**模板方法模式：**一个抽象类公开定义了执行它的方法的方式/模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。</p>\n<p>**策略模式：**是针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。</p>\n<p>– 微软XNA引擎的Game对象屏蔽了游戏循环的细节，用虚方法让继承者完成它们，更强调继承重写，明显更符合模板方法模式。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>将优先对象组成树形结构，每个节点都是游戏对象（或数）。</p>\n<ul>\n<li>\n<p>尝试解释组合模式(Composite Pattern /一种设计模式)。</p>\n<p><em>将对象组合成树形结构以表示&quot;部分-整体&quot;的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</em></p>\n</li>\n<li>\n<p>使用 BroadcastMessage() 方法，向子对象发送消息。写出 BroadcastMessage() 的伪代码。</p>\n  <img src=\"10.jpg\" alt=\"10\" style=\"zoom:80%;\" />\n  <img src=\"11.jpg\" alt=\"11\" style=\"zoom:80%;\" />\n  <img src=\"12.jpg\" alt=\"12\" style=\"zoom:80%;\" />\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BcM</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>  <span class=\"hljs-keyword\">public</span> GameObject pobject;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span> ()</span> &#123;<br>\t\tpobject.BroadcastMessage(<span class=\"hljs-string\">&quot;dbug&quot;</span>,<span class=\"hljs-string\">&quot;inputstr&quot;</span>,SendMessageOptions.RequireReceiver);<br>\t&#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">c1</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dbug</span>()</span>&#123;<br>        Debug.Log(<span class=\"hljs-string\">&quot;c1&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">c2</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dbug</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> str</span>)</span>&#123;<br>        Debug.Log(<span class=\"hljs-string\">&quot;c2:&quot;</span>+str);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n  <img src=\"13.jpg\" alt=\"13\" style=\"zoom:80%;\" />\n</li>\n</ul>\n</li>\n<li>\n<p>一个游戏对象用于许多部件描述不同方面的特征。我们设计坦克游戏对象不是继承于 GameObject 对象，而是 GameObject 添加一组行为部件(Component)。</p>\n<ul>\n<li>\n<p>这是什么设计模式？</p>\n<p>装饰器模式?</p>\n</li>\n<li>\n<p>为什么不用继承设计特殊的游戏对象？</p>\n<p>由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。使用继承的话，扩展不够灵活。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>参考资料：<a href=\"https://www.runoob.com/design-pattern/strategy-pattern.html\">策略模式</a>，<a href=\"https://www.runoob.com/design-pattern/template-pattern.html\">模板模式</a>，<a href=\"https://juejin.cn/post/7031727773613817893\">组合模式</a>，<a href=\"https://www.runoob.com/design-pattern/decorator-pattern.html\">装饰器模式</a>，<a href=\"https://www.runoob.com/design-pattern/bridge-pattern.html\">桥接模式</a>，<a href=\"https://blog.csdn.net/xiumang/article/details/88750110\">u3d计时器</a>，<a href=\"https://docs.unity.cn/cn/2021.3/Manual/gui-Basics.html\">IMGUI</a></p>\n<blockquote>\n<p>Cauchy    2022.10.04</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：<br>\n1.简答题（涉及GameObject, Transform, Assets, Prefabs, Component, MonoBehaviour等）<br>\n2.编程实践（仅允许使用IMGUI构建UI，训练数据-控制分离的编程思维）<br>\n3.思考题（涉及游戏设计模式）</p>\n</blockquote>","more":"<p>🌈</p>\n<h3 id=\"一、简答题\">一、简答题</h3>\n<ol>\n<li>\n<p>解释游戏对象(<strong>GameObjects</strong>)和资源(<strong>Assets</strong>)的区别与联系</p>\n<p><strong>GameObjects</strong>：是 Unity 中的基础对象，表示角色、道具和景物。它们本身并没有取得多大作为，但它们充当组件(Component)的容器，而组件可实现功能。</p>\n <img src=\"02.jpg\" alt=\"02\" style=\"zoom: 80%;\" />\n<p>我们可以看到GameObject列表下有各种属性的对象，包括空属性对象、3D对象、效果、灯光等</p>\n<p><strong>Assets</strong>：表示 Unity 项目中用来创建游戏或应用的任何项；也可以代表项目中的视觉或音频元素，例如 3D 模型、纹理、精灵、音效或音乐；还可以表示更抽象的项目，例如任何用途的颜色渐变、动画遮罩或任意文本或数字数据。</p>\n <img src=\"03.jpg\" alt=\"03\" style=\"zoom:80%;\" />\n<p>我们可以看到Assets创建下有很多类型的资源，如C#脚本，着色器，预制件等。</p>\n<p>简单地理解，游戏对象是真正加入到游戏场景里的实体，类似一个空盒子，需要向里面添加各种组件来实功能。资源是创建或外导入的各种数据，可以应用到不同游戏对象身上，可以只是存储在项目里，不一定会使用到当前的游戏场景中。</p>\n <img src=\"01.png\" alt=\"01\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>下载几个游戏案列，分别总结资源、对象组织和结构（指资源的目录组织结构与游戏对象树的层次结构）</p>\n<p>这里用作展示的是官方的游戏教程里的资源与对象的组织和结构。</p>\n <img src=\"04.jpg\" alt=\"04\" style=\"zoom:80%;\" />\n<p>我们可以看到<strong>资源</strong>一般是按<strong>用途</strong>来分的，不同的文件夹存放不同类别的资源，包括音频、角色、环境、脚本、预制件、场景等，这里还可以看到模型资源里的环境精灵是按颜色来分类的，脚本里面按使用场景分类。</p>\n<p><img src=\"05.jpg\" alt=\"05\" style=\"zoom:80%;\" /><img src=\"06.jpg\" alt=\"06\" style=\"zoom:80%;\" /></p>\n<p><strong>游戏对象</strong>主要是根据<strong>功能</strong>不同分类的，可以看到第一个游戏对象树有UI画布、摄像机、角色、格子、敌人等分支，第二个游戏对象树则是利用空对象来写分割线区分结构。</p>\n<p>养成合理分类资源与游戏对象的好习惯，能让我们更高效地制作游戏。</p>\n</li>\n<li>\n<p>编写一个代码，使用 debug 语句来验证 <code>MonoBehaviour</code> 基本行为或事件触发的条件</p>\n<ul>\n<li>基本行为包括 <code>Awake()</code> <code>Start()</code> <code>Update()</code> <code>FixedUpdate()</code> <code>LateUpdate()</code></li>\n<li>常用事件包括 <code>OnGUI()</code> <code>OnDisable()</code> <code>OnEnable()</code></li>\n</ul>\n<p><em>“MonoBehaviour 类是一个基类，所有 Unity 脚本都默认派生自该类。MonoBehaviour 类允许您启动、停止和管理协程。MonoBehaviour 类提供对大量事件消息的访问，允许您根据项目中当前发生的情况执行代码。”</em></p>\n<p><strong>MonoBehaviour 方法简介</strong></p>\n<ul>\n<li><code>Awake</code>：在加载脚本实例时调用，无论该脚本是否启用，初始化脚本时都会调用。其在 Start 前调用</li>\n<li><code>Start</code>：在首次调用任何 Update 方法之前启用脚本时，在帧上调用</li>\n<li><code>Update</code>：如果启用了 MonoBehaviour，则每帧调用 Update</li>\n<li><code>FixedUpdate</code>：具有物理系统的频率；每个固定帧率帧调用该函数；在 FixedUpdate之后，进行Physics系统计算。帧率可以通过 Time.fixedDeltaTime 来访问。与Update相互独立。</li>\n<li><code>LateUpdate</code>：如果启用了 Behaviour（指可启用或禁用的组件），则每帧在Update调用后调用 LateUpdate，对于安排脚本的执行顺序很有用。</li>\n<li><code>OnGUI</code>：系统调用 OnGUI 来渲染和处理 GUI 事件，是唯一可以实现**“即时模式”GUI (IMGUI)**系统来渲染和处理 GUI 事件的函数。OnGUI 实现可以每帧调用多次（每个事件调用一次），若MonoBehaviour 的 enabled 属性设置为 false，则不会调用 OnGUI()。</li>\n<li><code>OnDisable</code>：该函数在行为被禁用时调用。当对象销毁时也会调用该函数，它可用于任何清理代码。 当编译完成后重新加载脚本时，将调用 OnDisable，并在加载脚本后调用 OnEnable。</li>\n<li><code>OnEnable</code>：该函数在对象变为启用和激活状态时调用。</li>\n</ul>\n<p>代码验证：</p>\n <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Hello</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Awake</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Awake&quot;</span>);&#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Start&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Update&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Fixed&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;OnGUI&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEnable</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Enabled&quot;</span>);&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDisable</span>()</span> &#123;Debug.Log(<span class=\"hljs-string\">&quot;Disabled&quot;</span>);&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><img src=\"07.jpg\" alt=\"07\"></p>\n</li>\n<li>\n<p>查找脚本手册，了解 GameObjects, Transform, Component 对象</p>\n<ul>\n<li>分别翻译官方对三个对象的描述(Description)</li>\n<li>描述下图中 table 对象(实体)的属性、table 的 Transform 的属性、table 的部件</li>\n<li>用UML图描述三者的关系</li>\n</ul>\n<p><strong>官方描述</strong></p>\n<ul>\n<li>\n<p><strong>GameObject</strong> 是 Unity 中的基础对象，表示角色、道具和景物，可以被用来表示所有可以存在于场景中的事物。它是Unity中场景的建筑块，可作为决定GameObject外观功能的功能组件的容器。在脚本中，GameObject类提供了一个可以在代码中使用的方法集合，包括查找、建立连接和在它们 之间发送消息，以及添加或移除附加到 GameObject 的组件和设置它们在场景中与状态有关的值。</p>\n</li>\n<li>\n<p><strong>Transform</strong> 用于存储游戏对象的位置、旋转、缩放和父子化状态。每个游戏对象始终附加一个变换组件，无法删除变换组件或创建没有变换组件的游戏对象。</p>\n</li>\n<li>\n<p><strong>Component</strong> 是每个GameObject的功能部分，它包含一些可编辑的属性，可以通过编辑这些属性来定义GameObject的行为。</p>\n</li>\n</ul>\n<p><strong>图</strong></p>\n<p><img src=\"08.jpg\" alt=\"08\"></p>\n<p>Table的GameObject属性包含Tag(标签)、Layer(层)、Static(是否静态)、勾选框(是否活动)、属性名；<br>\nTable的Transform属性包含Position(坐标)、Rotation(旋转角)、Scale(大小)；<br>\nTable的Component属性包括Cube(Mesh Filter)、Mesh Renderer、Box Collider、RIgidbody、Hello(Script)、Red(Material)。</p>\n<p><strong>UML图</strong></p>\n <img src=\"09.png\" alt=\"09\" style=\"zoom:80%;\" />\n</li>\n<li>\n<p>资源预设(<strong>Prefabs</strong>)与对象克隆(<strong>clone</strong>)</p>\n<ul>\n<li>\n<p>预设(Prefabs)有什么好处?</p>\n<p>Unity 的<strong>Prenfabs</strong>系统允许创建、配置和存储游戏对象及其所有组件、属性值和子游戏对象作为可重用资源。预制件资源充当模板，在此模板的基础之上可以在场景中创建新的预制件实例。这可以避免重复制作的无用功，提高资源复用率，节省资源空间。</p>\n</li>\n<li>\n<p>预设与对象克隆(clone or copy or Instantiate of Unity Object)关系?</p>\n<p>预设本身不需要有实例化的游戏对象，而克隆需要复制实例化的游戏对象。预设也更方便进行批量修改。</p>\n</li>\n<li>\n<p>制作table预制，写一段代码将table预制资源实例化成游戏对象</p>\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">hello</span>:<span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>\t&#123;<br>\t\tGameObject table = (GameObject)Resources.Load(<span class=\"hljs-string\">&quot;table&quot;</span>);<br>\t\ttable = Instantiate(table);<br>\t<br>\t\ttable.transform.parent = <span class=\"hljs-keyword\">this</span>.transform;<br>\t\ttable.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>\t&#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<p>🍰</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>源码地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs\">https://github.com/Cauchyoooo/3DGameDesign/blob/main/hw2/MineGame.cs</a></p>\n<p>这里是利用IMGUI做了一个扫雷小游戏。运行窗口大小为Full HD(1920x1080)</p>\n<p>实现的效果如下图</p>\n<p><img src=\"win.gif\" alt=\"win\"></p>\n<p><strong>数据定义部分代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// Data</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] control_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于记录雷和数字 -1是雷 0是空 其他是周围的雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] show_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于记录格子可见性 0是可见 1是不可见</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span>[,] mark_arr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[<span class=\"hljs-number\">16</span>,<span class=\"hljs-number\">20</span>]; <span class=\"hljs-comment\">//用于玩家标记雷 标记雷为1 此时按钮不可点击</span><br>   <br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> mine_num = <span class=\"hljs-number\">60</span>; <span class=\"hljs-comment\">//用于记录剩余雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> wrong = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录标错的雷数</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> time = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录用时</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> tmptime = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//用于记录上一帧时间(不会重复初始化)</span><br>   <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> state = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//0为挖矿模式，1为标记模式 输了为-1，赢了为-2</span><br><br>   <span class=\"hljs-comment\">// Controls Style</span><br>   GUIStyle smileStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle mineStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle[] numStyle = <span class=\"hljs-keyword\">new</span> GUIStyle[<span class=\"hljs-number\">8</span>]; <span class=\"hljs-comment\">//记录数字1-8的格式</span><br>   GUIStyle state0 = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle state1 = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle worl = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>   GUIStyle txt = <span class=\"hljs-keyword\">new</span> GUIStyle();<br></code></pre></td></tr></table></figure>\n<p>由于不是很想利用Texture2D导入图片素材，这里用的是IMGUI里简陋的<code>GUIStyle()</code>，配合可显示的Unicode符号食用。</p>\n<p><strong>数据初始启动部分代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span> &#123;<br>        <span class=\"hljs-comment\">// 对图标格式的初始化</span><br>        smileStyle.fontSize=<span class=\"hljs-number\">50</span>;<br>        smileStyle.normal.textColor=Color.yellow;<br>        smileStyle.alignment=TextAnchor.MiddleCenter;<br><br>        mineStyle.fontSize=<span class=\"hljs-number\">20</span>;<br>        mineStyle.normal.textColor=Color.red;<br>        mineStyle.alignment=TextAnchor.MiddleCenter;<br><br>        state0.fontSize=<span class=\"hljs-number\">20</span>;<br>        state0.normal.textColor=Color.red;<br>        state0.alignment=TextAnchor.MiddleCenter;<br><br>        state1.fontSize=<span class=\"hljs-number\">20</span>;<br>        state1.normal.textColor=Color.black;<br>        state1.alignment=TextAnchor.MiddleCenter;<br><br>        worl.fontSize = <span class=\"hljs-number\">50</span>;<br>        worl.normal.textColor = Color.red; <span class=\"hljs-comment\">//win=red / lose=blue</span><br>        worl.alignment=TextAnchor.MiddleCenter;<br><br>        txt.fontSize = <span class=\"hljs-number\">30</span>;<br>        txt.normal.textColor=Color.white;<br>        txt.alignment=TextAnchor.MiddleCenter;<br>         <br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">8</span>;i++)&#123;<br>            numStyle[i] = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>            numStyle[i].fontSize = <span class=\"hljs-number\">20</span>;<br>            numStyle[i].alignment = TextAnchor.MiddleCenter;<br>        &#125;<br>        numStyle[<span class=\"hljs-number\">0</span>].normal.textColor=Color.blue; <span class=\"hljs-comment\">//数字1红色</span><br>        numStyle[<span class=\"hljs-number\">1</span>].normal.textColor=Color.green; <span class=\"hljs-comment\">//数字2蓝色</span><br>        numStyle[<span class=\"hljs-number\">2</span>].normal.textColor=Color.red; <span class=\"hljs-comment\">//数字3蓝色</span><br>        numStyle[<span class=\"hljs-number\">3</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.84f</span>,<span class=\"hljs-number\">0.00f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字4蓝色</span><br>        numStyle[<span class=\"hljs-number\">4</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.63f</span>,<span class=\"hljs-number\">0.13f</span>,<span class=\"hljs-number\">0.94f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字5紫色</span><br>        numStyle[<span class=\"hljs-number\">5</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.38f</span>,<span class=\"hljs-number\">0.00f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字6橙色</span><br>        numStyle[<span class=\"hljs-number\">6</span>].normal.textColor=<span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1.00f</span>,<span class=\"hljs-number\">0.75f</span>,<span class=\"hljs-number\">0.80f</span>,<span class=\"hljs-number\">1.00f</span>); <span class=\"hljs-comment\">//数字7粉色</span><br>        numStyle[<span class=\"hljs-number\">7</span>].normal.textColor=Color.black; <span class=\"hljs-comment\">//数字8黑色</span><br><br>        Init(); <span class=\"hljs-comment\">//游戏参数初始化</span><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>由于GUIStyle在游戏过程中，基本不会有何变化，就放在Start()函数调用初始化。</p>\n<p><strong>游戏参数初始化代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span> &#123;<br>        <span class=\"hljs-comment\">// 时间，雷数等参数初始化</span><br>        time = <span class=\"hljs-number\">0</span>;<br>        mine_num = <span class=\"hljs-number\">60</span>;<br>        wrong = <span class=\"hljs-number\">0</span>;<br>        state = <span class=\"hljs-number\">0</span>;<br>        <br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-comment\">// 格子可见性初始化</span><br>                show_arr[i,j] = <span class=\"hljs-number\">0</span>;<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-comment\">// 雷区初始化</span><br>        clearMine();<br>        InitMine();<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>每局新游戏开始前的初始化函数，要把各种参数归零，并重新随机生成雷区。</p>\n<p><strong>雷区初始化代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">InitMine</span>()</span>&#123;<br>        <span class=\"hljs-comment\">//初始化数字和雷区</span><br>        <span class=\"hljs-built_in\">int</span> num=<span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-keyword\">while</span> (num&lt;<span class=\"hljs-number\">60</span>)<br>        &#123;<br>            <span class=\"hljs-built_in\">int</span> x=Random.Range(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">16</span>);<br>            <span class=\"hljs-built_in\">int</span> y=Random.Range(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">20</span>);<br>            <span class=\"hljs-keyword\">if</span>(control_arr[x,y]==<span class=\"hljs-number\">0</span>)&#123;<br>                control_arr[x,y] = <span class=\"hljs-number\">-1</span>;<br>                num++;<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&gt;<span class=\"hljs-number\">-1</span>)&#123;<br>                    <span class=\"hljs-comment\">//左边</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右边</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//上方</span><br>                    <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//下方</span><br>                    <span class=\"hljs-keyword\">if</span>(j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//左上角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右下角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//右上角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; control_arr[i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                    <span class=\"hljs-comment\">//左下角</span><br>                    <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; control_arr[i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">-1</span>)<br>                        control_arr[i,j]++;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">clearMine</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                control_arr[i,j]=<span class=\"hljs-number\">0</span>;<br>                mark_arr[i,j]=<span class=\"hljs-number\">0</span>;  <br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure>\n<p><code>clearMine()</code>函数会把上一局的标记去除，雷全部清除，且格子值全部设为0，配合生成雷的函数<code>InitMine()</code>，<code>InitMine()</code>初始化雷的位置(值为-1)后，会通过循环得出每个格子的数字（周围一圈的雷数）。</p>\n<p><strong>OnGUI()循环代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span> &#123;<br>        GUI.Box(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">720</span>,<span class=\"hljs-number\">180</span>,<span class=\"hljs-number\">480</span>,<span class=\"hljs-number\">720</span>),<span class=\"hljs-string\">&quot;&quot;</span>);<br>            <span class=\"hljs-comment\">// 生成smile按钮 for restart</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">935</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;☺&quot;</span>,smileStyle))&#123;<br>                Debug.Log(<span class=\"hljs-string\">&quot;Push Smile&quot;</span>);<br>                <span class=\"hljs-keyword\">if</span>(state&gt;=<span class=\"hljs-number\">0</span>)<br>                    Init();             <br>            &#125;<br>            <span class=\"hljs-comment\">// 生成挖雷按钮</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1000</span>,<span class=\"hljs-number\">200</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;挖&quot;</span>,state0))&#123;<br>                state = <span class=\"hljs-number\">0</span>;<br>                state0.normal.textColor=Color.red;<br>                state1.normal.textColor=Color.black;<br><br>            &#125;<br><br>            <span class=\"hljs-comment\">// 生成标记按钮</span><br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1000</span>,<span class=\"hljs-number\">240</span>,<span class=\"hljs-number\">50</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;标&quot;</span>,state1))&#123;<br>                state = <span class=\"hljs-number\">1</span>;<br>                state0.normal.textColor=Color.black;<br>                state1.normal.textColor=Color.red;<br><br>            &#125;<br>            <span class=\"hljs-comment\">//显示剩余雷数</span><br>            GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">160</span>,<span class=\"hljs-number\">60</span>), <span class=\"hljs-string\">&quot;剩余雷数:&quot;</span>+mine_num.ToString());<br><br>            <span class=\"hljs-comment\">//显示时间</span><br>            GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1050</span>,<span class=\"hljs-number\">220</span>,<span class=\"hljs-number\">130</span>,<span class=\"hljs-number\">60</span>), <span class=\"hljs-string\">&quot;用时(s):&quot;</span>+time.ToString());<br><br>            <span class=\"hljs-comment\">// 每个大小28*28</span><br>            <span class=\"hljs-comment\">// 生成可点击扫雷按钮</span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                    <span class=\"hljs-keyword\">if</span>(show_arr[i,j]==<span class=\"hljs-number\">1</span>)    <span class=\"hljs-keyword\">continue</span>;<br>                    <span class=\"hljs-comment\">// 标记的格子可取消标记</span><br>                    <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">1</span>)&#123;<br>                        <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;✯&quot;</span>))&#123;<br>                            <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">1</span>)&#123;<br>                                mark_arr[i,j] = <span class=\"hljs-number\">0</span>;<br>                                mine_num++;<br>                                <span class=\"hljs-keyword\">if</span> (control_arr[i,j]&lt;<span class=\"hljs-number\">0</span>)<br>                                    wrong--;<br>                            &#125;<br>                        &#125;<br>                        <span class=\"hljs-keyword\">continue</span>;<br>                    &#125;<br><br>                    <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;&quot;</span>))&#123;<br>                        <span class=\"hljs-comment\">// 按下按钮的行为</span><br>                        <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">1</span>)&#123;<br>                            mark_arr[i,j] = <span class=\"hljs-number\">1</span>;<br>                            mine_num--;<br>                            <span class=\"hljs-keyword\">if</span> (control_arr[i,j]&gt;<span class=\"hljs-number\">-1</span>)<br>                                wrong++;<br>                            <span class=\"hljs-keyword\">if</span> (mine_num==<span class=\"hljs-number\">0</span>)<br>                            &#123;<br>                                <span class=\"hljs-keyword\">if</span>(wrong&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                                    showAllMine();<br>                                    state = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//lose</span><br>                                &#125;<br>                                <span class=\"hljs-keyword\">else</span>&#123;    <br>                                    state = <span class=\"hljs-number\">-2</span>; <span class=\"hljs-comment\">//win</span><br>                                &#125;<br>                                <br>                            &#125;<br>                        &#125;<br>                        <span class=\"hljs-keyword\">else</span>&#123;<br>                            <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">0</span>)&#123;<br>                                show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>                                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]==<span class=\"hljs-number\">0</span>)<br>                                    showEmpty(i,j);<br>                                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&lt;<span class=\"hljs-number\">0</span>)&#123;<br>                                    showAllMine();<br>                                    state = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//lose</span><br>                                &#125;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-comment\">// 显示数字和雷    </span><br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                    <span class=\"hljs-keyword\">if</span>(show_arr[i,j]==<span class=\"hljs-number\">0</span>)    <span class=\"hljs-keyword\">continue</span>; <span class=\"hljs-comment\">//</span><br>                    <span class=\"hljs-built_in\">int</span> ctlnum = control_arr[i,j];<br>                    <span class=\"hljs-keyword\">if</span>(ctlnum==<span class=\"hljs-number\">0</span>)&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot; &quot;</span>);<br>                    &#125;<br>                    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ctlnum&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),ctlnum.ToString(),numStyle[ctlnum<span class=\"hljs-number\">-1</span>]);<br>                    &#125;<br>                    <span class=\"hljs-keyword\">else</span>&#123;<br>                        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">736</span>+i*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">300</span>+j*<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">28</span>),<span class=\"hljs-string\">&quot;✵&quot;</span>,mineStyle);<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(state&lt;<span class=\"hljs-number\">0</span>)&#123;<br>            GUI.Box(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">810</span>,<span class=\"hljs-number\">420</span>,<span class=\"hljs-number\">300</span>,<span class=\"hljs-number\">240</span>),<span class=\"hljs-string\">&quot;&quot;</span>);<br>            <span class=\"hljs-keyword\">if</span>(GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">630</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">20</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>))<br>                Init();<br>            <span class=\"hljs-keyword\">if</span>(state == <span class=\"hljs-number\">-1</span>)&#123;<br>                worl.normal.textColor =  Color.blue;<br>                GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">440</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;LOSE&quot;</span>, worl);<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span>&#123;<br>                worl.normal.textColor =  Color.red;<br>                GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">440</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;WIN&quot;</span>, worl);<br>            &#125;  <br>            <span class=\"hljs-built_in\">int</span> endnum = <span class=\"hljs-number\">60</span> - mine_num - wrong;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">510</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;扫雷数：&quot;</span>+endnum.ToString(), txt);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">910</span>,<span class=\"hljs-number\">560</span>,<span class=\"hljs-number\">100</span>,<span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;总用时：&quot;</span>+time.ToString(), txt);<br><br>            tmptime = Mathf.Floor(Time.fixedTime);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-comment\">//计时</span><br>            <span class=\"hljs-keyword\">if</span>(Mathf.Floor(Time.fixedTime)-tmptime==<span class=\"hljs-number\">1</span>)&#123;<br>                tmptime = Mathf.Floor(Time.fixedTime);<br>                time++;<br>            &#125;<br>        &#125;<br><br>    &#125;<br></code></pre></td></tr></table></figure>\n<p>由于IMGUI的控件部分只能在<code>OnGUI()</code>函数使用，因此这里会写的比较冗杂，嵌套也比较多。这里利用Time类来辅助我们计时。</p>\n<p><strong>其他相关代码：</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">showAllMine</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;<span class=\"hljs-number\">16</span>;i++)&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> j=<span class=\"hljs-number\">0</span>;j&lt;<span class=\"hljs-number\">20</span>;j++)&#123;<br>                <span class=\"hljs-keyword\">if</span>(control_arr[i,j]==<span class=\"hljs-number\">-1</span>)&#123;<br>                    show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>                &#125;  <br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// 递归显示无雷区域</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">showEmpty</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> i,<span class=\"hljs-built_in\">int</span> j</span>)</span>&#123;<br>        <span class=\"hljs-comment\">// 遇到被标记的非雷 直接翻开</span><br>        <span class=\"hljs-keyword\">if</span>(mark_arr[i,j]==<span class=\"hljs-number\">1</span>)&#123;<br>            mark_arr[i,j]=<span class=\"hljs-number\">0</span>;<br>            mine_num++;<br>        &#125;            <br>        show_arr[i,j]=<span class=\"hljs-number\">1</span>;<br>        <span class=\"hljs-keyword\">if</span>(control_arr[i,j]&gt;<span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>   <br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j);<br>        <span class=\"hljs-keyword\">if</span>(j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i,j+<span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j+<span class=\"hljs-number\">1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&lt;<span class=\"hljs-number\">15</span> &amp;&amp; j&gt;<span class=\"hljs-number\">0</span> &amp;&amp; show_arr[i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i+<span class=\"hljs-number\">1</span>,j<span class=\"hljs-number\">-1</span>);<br>        <span class=\"hljs-keyword\">if</span>(i&gt;<span class=\"hljs-number\">0</span> &amp;&amp; j&lt;<span class=\"hljs-number\">19</span> &amp;&amp; show_arr[i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>]==<span class=\"hljs-number\">0</span>)<br>            showEmpty(i<span class=\"hljs-number\">-1</span>,j+<span class=\"hljs-number\">1</span>);<br>        <br>    &#125;<br></code></pre></td></tr></table></figure>\n<p><code>showAllMine()</code>函数是使用在踩雷情况，把剩下的雷也显示出来；<code>showEmpty()</code>函数是在扫雷过程中，如果遇到一个连续空白无雷区，会把没有数字(周围一圈没有雷)的区域及围绕它们的数字显示出来。</p>\n<p><strong>小结</strong></p>\n<ul>\n<li>在写控件Style的时候，感觉这也不太好设置，那也不太好设置，默认的Style风格又不太适用，整体看起来勉强过得去，有的按钮周围没有边框(比如“标”和“挖”)，就是皮肤设置的问题，做不出想要的风格，多少有点痛苦。可能还是乖乖导入Texture2D会更美观一些，但也要耗费时间去找合适的素材。</li>\n<li>制作计时器的时候，因为OnGUI()调用频率，以及Time可以获取从游戏启动的时间，就想到了这个先floor()，再比较有无变化的这个方法计时。其他的一些协程或是延时调用的方法看起来都比较复杂，不太好实现。</li>\n<li>关于利用Button按钮控件的“标”和“挖”来实现标雷和挖格子。似乎是在IMGUI中没能找到控件比较广泛的按键功能，只能监听到按钮被点击，无法监听是被左键或是右键点击又或是按键按下或松开这种，因此实现起来有点怪怪的并且有些麻烦。</li>\n<li>利用自定义状态值<code>state</code>来表示不同的游戏状态，能帮助更好地实现这个游戏功能。</li>\n</ul>\n<p>⛵</p>\n<h3 id=\"三、思考题\">三、思考题</h3>\n<ul>\n<li>\n<p>微软XNA引擎的Game对象屏蔽了游戏循环的细节，并使用一组虚方法让继承者完成它们，我们称这种设计为“模板方法模式”。</p>\n<ul>\n<li>\n<p>为什么是“模板方法”模式而不是“策略模式”呢？</p>\n<p>**模板方法模式：**一个抽象类公开定义了执行它的方法的方式/模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。</p>\n<p>**策略模式：**是针对一组算法，将每一个算法封装到具有共同接口的独立的类中，从而使得它们可以相互替换。</p>\n<p>– 微软XNA引擎的Game对象屏蔽了游戏循环的细节，用虚方法让继承者完成它们，更强调继承重写，明显更符合模板方法模式。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>将优先对象组成树形结构，每个节点都是游戏对象（或数）。</p>\n<ul>\n<li>\n<p>尝试解释组合模式(Composite Pattern /一种设计模式)。</p>\n<p><em>将对象组合成树形结构以表示&quot;部分-整体&quot;的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</em></p>\n</li>\n<li>\n<p>使用 BroadcastMessage() 方法，向子对象发送消息。写出 BroadcastMessage() 的伪代码。</p>\n  <img src=\"10.jpg\" alt=\"10\" style=\"zoom:80%;\" />\n  <img src=\"11.jpg\" alt=\"11\" style=\"zoom:80%;\" />\n  <img src=\"12.jpg\" alt=\"12\" style=\"zoom:80%;\" />\n  <figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BcM</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>  <span class=\"hljs-keyword\">public</span> GameObject pobject;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span> ()</span> &#123;<br>\t\tpobject.BroadcastMessage(<span class=\"hljs-string\">&quot;dbug&quot;</span>,<span class=\"hljs-string\">&quot;inputstr&quot;</span>,SendMessageOptions.RequireReceiver);<br>\t&#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">c1</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dbug</span>()</span>&#123;<br>        Debug.Log(<span class=\"hljs-string\">&quot;c1&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">c2</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">dbug</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> str</span>)</span>&#123;<br>        Debug.Log(<span class=\"hljs-string\">&quot;c2:&quot;</span>+str);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n  <img src=\"13.jpg\" alt=\"13\" style=\"zoom:80%;\" />\n</li>\n</ul>\n</li>\n<li>\n<p>一个游戏对象用于许多部件描述不同方面的特征。我们设计坦克游戏对象不是继承于 GameObject 对象，而是 GameObject 添加一组行为部件(Component)。</p>\n<ul>\n<li>\n<p>这是什么设计模式？</p>\n<p>装饰器模式?</p>\n</li>\n<li>\n<p>为什么不用继承设计特殊的游戏对象？</p>\n<p>由于继承为类引入静态特征，并且随着扩展功能的增多，子类会很膨胀。使用继承的话，扩展不够灵活。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>参考资料：<a href=\"https://www.runoob.com/design-pattern/strategy-pattern.html\">策略模式</a>，<a href=\"https://www.runoob.com/design-pattern/template-pattern.html\">模板模式</a>，<a href=\"https://juejin.cn/post/7031727773613817893\">组合模式</a>，<a href=\"https://www.runoob.com/design-pattern/decorator-pattern.html\">装饰器模式</a>，<a href=\"https://www.runoob.com/design-pattern/bridge-pattern.html\">桥接模式</a>，<a href=\"https://blog.csdn.net/xiumang/article/details/88750110\">u3d计时器</a>，<a href=\"https://docs.unity.cn/cn/2021.3/Manual/gui-Basics.html\">IMGUI</a></p>\n<blockquote>\n<p>Cauchy    2022.10.04</p>\n</blockquote>"},{"layout":"post","title":"HW5: 与游戏世界交互","date":"2022-11-13T06:00:00.000Z","subtitle":"与游戏世界交互","_content":"\n> 作业简介：\n>\n> 1.自定义组件：涉及SciptableObject\n>\n> 2.编程实践（Hit UFO）：涉及工厂模式\n\n<!--more-->\n\n:gem:\n\n### 一、自定义组件\n\n* 用自定义组件定义几种飞碟，做成预制\n\n这里借用资源商店的Sets - Gems里的prefab（都是宝石呀）作为飞碟原型。\n\n先利用 ScriptableObject 设定飞碟的属性\n\n```c#\n[System.Serializable]\npublic class Attributes{\n    [Tooltip(\"大小\")]\n    public int size;\n    [Tooltip(\"速度\")]\n    public int speed;\n    [Tooltip(\"得分\")]\n    public int score;\n}\n\n[CreateAssetMenu(fileName = \"DiskItem\", menuName = \"(ScritableObject)DiskItem\")]\npublic class DiskItem : ScriptableObject\n{\n    public string Name;\n    public string Desc;\n    [Tooltip(\"飞碟属性\")]\n    public Attributes attributes;\n}\n```\n\n分数与对应的属性如下表所示:\n\n| 分数 | 大小 | 速度 |\n| ---- | ---- | ---- |\n| 1    | 2    | 15   |\n| 2    | 1    | 17   |\n| 5    | 1    | 20   |\n| 9    | 1    | 35   |\n\n形状颜色与之匹配的分数规则如下图所示：\n\n![01](../../../assets/game/1113/01.png)\n\n再利用Monobehavior脚本为各飞碟附上相应属性\n\n```c#\npublic class Test : MonoBehaviour\n{\n    public DiskItem diskItem;\n}\n```\n\n这样，我们自定义的预制件就做好了。\n\n:space_invader:\n\n### 二、编程实践\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets\n\n* 编写一个简单的鼠标打飞碟游戏\n    * 游戏有多个round，每个round包括数次trial；\n    * 每个trial的飞碟属性（色彩、大小、发射位置、速度、角度）及同时出现的个数都可能不同；\n    * 每个trial的飞碟有随机性，总体难度随round上升；\n    * 鼠标点中得分，得分规则按飞碟属性不同计算，规则可自定义。\n* 要求：\n    * 使用带缓存的工厂模式管理不同飞碟的生产与回收，该工厂必须是场景单实例的！具体实现可参考资源Singleton模板类；\n    * 尽可能使用前面MVC结构实现人机交互与游戏模型分离。\n\n\n\n#### 简单工厂\n\n简单工厂又称为工厂方法，即类一个方法能够得到一个对象实例，使用者不需要知道该实例如何构建、初始化等细节。\n\n* 游戏对象的创建与销毁高成本，必须减少销毁次数。\n* 屏蔽创建与销毁的业务逻辑，是程序易于扩展。\n\n在Unity中，**工厂方法+单实例+对象池** 通常都是同时一起用。这里给出一个设计例子：\n\n![02](../../../assets/game/1113/02.png)\n\n其中：\n\n* DiskFactory 类是一个单实例类，用钱买场景单实例创建\n* DiskFactory 类有工厂方法 GetDisk 产生飞碟，有回收方法 FreeDisk\n* DiskFactory 使用模板模式根据预制和规则制作飞碟\n* 对象模板包括飞碟对象与飞碟数据\n\n\n\n#### 实现效果\n\n![04](../../../assets/game/1113/04.gif)\n\n\n\n#### 代码框架\n\n![03](../../../assets/game/1113/03.png)\n\n其中标注了**固定模板**的类是基本与前几次作业使用的代码一致，除了`Singleton`是本次作业新增的。\n\n`Singleton`代码如下：\n\n```c#\npublic class Singleton<T> : MonoBehaviour where T : MonoBehaviour\n{\n    protected static T instance;\n\n    public static T Instance{\n        get{\n            if(instance == null){\n                instance = (T)FindObjectOfType(typeof(T));\n                if(instance == null){\n                    Debug.LogError(\n                        \"An instance of \"+\n                        typeof(T)+\n                        \" is needed in the scene, but there is none.\"\n                    );\n                }\n            }\n            return instance;\n        }\n    }\n}\n```\n\n\n\n#### 主要代码\n\n**CCFlyAction**\n\n用于飞行动作。通过改变游戏对象position的z轴来实现其移动，也加入了游戏对象自己旋转。当z轴坐标不大于-20时，理解为飞出屏幕，销毁处理。\n\n```c#\npublic class CCFlyAction : SSAction\n{\n    public float speed;\n    public static CCFlyAction GetCCFlyAction(float s){\n        CCFlyAction action = ScriptableObject.CreateInstance<CCFlyAction>();\n        action.speed = s;\n        return action;\n    }\n\n    public override void Start(){}\n\n    public override void Update()\n    {\n        //飞碟已经被\"销毁\"\n        if (this.transform.gameObject.activeSelf == false) { \n            Debug.Log(\"Hit Destroy\");\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n        if(this.transform.position.z <= -20){\n            Debug.Log(\"Out Destroy\");\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n\n        transform.position -= new Vector3(0, 0, speed * Time.deltaTime);\n        transform.Rotate(new Vector3(0, 10 * Time.deltaTime, 30 * Time.deltaTime));\n    }\n}\n```\n\n\n\n**CCActionManager**\n\n用于管理飞行动作。**注**：其中这里的`Update()`不需要实现，则不要`new`，否则不能进入基类已编写好的`Update()`函数。\n\n```c#\npublic class CCActionManager : SSActionManager, ISSActionCallback \n{\n    public RoundController sceneController;\n    public CCFlyAction action;\n    public DiskFactory factory;\n\n    protected new void Start()\n    {\n        sceneController = (RoundController)Director.getInstance().currentSceneController;\n        sceneController.actionManager = this;\n        factory = Singleton<DiskFactory>.Instance;\n    }\n\n    // protected new void Update(){}\n\n    public void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int intParam = 0,\n        string strParam = null,\n        Object objectParam = null) {\n            factory.freeDisk(source.transform.gameObject);\n    }\n\n    public void MoveDisk(GameObject disk) {\n        action = CCFlyAction.GetCCFlyAction((float)disk.GetComponent<Test>().diskItem.attributes.speed);\n        RunAction(disk, action, this);\n    }\n}\n```\n\n\n\n**IUserAction & ISceneController**\n\n用户动作及场景动作的接口。两者共用一个`getHit()`来检测用户点击场景的游戏对象。\n\n```c#\npublic interface IUserAction\n{\n    void gameOver();\n    void getHit();\n    void Restart();\n}\n\npublic interface ISceneController\n{\n    void LoadResource();\n    void getHit();\n}\n```\n\n\n\n**DiskFactory**\n\n飞碟工厂。used用于存储创造出来的飞碟，free用于要销毁的飞碟。由于飞碟对象使用我们前面制作的预制件，所以只需要使用及对不同round做一些处理即可。\n\n对于第一轮，只会出现1分与2分的飞碟；第二轮只会出现1分、2分与5分的飞碟；第三轮往后会出现所有种类的飞碟。要注意飞碟加分与扣分的区别。飞碟的出生位置，随轮数增加而中心向外扩。\n\n```c#\npublic class MyException : System.Exception\n{\n    public MyException(){}\n    public MyException(string message) : base(message){}\n}\n\npublic class DiskFactory : MonoBehaviour\n{\n    List<GameObject> used;\n    List<GameObject> free;\n    System.Random rand;\n\n    void Start()\n    {\n        used = new List<GameObject>();\n        free = new List<GameObject>();\n        rand = new System.Random();\n    }\n\n    void Update(){}\n\n    public string getDiskName(int seed){\n        if(seed == 1)\n            return \"Prefabs/Bomb1a\";\n        if(seed == 2)\n            return \"Prefabs/Bomb1b\";\n        if(seed == 3)\n            return \"Prefabs/Bomb1c\";\n        if(seed == 4)\n            return \"Prefabs/Disk1a\";    \n        if(seed == 5)\n            return \"Prefabs/Disk1b\";    \n        if(seed == 6)\n            return \"Prefabs/Disk1c\";\n        if(seed == 7)\n            return \"Prefabs/Disk2a\";\n        if(seed == 8)\n            return \"Prefabs/Disk2b\";\n        if(seed == 9)\n            return \"Prefabs/Bomb5a\";\n        if(seed == 10)\n            return \"Prefabs/Disk5a\";\n        if(seed == 11)\n            return \"Prefabs/Bomb5b\";\n        if(seed == 12)\n            return \"Prefabs/Disk5b\";\n        if(seed == 13)\n            return \"Prefabs/Bomb9\";\n        if(seed == 14)\n            return \"Prefabs/Disk9\";               \n        return \"Error\";\n    }\n\n    public GameObject createDisk(int round){\n        GameObject disk;\n        int right=7;\n        if(round == 1)\n            right = 7;\n        else if(round == 2)\n            right = 10;\n        else\n            right = 14;\n            \n        if(free.Count != 0){\n            disk = free[0];\n            free.Remove(disk);\n        }\n        else{\n            string getName = getDiskName(rand.Next(1,right+1));\n            disk = GameObject.Instantiate(Resources.Load(getName, typeof(GameObject))) as GameObject;\n        }\n        int roundX = round*10;\n        int roundY = round*6;\n        int roundZ = 100+round*20;\n        disk.transform.position = new Vector3(rand.Next(-roundX,roundX+1), rand.Next(-roundY,roundY+1), rand.Next(80,roundZ));\n\n        int scale = disk.GetComponent<Test>().diskItem.attributes.size;\n        disk.transform.localScale = new Vector3(scale, scale, scale);\n        \n        used.Add(disk);\n        disk.SetActive(true);\n        Debug.Log(\"Generate disk success\");\n        return disk; \n    }\n\n    public void freeDisk(GameObject disk){\n        disk.SetActive(false);\n        if (!used.Contains(disk)) {\n            throw new MyException(\"Try to remove a item from a list which doesn't contain it.\");\n        }\n        Debug.Log(\"Free disk success\");\n        used.Remove(disk);\n        free.Add(disk);\n    }\n}\n```\n\n\n\n**RoundController**\n\n局数控制器。相当于之前的FirstController。实现了用户行为与场景行为的接口。实现了每局产生飞碟的函数。每个round会有4次发射，每次发射6个飞碟，发射间隔会根据round增加而减小。利用射线碰撞检测鼠标点击飞碟。**注**：预制件中的飞碟必须要加入collider碰撞器。否则无法检测射线碰撞。\n\n```c#\npublic class RoundController : MonoBehaviour, ISceneController, IUserAction\n{\n    int round = 1;\n    int currDisk = 0;\n    int max_round = 5;\n    float timer = 1.0f;\n    GameObject disk;\n    DiskFactory factory;\n    public CCActionManager actionManager;\n    public ScoreController scoreController;\n    public myUserGUI userGUI;\n\n    void Start()\n    {   \n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        director.currentSceneController.LoadResource();\n        gameObject.AddComponent<DiskFactory>();\n        factory = Singleton<DiskFactory>.Instance;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n\n    }\n    // No need to loadresource\n    public void LoadResource(){}\n\n    void Update()\n    {\n        if(userGUI.mode == 0)\n            return;\n        getHit();\n        gameOver();\n        if(round>max_round)\n            return;\n        timer -= Time.deltaTime;\n        if(timer<=0 ){\n            for(int i=0; i<6;i++){\n                disk = factory.createDisk(round);\n                actionManager.MoveDisk(disk);\n            }\n            currDisk+=6;\n            if(round<=max_round)\n                userGUI.round = round;\n            timer = (float)(4-round*0.5);\n            if(currDisk%24 == 0){\n                round++;\n                timer = 10.0F;\n            }\n        }\n    }\n\n    public void gameOver()\n    {\n        if (round > max_round && actionManager.RemainActionCount() == 0)\n            userGUI.gameMessage = \"Game Over!\";\n    }\n\n    public void getHit()\n    {\n        // 按钮设置 名为“Fire1”监听鼠标点击\n        if (Input.GetButtonDown(\"Fire1\")) {\n            Debug.Log(\"Fire pressed\");\n\t\t\tCamera ca = Camera.main;\n\t\t\tRay ray = ca.ScreenPointToRay(Input.mousePosition);\n\n\t\t\tRaycastHit hit;\n\t\t\tif (Physics.Raycast(ray, out hit)) {\n                Debug.Log(hit.transform.gameObject.name);\n                scoreController.Record(hit.transform.gameObject);\n                hit.transform.gameObject.SetActive(false);\n\t\t\t}\n        }\n    }\n\n    public void Restart(){\n        round = 1;\n        currDisk = 0;\n        timer = 1.0F;\n        scoreController.Reset();\n        userGUI.Reset();\n    }\n    \n}\n```\n\n\n\n**ScoreController**\n\n分数控制器。用于简单的计分功能。由于预制件中扣分的飞碟的score属性已经为负，此处的`Record`函数的score直接加就可以了。\n\n```c#\npublic class ScoreController : MonoBehaviour\n{\n    public int score;\n    public RoundController roundController;\n    public myUserGUI userGUI;\n    void Start()\n    {\n        roundController = (RoundController)Director.getInstance().currentSceneController;\n        roundController.scoreController = this;\n        userGUI = this.gameObject.GetComponent<myUserGUI>();\n    }\n\n    public void Record(GameObject disk){\n        score += disk.GetComponent<Test>().diskItem.attributes.score;\n        userGUI.score = score;\n    }\n\n    public void Reset(){\n        score = 0;\n    }\n}\n```\n\n\n\n**myUserGUI**\n\n用户界面。分为主界面`mainMenu`和游玩界面`gameStart`。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    public int mode;\n    public int score;\n    public int round;\n    public string gameMessage;\n    private IUserAction action;\n    public GUIStyle titleStyle, textStyle;\n    private int menu_w = Screen.width/5, menu_h = Screen.height/5;\n\n    void Start()\n    {\n        mode = 0;\n        gameMessage = \"\";\n        action = Director.getInstance().currentSceneController as IUserAction;\n    \n        titleStyle = new GUIStyle();\n        titleStyle.normal.textColor = Color.white;\n        titleStyle.normal.background = null;\n        titleStyle.fontSize = 50;\n        titleStyle.alignment = TextAnchor.MiddleCenter;\n\n        textStyle = new GUIStyle();\n        textStyle.normal.textColor = Color.white;\n        textStyle.normal.background = null;\n        textStyle.fontSize = 20;\n        textStyle.alignment = TextAnchor.MiddleCenter;\n\n    }\n\n    void Update(){}\n\n    void OnGUI()\n    {\n        GUI.skin.button.fontSize = 35;\n        switch(mode){\n            case 0:\n                mainMenu();\n                break;\n            case 1:\n                gameStart();\n                break;\n        }\n    }\n\n    void mainMenu()\n    {\n        GUI.Label(new Rect(Screen.width / 2 - menu_w * 0.5f, Screen.height * 0.1f, menu_w, menu_h), \"Hit UFO\", titleStyle);\n        bool button = GUI.Button(new Rect(Screen.width / 2 - menu_w * 0.5f, Screen.height * 3 / 7, menu_w, menu_h), \"Start\");\n        if (button) {\n            mode = 1;\n        }\n    }\n\n    void gameStart()\n    {\n        GUI.Label(new Rect(Screen.width/2-100, Screen.height/2-60, 200, 50), gameMessage, titleStyle);\n        GUI.Label(new Rect(0, 0, 100, 50), \"Score: \" + score, textStyle);\n        GUI.Label(new Rect(Screen.width-100, 0, 100, 50), \"Round: \" + round, textStyle);\n        if (gameMessage == \"Game Over!\") {\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-100, Screen.height/2, 200, 50), \"Restart\")) {\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t}\n    }\n\n    public void Reset()\n    {\n        score = 0;\n        round = 1;\n        mode = 0;\n        gameMessage = \"\";\n    }\n    \n}\n```\n\n\n\n> 2022.11.13\t\t\t\tCauchy","source":"_posts/2022/Homework5/Homework5.md","raw":"---\nlayout: post\ntitle:  \"HW5: 与游戏世界交互\"\ndate:   2022-11-13 14:00:00 +0800\ntags: \n- unity\n- singleton\ncategories: Game\nsubtitle: '与游戏世界交互'\n---\n\n> 作业简介：\n>\n> 1.自定义组件：涉及SciptableObject\n>\n> 2.编程实践（Hit UFO）：涉及工厂模式\n\n<!--more-->\n\n:gem:\n\n### 一、自定义组件\n\n* 用自定义组件定义几种飞碟，做成预制\n\n这里借用资源商店的Sets - Gems里的prefab（都是宝石呀）作为飞碟原型。\n\n先利用 ScriptableObject 设定飞碟的属性\n\n```c#\n[System.Serializable]\npublic class Attributes{\n    [Tooltip(\"大小\")]\n    public int size;\n    [Tooltip(\"速度\")]\n    public int speed;\n    [Tooltip(\"得分\")]\n    public int score;\n}\n\n[CreateAssetMenu(fileName = \"DiskItem\", menuName = \"(ScritableObject)DiskItem\")]\npublic class DiskItem : ScriptableObject\n{\n    public string Name;\n    public string Desc;\n    [Tooltip(\"飞碟属性\")]\n    public Attributes attributes;\n}\n```\n\n分数与对应的属性如下表所示:\n\n| 分数 | 大小 | 速度 |\n| ---- | ---- | ---- |\n| 1    | 2    | 15   |\n| 2    | 1    | 17   |\n| 5    | 1    | 20   |\n| 9    | 1    | 35   |\n\n形状颜色与之匹配的分数规则如下图所示：\n\n![01](../../../assets/game/1113/01.png)\n\n再利用Monobehavior脚本为各飞碟附上相应属性\n\n```c#\npublic class Test : MonoBehaviour\n{\n    public DiskItem diskItem;\n}\n```\n\n这样，我们自定义的预制件就做好了。\n\n:space_invader:\n\n### 二、编程实践\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets\n\n* 编写一个简单的鼠标打飞碟游戏\n    * 游戏有多个round，每个round包括数次trial；\n    * 每个trial的飞碟属性（色彩、大小、发射位置、速度、角度）及同时出现的个数都可能不同；\n    * 每个trial的飞碟有随机性，总体难度随round上升；\n    * 鼠标点中得分，得分规则按飞碟属性不同计算，规则可自定义。\n* 要求：\n    * 使用带缓存的工厂模式管理不同飞碟的生产与回收，该工厂必须是场景单实例的！具体实现可参考资源Singleton模板类；\n    * 尽可能使用前面MVC结构实现人机交互与游戏模型分离。\n\n\n\n#### 简单工厂\n\n简单工厂又称为工厂方法，即类一个方法能够得到一个对象实例，使用者不需要知道该实例如何构建、初始化等细节。\n\n* 游戏对象的创建与销毁高成本，必须减少销毁次数。\n* 屏蔽创建与销毁的业务逻辑，是程序易于扩展。\n\n在Unity中，**工厂方法+单实例+对象池** 通常都是同时一起用。这里给出一个设计例子：\n\n![02](../../../assets/game/1113/02.png)\n\n其中：\n\n* DiskFactory 类是一个单实例类，用钱买场景单实例创建\n* DiskFactory 类有工厂方法 GetDisk 产生飞碟，有回收方法 FreeDisk\n* DiskFactory 使用模板模式根据预制和规则制作飞碟\n* 对象模板包括飞碟对象与飞碟数据\n\n\n\n#### 实现效果\n\n![04](../../../assets/game/1113/04.gif)\n\n\n\n#### 代码框架\n\n![03](../../../assets/game/1113/03.png)\n\n其中标注了**固定模板**的类是基本与前几次作业使用的代码一致，除了`Singleton`是本次作业新增的。\n\n`Singleton`代码如下：\n\n```c#\npublic class Singleton<T> : MonoBehaviour where T : MonoBehaviour\n{\n    protected static T instance;\n\n    public static T Instance{\n        get{\n            if(instance == null){\n                instance = (T)FindObjectOfType(typeof(T));\n                if(instance == null){\n                    Debug.LogError(\n                        \"An instance of \"+\n                        typeof(T)+\n                        \" is needed in the scene, but there is none.\"\n                    );\n                }\n            }\n            return instance;\n        }\n    }\n}\n```\n\n\n\n#### 主要代码\n\n**CCFlyAction**\n\n用于飞行动作。通过改变游戏对象position的z轴来实现其移动，也加入了游戏对象自己旋转。当z轴坐标不大于-20时，理解为飞出屏幕，销毁处理。\n\n```c#\npublic class CCFlyAction : SSAction\n{\n    public float speed;\n    public static CCFlyAction GetCCFlyAction(float s){\n        CCFlyAction action = ScriptableObject.CreateInstance<CCFlyAction>();\n        action.speed = s;\n        return action;\n    }\n\n    public override void Start(){}\n\n    public override void Update()\n    {\n        //飞碟已经被\"销毁\"\n        if (this.transform.gameObject.activeSelf == false) { \n            Debug.Log(\"Hit Destroy\");\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n        if(this.transform.position.z <= -20){\n            Debug.Log(\"Out Destroy\");\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n\n        transform.position -= new Vector3(0, 0, speed * Time.deltaTime);\n        transform.Rotate(new Vector3(0, 10 * Time.deltaTime, 30 * Time.deltaTime));\n    }\n}\n```\n\n\n\n**CCActionManager**\n\n用于管理飞行动作。**注**：其中这里的`Update()`不需要实现，则不要`new`，否则不能进入基类已编写好的`Update()`函数。\n\n```c#\npublic class CCActionManager : SSActionManager, ISSActionCallback \n{\n    public RoundController sceneController;\n    public CCFlyAction action;\n    public DiskFactory factory;\n\n    protected new void Start()\n    {\n        sceneController = (RoundController)Director.getInstance().currentSceneController;\n        sceneController.actionManager = this;\n        factory = Singleton<DiskFactory>.Instance;\n    }\n\n    // protected new void Update(){}\n\n    public void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int intParam = 0,\n        string strParam = null,\n        Object objectParam = null) {\n            factory.freeDisk(source.transform.gameObject);\n    }\n\n    public void MoveDisk(GameObject disk) {\n        action = CCFlyAction.GetCCFlyAction((float)disk.GetComponent<Test>().diskItem.attributes.speed);\n        RunAction(disk, action, this);\n    }\n}\n```\n\n\n\n**IUserAction & ISceneController**\n\n用户动作及场景动作的接口。两者共用一个`getHit()`来检测用户点击场景的游戏对象。\n\n```c#\npublic interface IUserAction\n{\n    void gameOver();\n    void getHit();\n    void Restart();\n}\n\npublic interface ISceneController\n{\n    void LoadResource();\n    void getHit();\n}\n```\n\n\n\n**DiskFactory**\n\n飞碟工厂。used用于存储创造出来的飞碟，free用于要销毁的飞碟。由于飞碟对象使用我们前面制作的预制件，所以只需要使用及对不同round做一些处理即可。\n\n对于第一轮，只会出现1分与2分的飞碟；第二轮只会出现1分、2分与5分的飞碟；第三轮往后会出现所有种类的飞碟。要注意飞碟加分与扣分的区别。飞碟的出生位置，随轮数增加而中心向外扩。\n\n```c#\npublic class MyException : System.Exception\n{\n    public MyException(){}\n    public MyException(string message) : base(message){}\n}\n\npublic class DiskFactory : MonoBehaviour\n{\n    List<GameObject> used;\n    List<GameObject> free;\n    System.Random rand;\n\n    void Start()\n    {\n        used = new List<GameObject>();\n        free = new List<GameObject>();\n        rand = new System.Random();\n    }\n\n    void Update(){}\n\n    public string getDiskName(int seed){\n        if(seed == 1)\n            return \"Prefabs/Bomb1a\";\n        if(seed == 2)\n            return \"Prefabs/Bomb1b\";\n        if(seed == 3)\n            return \"Prefabs/Bomb1c\";\n        if(seed == 4)\n            return \"Prefabs/Disk1a\";    \n        if(seed == 5)\n            return \"Prefabs/Disk1b\";    \n        if(seed == 6)\n            return \"Prefabs/Disk1c\";\n        if(seed == 7)\n            return \"Prefabs/Disk2a\";\n        if(seed == 8)\n            return \"Prefabs/Disk2b\";\n        if(seed == 9)\n            return \"Prefabs/Bomb5a\";\n        if(seed == 10)\n            return \"Prefabs/Disk5a\";\n        if(seed == 11)\n            return \"Prefabs/Bomb5b\";\n        if(seed == 12)\n            return \"Prefabs/Disk5b\";\n        if(seed == 13)\n            return \"Prefabs/Bomb9\";\n        if(seed == 14)\n            return \"Prefabs/Disk9\";               \n        return \"Error\";\n    }\n\n    public GameObject createDisk(int round){\n        GameObject disk;\n        int right=7;\n        if(round == 1)\n            right = 7;\n        else if(round == 2)\n            right = 10;\n        else\n            right = 14;\n            \n        if(free.Count != 0){\n            disk = free[0];\n            free.Remove(disk);\n        }\n        else{\n            string getName = getDiskName(rand.Next(1,right+1));\n            disk = GameObject.Instantiate(Resources.Load(getName, typeof(GameObject))) as GameObject;\n        }\n        int roundX = round*10;\n        int roundY = round*6;\n        int roundZ = 100+round*20;\n        disk.transform.position = new Vector3(rand.Next(-roundX,roundX+1), rand.Next(-roundY,roundY+1), rand.Next(80,roundZ));\n\n        int scale = disk.GetComponent<Test>().diskItem.attributes.size;\n        disk.transform.localScale = new Vector3(scale, scale, scale);\n        \n        used.Add(disk);\n        disk.SetActive(true);\n        Debug.Log(\"Generate disk success\");\n        return disk; \n    }\n\n    public void freeDisk(GameObject disk){\n        disk.SetActive(false);\n        if (!used.Contains(disk)) {\n            throw new MyException(\"Try to remove a item from a list which doesn't contain it.\");\n        }\n        Debug.Log(\"Free disk success\");\n        used.Remove(disk);\n        free.Add(disk);\n    }\n}\n```\n\n\n\n**RoundController**\n\n局数控制器。相当于之前的FirstController。实现了用户行为与场景行为的接口。实现了每局产生飞碟的函数。每个round会有4次发射，每次发射6个飞碟，发射间隔会根据round增加而减小。利用射线碰撞检测鼠标点击飞碟。**注**：预制件中的飞碟必须要加入collider碰撞器。否则无法检测射线碰撞。\n\n```c#\npublic class RoundController : MonoBehaviour, ISceneController, IUserAction\n{\n    int round = 1;\n    int currDisk = 0;\n    int max_round = 5;\n    float timer = 1.0f;\n    GameObject disk;\n    DiskFactory factory;\n    public CCActionManager actionManager;\n    public ScoreController scoreController;\n    public myUserGUI userGUI;\n\n    void Start()\n    {   \n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        director.currentSceneController.LoadResource();\n        gameObject.AddComponent<DiskFactory>();\n        factory = Singleton<DiskFactory>.Instance;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n\n    }\n    // No need to loadresource\n    public void LoadResource(){}\n\n    void Update()\n    {\n        if(userGUI.mode == 0)\n            return;\n        getHit();\n        gameOver();\n        if(round>max_round)\n            return;\n        timer -= Time.deltaTime;\n        if(timer<=0 ){\n            for(int i=0; i<6;i++){\n                disk = factory.createDisk(round);\n                actionManager.MoveDisk(disk);\n            }\n            currDisk+=6;\n            if(round<=max_round)\n                userGUI.round = round;\n            timer = (float)(4-round*0.5);\n            if(currDisk%24 == 0){\n                round++;\n                timer = 10.0F;\n            }\n        }\n    }\n\n    public void gameOver()\n    {\n        if (round > max_round && actionManager.RemainActionCount() == 0)\n            userGUI.gameMessage = \"Game Over!\";\n    }\n\n    public void getHit()\n    {\n        // 按钮设置 名为“Fire1”监听鼠标点击\n        if (Input.GetButtonDown(\"Fire1\")) {\n            Debug.Log(\"Fire pressed\");\n\t\t\tCamera ca = Camera.main;\n\t\t\tRay ray = ca.ScreenPointToRay(Input.mousePosition);\n\n\t\t\tRaycastHit hit;\n\t\t\tif (Physics.Raycast(ray, out hit)) {\n                Debug.Log(hit.transform.gameObject.name);\n                scoreController.Record(hit.transform.gameObject);\n                hit.transform.gameObject.SetActive(false);\n\t\t\t}\n        }\n    }\n\n    public void Restart(){\n        round = 1;\n        currDisk = 0;\n        timer = 1.0F;\n        scoreController.Reset();\n        userGUI.Reset();\n    }\n    \n}\n```\n\n\n\n**ScoreController**\n\n分数控制器。用于简单的计分功能。由于预制件中扣分的飞碟的score属性已经为负，此处的`Record`函数的score直接加就可以了。\n\n```c#\npublic class ScoreController : MonoBehaviour\n{\n    public int score;\n    public RoundController roundController;\n    public myUserGUI userGUI;\n    void Start()\n    {\n        roundController = (RoundController)Director.getInstance().currentSceneController;\n        roundController.scoreController = this;\n        userGUI = this.gameObject.GetComponent<myUserGUI>();\n    }\n\n    public void Record(GameObject disk){\n        score += disk.GetComponent<Test>().diskItem.attributes.score;\n        userGUI.score = score;\n    }\n\n    public void Reset(){\n        score = 0;\n    }\n}\n```\n\n\n\n**myUserGUI**\n\n用户界面。分为主界面`mainMenu`和游玩界面`gameStart`。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    public int mode;\n    public int score;\n    public int round;\n    public string gameMessage;\n    private IUserAction action;\n    public GUIStyle titleStyle, textStyle;\n    private int menu_w = Screen.width/5, menu_h = Screen.height/5;\n\n    void Start()\n    {\n        mode = 0;\n        gameMessage = \"\";\n        action = Director.getInstance().currentSceneController as IUserAction;\n    \n        titleStyle = new GUIStyle();\n        titleStyle.normal.textColor = Color.white;\n        titleStyle.normal.background = null;\n        titleStyle.fontSize = 50;\n        titleStyle.alignment = TextAnchor.MiddleCenter;\n\n        textStyle = new GUIStyle();\n        textStyle.normal.textColor = Color.white;\n        textStyle.normal.background = null;\n        textStyle.fontSize = 20;\n        textStyle.alignment = TextAnchor.MiddleCenter;\n\n    }\n\n    void Update(){}\n\n    void OnGUI()\n    {\n        GUI.skin.button.fontSize = 35;\n        switch(mode){\n            case 0:\n                mainMenu();\n                break;\n            case 1:\n                gameStart();\n                break;\n        }\n    }\n\n    void mainMenu()\n    {\n        GUI.Label(new Rect(Screen.width / 2 - menu_w * 0.5f, Screen.height * 0.1f, menu_w, menu_h), \"Hit UFO\", titleStyle);\n        bool button = GUI.Button(new Rect(Screen.width / 2 - menu_w * 0.5f, Screen.height * 3 / 7, menu_w, menu_h), \"Start\");\n        if (button) {\n            mode = 1;\n        }\n    }\n\n    void gameStart()\n    {\n        GUI.Label(new Rect(Screen.width/2-100, Screen.height/2-60, 200, 50), gameMessage, titleStyle);\n        GUI.Label(new Rect(0, 0, 100, 50), \"Score: \" + score, textStyle);\n        GUI.Label(new Rect(Screen.width-100, 0, 100, 50), \"Round: \" + round, textStyle);\n        if (gameMessage == \"Game Over!\") {\n\t\t\tif (GUI.Button(new Rect(Screen.width/2-100, Screen.height/2, 200, 50), \"Restart\")) {\n\t\t\t\taction.Restart ();\n\t\t\t}\n\t\t}\n    }\n\n    public void Reset()\n    {\n        score = 0;\n        round = 1;\n        mode = 0;\n        gameMessage = \"\";\n    }\n    \n}\n```\n\n\n\n> 2022.11.13\t\t\t\tCauchy","slug":"2022/Homework5/Homework5","published":1,"updated":"2023-05-19T07:05:30.680Z","comments":1,"photos":[],"link":"","_id":"clhudj1f800077g846sb1hhyr","content":"<blockquote>\n<p>作业简介：</p>\n<p>1.自定义组件：涉及SciptableObject</p>\n<p>2.编程实践（Hit UFO）：涉及工厂模式</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>💎</p>\n<h3 id=\"一、自定义组件\">一、自定义组件</h3>\n<ul>\n<li>用自定义组件定义几种飞碟，做成预制</li>\n</ul>\n<p>这里借用资源商店的Sets - Gems里的prefab（都是宝石呀）作为飞碟原型。</p>\n<p>先利用 ScriptableObject 设定飞碟的属性</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\">[<span class=\"hljs-meta\">System.Serializable</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Attributes</span>&#123;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;大小&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> size;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;速度&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> speed;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;得分&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>&#125;<br><br>[<span class=\"hljs-meta\">CreateAssetMenu(fileName = <span class=\"hljs-string\">&quot;DiskItem&quot;</span>, menuName = <span class=\"hljs-string\">&quot;(ScritableObject)DiskItem&quot;</span>)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DiskItem</span> : <span class=\"hljs-title\">ScriptableObject</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Name;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Desc;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;飞碟属性&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> Attributes attributes;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>分数与对应的属性如下表所示:</p>\n<table>\n<thead>\n<tr>\n<th>分数</th>\n<th>大小</th>\n<th>速度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>15</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>17</td>\n</tr>\n<tr>\n<td>5</td>\n<td>1</td>\n<td>20</td>\n</tr>\n<tr>\n<td>9</td>\n<td>1</td>\n<td>35</td>\n</tr>\n</tbody>\n</table>\n<p>形状颜色与之匹配的分数规则如下图所示：</p>\n<p><img src=\"../../../assets/game/1113/01.png\" alt=\"01\"></p>\n<p>再利用Monobehavior脚本为各飞碟附上相应属性</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> DiskItem diskItem;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这样，我们自定义的预制件就做好了。</p>\n<p>👾</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets</a></p>\n<ul>\n<li>编写一个简单的鼠标打飞碟游戏\n<ul>\n<li>游戏有多个round，每个round包括数次trial；</li>\n<li>每个trial的飞碟属性（色彩、大小、发射位置、速度、角度）及同时出现的个数都可能不同；</li>\n<li>每个trial的飞碟有随机性，总体难度随round上升；</li>\n<li>鼠标点中得分，得分规则按飞碟属性不同计算，规则可自定义。</li>\n</ul>\n</li>\n<li>要求：\n<ul>\n<li>使用带缓存的工厂模式管理不同飞碟的生产与回收，该工厂必须是场景单实例的！具体实现可参考资源Singleton模板类；</li>\n<li>尽可能使用前面MVC结构实现人机交互与游戏模型分离。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"简单工厂\">简单工厂</h4>\n<p>简单工厂又称为工厂方法，即类一个方法能够得到一个对象实例，使用者不需要知道该实例如何构建、初始化等细节。</p>\n<ul>\n<li>游戏对象的创建与销毁高成本，必须减少销毁次数。</li>\n<li>屏蔽创建与销毁的业务逻辑，是程序易于扩展。</li>\n</ul>\n<p>在Unity中，<strong>工厂方法+单实例+对象池</strong> 通常都是同时一起用。这里给出一个设计例子：</p>\n<p><img src=\"../../../assets/game/1113/02.png\" alt=\"02\"></p>\n<p>其中：</p>\n<ul>\n<li>DiskFactory 类是一个单实例类，用钱买场景单实例创建</li>\n<li>DiskFactory 类有工厂方法 GetDisk 产生飞碟，有回收方法 FreeDisk</li>\n<li>DiskFactory 使用模板模式根据预制和规则制作飞碟</li>\n<li>对象模板包括飞碟对象与飞碟数据</li>\n</ul>\n<h4 id=\"实现效果\">实现效果</h4>\n<p><img src=\"../../../assets/game/1113/04.gif\" alt=\"04\"></p>\n<h4 id=\"代码框架\">代码框架</h4>\n<p><img src=\"../../../assets/game/1113/03.png\" alt=\"03\"></p>\n<p>其中标注了<strong>固定模板</strong>的类是基本与前几次作业使用的代码一致，除了<code>Singleton</code>是本次作业新增的。</p>\n<p><code>Singleton</code>代码如下：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singleton</span>&lt;<span class=\"hljs-title\">T</span>&gt; : <span class=\"hljs-title\">MonoBehaviour</span> <span class=\"hljs-keyword\">where</span> <span class=\"hljs-title\">T</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> T instance;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> T Instance&#123;<br>        <span class=\"hljs-keyword\">get</span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(instance == <span class=\"hljs-literal\">null</span>)&#123;<br>                instance = (T)FindObjectOfType(<span class=\"hljs-keyword\">typeof</span>(T));<br>                <span class=\"hljs-keyword\">if</span>(instance == <span class=\"hljs-literal\">null</span>)&#123;<br>                    Debug.LogError(<br>                        <span class=\"hljs-string\">&quot;An instance of &quot;</span>+<br>                        <span class=\"hljs-keyword\">typeof</span>(T)+<br>                        <span class=\"hljs-string\">&quot; is needed in the scene, but there is none.&quot;</span><br>                    );<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> instance;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"主要代码\">主要代码</h4>\n<p><strong>CCFlyAction</strong></p>\n<p>用于飞行动作。通过改变游戏对象position的z轴来实现其移动，也加入了游戏对象自己旋转。当z轴坐标不大于-20时，理解为飞出屏幕，销毁处理。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> speed;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCFlyAction <span class=\"hljs-title\">GetCCFlyAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> s</span>)</span>&#123;<br>        CCFlyAction action = ScriptableObject.CreateInstance&lt;CCFlyAction&gt;();<br>        action.speed = s;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//飞碟已经被&quot;销毁&quot;</span><br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.transform.gameObject.activeSelf == <span class=\"hljs-literal\">false</span>) &#123; <br>            Debug.Log(<span class=\"hljs-string\">&quot;Hit Destroy&quot;</span>);<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">this</span>.transform.position.z &lt;= <span class=\"hljs-number\">-20</span>)&#123;<br>            Debug.Log(<span class=\"hljs-string\">&quot;Out Destroy&quot;</span>);<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br><br>        transform.position -= <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, speed * Time.deltaTime);<br>        transform.Rotate(<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span> * Time.deltaTime, <span class=\"hljs-number\">30</span> * Time.deltaTime));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>CCActionManager</strong></p>\n<p>用于管理飞行动作。<strong>注</strong>：其中这里的<code>Update()</code>不需要实现，则不要<code>new</code>，否则不能进入基类已编写好的<code>Update()</code>函数。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCActionManager</span> : <span class=\"hljs-title\">SSActionManager</span>, <span class=\"hljs-title\">ISSActionCallback</span> <br>&#123;<br>    <span class=\"hljs-keyword\">public</span> RoundController sceneController;<br>    <span class=\"hljs-keyword\">public</span> CCFlyAction action;<br>    <span class=\"hljs-keyword\">public</span> DiskFactory factory;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        sceneController = (RoundController)Director.getInstance().currentSceneController;<br>        sceneController.actionManager = <span class=\"hljs-keyword\">this</span>;<br>        factory = Singleton&lt;DiskFactory&gt;.Instance;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// protected new void Update()&#123;&#125;</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span> &#123;<br>            factory.freeDisk(source.transform.gameObject);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveDisk</span>(<span class=\"hljs-params\">GameObject disk</span>)</span> &#123;<br>        action = CCFlyAction.GetCCFlyAction((<span class=\"hljs-built_in\">float</span>)disk.GetComponent&lt;Test&gt;().diskItem.attributes.speed);<br>        RunAction(disk, action, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>IUserAction &amp; ISceneController</strong></p>\n<p>用户动作及场景动作的接口。两者共用一个<code>getHit()</code>来检测用户点击场景的游戏对象。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameOver</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>DiskFactory</strong></p>\n<p>飞碟工厂。used用于存储创造出来的飞碟，free用于要销毁的飞碟。由于飞碟对象使用我们前面制作的预制件，所以只需要使用及对不同round做一些处理即可。</p>\n<p>对于第一轮，只会出现1分与2分的飞碟；第二轮只会出现1分、2分与5分的飞碟；第三轮往后会出现所有种类的飞碟。要注意飞碟加分与扣分的区别。飞碟的出生位置，随轮数增加而中心向外扩。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyException</span> : <span class=\"hljs-title\">System.Exception</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyException</span>()</span>&#123;&#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyException</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> message</span>) : <span class=\"hljs-title\">base</span>(<span class=\"hljs-params\">message</span>)</span>&#123;&#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DiskFactory</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    List&lt;GameObject&gt; used;<br>    List&lt;GameObject&gt; free;<br>    System.Random rand;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        used = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        free = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        rand = <span class=\"hljs-keyword\">new</span> System.Random();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDiskName</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> seed</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">1</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">2</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">3</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1c&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">4</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1a&quot;</span>;    <br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">5</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1b&quot;</span>;    <br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">6</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1c&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">7</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk2a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">8</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk2b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">9</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb5a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">10</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk5a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">11</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb5b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">12</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk5b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">13</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb9&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">14</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk9&quot;</span>;               <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Error&quot;</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">createDisk</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> round</span>)</span>&#123;<br>        GameObject disk;<br>        <span class=\"hljs-built_in\">int</span> right=<span class=\"hljs-number\">7</span>;<br>        <span class=\"hljs-keyword\">if</span>(round == <span class=\"hljs-number\">1</span>)<br>            right = <span class=\"hljs-number\">7</span>;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(round == <span class=\"hljs-number\">2</span>)<br>            right = <span class=\"hljs-number\">10</span>;<br>        <span class=\"hljs-keyword\">else</span><br>            right = <span class=\"hljs-number\">14</span>;<br>            <br>        <span class=\"hljs-keyword\">if</span>(free.Count != <span class=\"hljs-number\">0</span>)&#123;<br>            disk = free[<span class=\"hljs-number\">0</span>];<br>            free.Remove(disk);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-built_in\">string</span> getName = getDiskName(rand.Next(<span class=\"hljs-number\">1</span>,right+<span class=\"hljs-number\">1</span>));<br>            disk = GameObject.Instantiate(Resources.Load(getName, <span class=\"hljs-keyword\">typeof</span>(GameObject))) <span class=\"hljs-keyword\">as</span> GameObject;<br>        &#125;<br>        <span class=\"hljs-built_in\">int</span> roundX = round*<span class=\"hljs-number\">10</span>;<br>        <span class=\"hljs-built_in\">int</span> roundY = round*<span class=\"hljs-number\">6</span>;<br>        <span class=\"hljs-built_in\">int</span> roundZ = <span class=\"hljs-number\">100</span>+round*<span class=\"hljs-number\">20</span>;<br>        disk.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(rand.Next(-roundX,roundX+<span class=\"hljs-number\">1</span>), rand.Next(-roundY,roundY+<span class=\"hljs-number\">1</span>), rand.Next(<span class=\"hljs-number\">80</span>,roundZ));<br><br>        <span class=\"hljs-built_in\">int</span> scale = disk.GetComponent&lt;Test&gt;().diskItem.attributes.size;<br>        disk.transform.localScale = <span class=\"hljs-keyword\">new</span> Vector3(scale, scale, scale);<br>        <br>        used.Add(disk);<br>        disk.SetActive(<span class=\"hljs-literal\">true</span>);<br>        Debug.Log(<span class=\"hljs-string\">&quot;Generate disk success&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> disk; <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">freeDisk</span>(<span class=\"hljs-params\">GameObject disk</span>)</span>&#123;<br>        disk.SetActive(<span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (!used.Contains(disk)) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> MyException(<span class=\"hljs-string\">&quot;Try to remove a item from a list which doesn&#x27;t contain it.&quot;</span>);<br>        &#125;<br>        Debug.Log(<span class=\"hljs-string\">&quot;Free disk success&quot;</span>);<br>        used.Remove(disk);<br>        free.Add(disk);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>RoundController</strong></p>\n<p>局数控制器。相当于之前的FirstController。实现了用户行为与场景行为的接口。实现了每局产生飞碟的函数。每个round会有4次发射，每次发射6个飞碟，发射间隔会根据round增加而减小。利用射线碰撞检测鼠标点击飞碟。<strong>注</strong>：预制件中的飞碟必须要加入collider碰撞器。否则无法检测射线碰撞。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RoundController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-built_in\">int</span> round = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-built_in\">int</span> currDisk = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-built_in\">int</span> max_round = <span class=\"hljs-number\">5</span>;<br>    <span class=\"hljs-built_in\">float</span> timer = <span class=\"hljs-number\">1.0f</span>;<br>    GameObject disk;<br>    DiskFactory factory;<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;   <br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        director.currentSceneController.LoadResource();<br>        gameObject.AddComponent&lt;DiskFactory&gt;();<br>        factory = Singleton&lt;DiskFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br><br>    &#125;<br>    <span class=\"hljs-comment\">// No need to loadresource</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(userGUI.mode == <span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>        getHit();<br>        gameOver();<br>        <span class=\"hljs-keyword\">if</span>(round&gt;max_round)<br>            <span class=\"hljs-keyword\">return</span>;<br>        timer -= Time.deltaTime;<br>        <span class=\"hljs-keyword\">if</span>(timer&lt;=<span class=\"hljs-number\">0</span> )&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">6</span>;i++)&#123;<br>                disk = factory.createDisk(round);<br>                actionManager.MoveDisk(disk);<br>            &#125;<br>            currDisk+=<span class=\"hljs-number\">6</span>;<br>            <span class=\"hljs-keyword\">if</span>(round&lt;=max_round)<br>                userGUI.round = round;<br>            timer = (<span class=\"hljs-built_in\">float</span>)(<span class=\"hljs-number\">4</span>-round*<span class=\"hljs-number\">0.5</span>);<br>            <span class=\"hljs-keyword\">if</span>(currDisk%<span class=\"hljs-number\">24</span> == <span class=\"hljs-number\">0</span>)&#123;<br>                round++;<br>                timer = <span class=\"hljs-number\">10.0F</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (round &gt; max_round &amp;&amp; actionManager.RemainActionCount() == <span class=\"hljs-number\">0</span>)<br>            userGUI.gameMessage = <span class=\"hljs-string\">&quot;Game Over!&quot;</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">// 按钮设置 名为“Fire1”监听鼠标点击</span><br>        <span class=\"hljs-keyword\">if</span> (Input.GetButtonDown(<span class=\"hljs-string\">&quot;Fire1&quot;</span>)) &#123;<br>            Debug.Log(<span class=\"hljs-string\">&quot;Fire pressed&quot;</span>);<br>\t\t\tCamera ca = Camera.main;<br>\t\t\tRay ray = ca.ScreenPointToRay(Input.mousePosition);<br><br>\t\t\tRaycastHit hit;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (Physics.Raycast(ray, <span class=\"hljs-keyword\">out</span> hit)) &#123;<br>                Debug.Log(hit.transform.gameObject.name);<br>                scoreController.Record(hit.transform.gameObject);<br>                hit.transform.gameObject.SetActive(<span class=\"hljs-literal\">false</span>);<br>\t\t\t&#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        round = <span class=\"hljs-number\">1</span>;<br>        currDisk = <span class=\"hljs-number\">0</span>;<br>        timer = <span class=\"hljs-number\">1.0F</span>;<br>        scoreController.Reset();<br>        userGUI.Reset();<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>ScoreController</strong></p>\n<p>分数控制器。用于简单的计分功能。由于预制件中扣分的飞碟的score属性已经为负，此处的<code>Record</code>函数的score直接加就可以了。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ScoreController</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>    <span class=\"hljs-keyword\">public</span> RoundController roundController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        roundController = (RoundController)Director.getInstance().currentSceneController;<br>        roundController.scoreController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;myUserGUI&gt;();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Record</span>(<span class=\"hljs-params\">GameObject disk</span>)</span>&#123;<br>        score += disk.GetComponent&lt;Test&gt;().diskItem.attributes.score;<br>        userGUI.score = score;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>myUserGUI</strong></p>\n<p>用户界面。分为主界面<code>mainMenu</code>和游玩界面<code>gameStart</code>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> mode;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> round;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> gameMessage;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">public</span> GUIStyle titleStyle, textStyle;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> menu_w = Screen.width/<span class=\"hljs-number\">5</span>, menu_h = Screen.height/<span class=\"hljs-number\">5</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        mode = <span class=\"hljs-number\">0</span>;<br>        gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>    <br>        titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>        titleStyle.normal.textColor = Color.white;<br>        titleStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        titleStyle.fontSize = <span class=\"hljs-number\">50</span>;<br>        titleStyle.alignment = TextAnchor.MiddleCenter;<br><br>        textStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>        textStyle.normal.textColor = Color.white;<br>        textStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        textStyle.fontSize = <span class=\"hljs-number\">20</span>;<br>        textStyle.alignment = TextAnchor.MiddleCenter;<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span><br>    &#123;<br>        GUI.skin.button.fontSize = <span class=\"hljs-number\">35</span>;<br>        <span class=\"hljs-keyword\">switch</span>(mode)&#123;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                mainMenu();<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">1</span>:<br>                gameStart();<br>                <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">mainMenu</span>()</span><br>    &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - menu_w * <span class=\"hljs-number\">0.5f</span>, Screen.height * <span class=\"hljs-number\">0.1f</span>, menu_w, menu_h), <span class=\"hljs-string\">&quot;Hit UFO&quot;</span>, titleStyle);<br>        <span class=\"hljs-built_in\">bool</span> button = GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - menu_w * <span class=\"hljs-number\">0.5f</span>, Screen.height * <span class=\"hljs-number\">3</span> / <span class=\"hljs-number\">7</span>, menu_w, menu_h), <span class=\"hljs-string\">&quot;Start&quot;</span>);<br>        <span class=\"hljs-keyword\">if</span> (button) &#123;<br>            mode = <span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameStart</span>()</span><br>    &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-100</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-60</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), gameMessage, titleStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Score: &quot;</span> + score, textStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width<span class=\"hljs-number\">-100</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Round: &quot;</span> + round, textStyle);<br>        <span class=\"hljs-keyword\">if</span> (gameMessage == <span class=\"hljs-string\">&quot;Game Over!&quot;</span>) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-100</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>)) &#123;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span><br>    &#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>        round = <span class=\"hljs-number\">1</span>;<br>        mode = <span class=\"hljs-number\">0</span>;<br>        gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>2022.11.13\t\t\t\tCauchy</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：</p>\n<p>1.自定义组件：涉及SciptableObject</p>\n<p>2.编程实践（Hit UFO）：涉及工厂模式</p>\n</blockquote>","more":"<p>💎</p>\n<h3 id=\"一、自定义组件\">一、自定义组件</h3>\n<ul>\n<li>用自定义组件定义几种飞碟，做成预制</li>\n</ul>\n<p>这里借用资源商店的Sets - Gems里的prefab（都是宝石呀）作为飞碟原型。</p>\n<p>先利用 ScriptableObject 设定飞碟的属性</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\">[<span class=\"hljs-meta\">System.Serializable</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Attributes</span>&#123;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;大小&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> size;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;速度&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> speed;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;得分&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>&#125;<br><br>[<span class=\"hljs-meta\">CreateAssetMenu(fileName = <span class=\"hljs-string\">&quot;DiskItem&quot;</span>, menuName = <span class=\"hljs-string\">&quot;(ScritableObject)DiskItem&quot;</span>)</span>]<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DiskItem</span> : <span class=\"hljs-title\">ScriptableObject</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Name;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> Desc;<br>    [<span class=\"hljs-meta\">Tooltip(<span class=\"hljs-string\">&quot;飞碟属性&quot;</span>)</span>]<br>    <span class=\"hljs-keyword\">public</span> Attributes attributes;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>分数与对应的属性如下表所示:</p>\n<table>\n<thead>\n<tr>\n<th>分数</th>\n<th>大小</th>\n<th>速度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>15</td>\n</tr>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>17</td>\n</tr>\n<tr>\n<td>5</td>\n<td>1</td>\n<td>20</td>\n</tr>\n<tr>\n<td>9</td>\n<td>1</td>\n<td>35</td>\n</tr>\n</tbody>\n</table>\n<p>形状颜色与之匹配的分数规则如下图所示：</p>\n<p><img src=\"../../../assets/game/1113/01.png\" alt=\"01\"></p>\n<p>再利用Monobehavior脚本为各飞碟附上相应属性</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> DiskItem diskItem;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>这样，我们自定义的预制件就做好了。</p>\n<p>👾</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw5/Assets</a></p>\n<ul>\n<li>编写一个简单的鼠标打飞碟游戏\n<ul>\n<li>游戏有多个round，每个round包括数次trial；</li>\n<li>每个trial的飞碟属性（色彩、大小、发射位置、速度、角度）及同时出现的个数都可能不同；</li>\n<li>每个trial的飞碟有随机性，总体难度随round上升；</li>\n<li>鼠标点中得分，得分规则按飞碟属性不同计算，规则可自定义。</li>\n</ul>\n</li>\n<li>要求：\n<ul>\n<li>使用带缓存的工厂模式管理不同飞碟的生产与回收，该工厂必须是场景单实例的！具体实现可参考资源Singleton模板类；</li>\n<li>尽可能使用前面MVC结构实现人机交互与游戏模型分离。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"简单工厂\">简单工厂</h4>\n<p>简单工厂又称为工厂方法，即类一个方法能够得到一个对象实例，使用者不需要知道该实例如何构建、初始化等细节。</p>\n<ul>\n<li>游戏对象的创建与销毁高成本，必须减少销毁次数。</li>\n<li>屏蔽创建与销毁的业务逻辑，是程序易于扩展。</li>\n</ul>\n<p>在Unity中，<strong>工厂方法+单实例+对象池</strong> 通常都是同时一起用。这里给出一个设计例子：</p>\n<p><img src=\"../../../assets/game/1113/02.png\" alt=\"02\"></p>\n<p>其中：</p>\n<ul>\n<li>DiskFactory 类是一个单实例类，用钱买场景单实例创建</li>\n<li>DiskFactory 类有工厂方法 GetDisk 产生飞碟，有回收方法 FreeDisk</li>\n<li>DiskFactory 使用模板模式根据预制和规则制作飞碟</li>\n<li>对象模板包括飞碟对象与飞碟数据</li>\n</ul>\n<h4 id=\"实现效果\">实现效果</h4>\n<p><img src=\"../../../assets/game/1113/04.gif\" alt=\"04\"></p>\n<h4 id=\"代码框架\">代码框架</h4>\n<p><img src=\"../../../assets/game/1113/03.png\" alt=\"03\"></p>\n<p>其中标注了<strong>固定模板</strong>的类是基本与前几次作业使用的代码一致，除了<code>Singleton</code>是本次作业新增的。</p>\n<p><code>Singleton</code>代码如下：</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Singleton</span>&lt;<span class=\"hljs-title\">T</span>&gt; : <span class=\"hljs-title\">MonoBehaviour</span> <span class=\"hljs-keyword\">where</span> <span class=\"hljs-title\">T</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">static</span> T instance;<br><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> T Instance&#123;<br>        <span class=\"hljs-keyword\">get</span>&#123;<br>            <span class=\"hljs-keyword\">if</span>(instance == <span class=\"hljs-literal\">null</span>)&#123;<br>                instance = (T)FindObjectOfType(<span class=\"hljs-keyword\">typeof</span>(T));<br>                <span class=\"hljs-keyword\">if</span>(instance == <span class=\"hljs-literal\">null</span>)&#123;<br>                    Debug.LogError(<br>                        <span class=\"hljs-string\">&quot;An instance of &quot;</span>+<br>                        <span class=\"hljs-keyword\">typeof</span>(T)+<br>                        <span class=\"hljs-string\">&quot; is needed in the scene, but there is none.&quot;</span><br>                    );<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> instance;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"主要代码\">主要代码</h4>\n<p><strong>CCFlyAction</strong></p>\n<p>用于飞行动作。通过改变游戏对象position的z轴来实现其移动，也加入了游戏对象自己旋转。当z轴坐标不大于-20时，理解为飞出屏幕，销毁处理。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> speed;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCFlyAction <span class=\"hljs-title\">GetCCFlyAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> s</span>)</span>&#123;<br>        CCFlyAction action = ScriptableObject.CreateInstance&lt;CCFlyAction&gt;();<br>        action.speed = s;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//飞碟已经被&quot;销毁&quot;</span><br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.transform.gameObject.activeSelf == <span class=\"hljs-literal\">false</span>) &#123; <br>            Debug.Log(<span class=\"hljs-string\">&quot;Hit Destroy&quot;</span>);<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">this</span>.transform.position.z &lt;= <span class=\"hljs-number\">-20</span>)&#123;<br>            Debug.Log(<span class=\"hljs-string\">&quot;Out Destroy&quot;</span>);<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br><br>        transform.position -= <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, speed * Time.deltaTime);<br>        transform.Rotate(<span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">10</span> * Time.deltaTime, <span class=\"hljs-number\">30</span> * Time.deltaTime));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>CCActionManager</strong></p>\n<p>用于管理飞行动作。<strong>注</strong>：其中这里的<code>Update()</code>不需要实现，则不要<code>new</code>，否则不能进入基类已编写好的<code>Update()</code>函数。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCActionManager</span> : <span class=\"hljs-title\">SSActionManager</span>, <span class=\"hljs-title\">ISSActionCallback</span> <br>&#123;<br>    <span class=\"hljs-keyword\">public</span> RoundController sceneController;<br>    <span class=\"hljs-keyword\">public</span> CCFlyAction action;<br>    <span class=\"hljs-keyword\">public</span> DiskFactory factory;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        sceneController = (RoundController)Director.getInstance().currentSceneController;<br>        sceneController.actionManager = <span class=\"hljs-keyword\">this</span>;<br>        factory = Singleton&lt;DiskFactory&gt;.Instance;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// protected new void Update()&#123;&#125;</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span> &#123;<br>            factory.freeDisk(source.transform.gameObject);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveDisk</span>(<span class=\"hljs-params\">GameObject disk</span>)</span> &#123;<br>        action = CCFlyAction.GetCCFlyAction((<span class=\"hljs-built_in\">float</span>)disk.GetComponent&lt;Test&gt;().diskItem.attributes.speed);<br>        RunAction(disk, action, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>IUserAction &amp; ISceneController</strong></p>\n<p>用户动作及场景动作的接口。两者共用一个<code>getHit()</code>来检测用户点击场景的游戏对象。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameOver</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>DiskFactory</strong></p>\n<p>飞碟工厂。used用于存储创造出来的飞碟，free用于要销毁的飞碟。由于飞碟对象使用我们前面制作的预制件，所以只需要使用及对不同round做一些处理即可。</p>\n<p>对于第一轮，只会出现1分与2分的飞碟；第二轮只会出现1分、2分与5分的飞碟；第三轮往后会出现所有种类的飞碟。要注意飞碟加分与扣分的区别。飞碟的出生位置，随轮数增加而中心向外扩。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyException</span> : <span class=\"hljs-title\">System.Exception</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyException</span>()</span>&#123;&#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyException</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> message</span>) : <span class=\"hljs-title\">base</span>(<span class=\"hljs-params\">message</span>)</span>&#123;&#125;<br>&#125;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DiskFactory</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    List&lt;GameObject&gt; used;<br>    List&lt;GameObject&gt; free;<br>    System.Random rand;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        used = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        free = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        rand = <span class=\"hljs-keyword\">new</span> System.Random();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">getDiskName</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> seed</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">1</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">2</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">3</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb1c&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">4</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1a&quot;</span>;    <br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">5</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1b&quot;</span>;    <br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">6</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk1c&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">7</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk2a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">8</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk2b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">9</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb5a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">10</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk5a&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">11</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb5b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">12</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk5b&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">13</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Bomb9&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span>(seed == <span class=\"hljs-number\">14</span>)<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Prefabs/Disk9&quot;</span>;               <br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Error&quot;</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">createDisk</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> round</span>)</span>&#123;<br>        GameObject disk;<br>        <span class=\"hljs-built_in\">int</span> right=<span class=\"hljs-number\">7</span>;<br>        <span class=\"hljs-keyword\">if</span>(round == <span class=\"hljs-number\">1</span>)<br>            right = <span class=\"hljs-number\">7</span>;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(round == <span class=\"hljs-number\">2</span>)<br>            right = <span class=\"hljs-number\">10</span>;<br>        <span class=\"hljs-keyword\">else</span><br>            right = <span class=\"hljs-number\">14</span>;<br>            <br>        <span class=\"hljs-keyword\">if</span>(free.Count != <span class=\"hljs-number\">0</span>)&#123;<br>            disk = free[<span class=\"hljs-number\">0</span>];<br>            free.Remove(disk);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            <span class=\"hljs-built_in\">string</span> getName = getDiskName(rand.Next(<span class=\"hljs-number\">1</span>,right+<span class=\"hljs-number\">1</span>));<br>            disk = GameObject.Instantiate(Resources.Load(getName, <span class=\"hljs-keyword\">typeof</span>(GameObject))) <span class=\"hljs-keyword\">as</span> GameObject;<br>        &#125;<br>        <span class=\"hljs-built_in\">int</span> roundX = round*<span class=\"hljs-number\">10</span>;<br>        <span class=\"hljs-built_in\">int</span> roundY = round*<span class=\"hljs-number\">6</span>;<br>        <span class=\"hljs-built_in\">int</span> roundZ = <span class=\"hljs-number\">100</span>+round*<span class=\"hljs-number\">20</span>;<br>        disk.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(rand.Next(-roundX,roundX+<span class=\"hljs-number\">1</span>), rand.Next(-roundY,roundY+<span class=\"hljs-number\">1</span>), rand.Next(<span class=\"hljs-number\">80</span>,roundZ));<br><br>        <span class=\"hljs-built_in\">int</span> scale = disk.GetComponent&lt;Test&gt;().diskItem.attributes.size;<br>        disk.transform.localScale = <span class=\"hljs-keyword\">new</span> Vector3(scale, scale, scale);<br>        <br>        used.Add(disk);<br>        disk.SetActive(<span class=\"hljs-literal\">true</span>);<br>        Debug.Log(<span class=\"hljs-string\">&quot;Generate disk success&quot;</span>);<br>        <span class=\"hljs-keyword\">return</span> disk; <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">freeDisk</span>(<span class=\"hljs-params\">GameObject disk</span>)</span>&#123;<br>        disk.SetActive(<span class=\"hljs-literal\">false</span>);<br>        <span class=\"hljs-keyword\">if</span> (!used.Contains(disk)) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> MyException(<span class=\"hljs-string\">&quot;Try to remove a item from a list which doesn&#x27;t contain it.&quot;</span>);<br>        &#125;<br>        Debug.Log(<span class=\"hljs-string\">&quot;Free disk success&quot;</span>);<br>        used.Remove(disk);<br>        free.Add(disk);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>RoundController</strong></p>\n<p>局数控制器。相当于之前的FirstController。实现了用户行为与场景行为的接口。实现了每局产生飞碟的函数。每个round会有4次发射，每次发射6个飞碟，发射间隔会根据round增加而减小。利用射线碰撞检测鼠标点击飞碟。<strong>注</strong>：预制件中的飞碟必须要加入collider碰撞器。否则无法检测射线碰撞。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RoundController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-built_in\">int</span> round = <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-built_in\">int</span> currDisk = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-built_in\">int</span> max_round = <span class=\"hljs-number\">5</span>;<br>    <span class=\"hljs-built_in\">float</span> timer = <span class=\"hljs-number\">1.0f</span>;<br>    GameObject disk;<br>    DiskFactory factory;<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;   <br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        director.currentSceneController.LoadResource();<br>        gameObject.AddComponent&lt;DiskFactory&gt;();<br>        factory = Singleton&lt;DiskFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br><br>    &#125;<br>    <span class=\"hljs-comment\">// No need to loadresource</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(userGUI.mode == <span class=\"hljs-number\">0</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>        getHit();<br>        gameOver();<br>        <span class=\"hljs-keyword\">if</span>(round&gt;max_round)<br>            <span class=\"hljs-keyword\">return</span>;<br>        timer -= Time.deltaTime;<br>        <span class=\"hljs-keyword\">if</span>(timer&lt;=<span class=\"hljs-number\">0</span> )&#123;<br>            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;<span class=\"hljs-number\">6</span>;i++)&#123;<br>                disk = factory.createDisk(round);<br>                actionManager.MoveDisk(disk);<br>            &#125;<br>            currDisk+=<span class=\"hljs-number\">6</span>;<br>            <span class=\"hljs-keyword\">if</span>(round&lt;=max_round)<br>                userGUI.round = round;<br>            timer = (<span class=\"hljs-built_in\">float</span>)(<span class=\"hljs-number\">4</span>-round*<span class=\"hljs-number\">0.5</span>);<br>            <span class=\"hljs-keyword\">if</span>(currDisk%<span class=\"hljs-number\">24</span> == <span class=\"hljs-number\">0</span>)&#123;<br>                round++;<br>                timer = <span class=\"hljs-number\">10.0F</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (round &gt; max_round &amp;&amp; actionManager.RemainActionCount() == <span class=\"hljs-number\">0</span>)<br>            userGUI.gameMessage = <span class=\"hljs-string\">&quot;Game Over!&quot;</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">getHit</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">// 按钮设置 名为“Fire1”监听鼠标点击</span><br>        <span class=\"hljs-keyword\">if</span> (Input.GetButtonDown(<span class=\"hljs-string\">&quot;Fire1&quot;</span>)) &#123;<br>            Debug.Log(<span class=\"hljs-string\">&quot;Fire pressed&quot;</span>);<br>\t\t\tCamera ca = Camera.main;<br>\t\t\tRay ray = ca.ScreenPointToRay(Input.mousePosition);<br><br>\t\t\tRaycastHit hit;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (Physics.Raycast(ray, <span class=\"hljs-keyword\">out</span> hit)) &#123;<br>                Debug.Log(hit.transform.gameObject.name);<br>                scoreController.Record(hit.transform.gameObject);<br>                hit.transform.gameObject.SetActive(<span class=\"hljs-literal\">false</span>);<br>\t\t\t&#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        round = <span class=\"hljs-number\">1</span>;<br>        currDisk = <span class=\"hljs-number\">0</span>;<br>        timer = <span class=\"hljs-number\">1.0F</span>;<br>        scoreController.Reset();<br>        userGUI.Reset();<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>ScoreController</strong></p>\n<p>分数控制器。用于简单的计分功能。由于预制件中扣分的飞碟的score属性已经为负，此处的<code>Record</code>函数的score直接加就可以了。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ScoreController</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>    <span class=\"hljs-keyword\">public</span> RoundController roundController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        roundController = (RoundController)Director.getInstance().currentSceneController;<br>        roundController.scoreController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;myUserGUI&gt;();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Record</span>(<span class=\"hljs-params\">GameObject disk</span>)</span>&#123;<br>        score += disk.GetComponent&lt;Test&gt;().diskItem.attributes.score;<br>        userGUI.score = score;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>myUserGUI</strong></p>\n<p>用户界面。分为主界面<code>mainMenu</code>和游玩界面<code>gameStart</code>。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> mode;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> round;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> gameMessage;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">public</span> GUIStyle titleStyle, textStyle;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> menu_w = Screen.width/<span class=\"hljs-number\">5</span>, menu_h = Screen.height/<span class=\"hljs-number\">5</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        mode = <span class=\"hljs-number\">0</span>;<br>        gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>    <br>        titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>        titleStyle.normal.textColor = Color.white;<br>        titleStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        titleStyle.fontSize = <span class=\"hljs-number\">50</span>;<br>        titleStyle.alignment = TextAnchor.MiddleCenter;<br><br>        textStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>        textStyle.normal.textColor = Color.white;<br>        textStyle.normal.background = <span class=\"hljs-literal\">null</span>;<br>        textStyle.fontSize = <span class=\"hljs-number\">20</span>;<br>        textStyle.alignment = TextAnchor.MiddleCenter;<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span><br>    &#123;<br>        GUI.skin.button.fontSize = <span class=\"hljs-number\">35</span>;<br>        <span class=\"hljs-keyword\">switch</span>(mode)&#123;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">0</span>:<br>                mainMenu();<br>                <span class=\"hljs-keyword\">break</span>;<br>            <span class=\"hljs-keyword\">case</span> <span class=\"hljs-number\">1</span>:<br>                gameStart();<br>                <span class=\"hljs-keyword\">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">mainMenu</span>()</span><br>    &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - menu_w * <span class=\"hljs-number\">0.5f</span>, Screen.height * <span class=\"hljs-number\">0.1f</span>, menu_w, menu_h), <span class=\"hljs-string\">&quot;Hit UFO&quot;</span>, titleStyle);<br>        <span class=\"hljs-built_in\">bool</span> button = GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - menu_w * <span class=\"hljs-number\">0.5f</span>, Screen.height * <span class=\"hljs-number\">3</span> / <span class=\"hljs-number\">7</span>, menu_w, menu_h), <span class=\"hljs-string\">&quot;Start&quot;</span>);<br>        <span class=\"hljs-keyword\">if</span> (button) &#123;<br>            mode = <span class=\"hljs-number\">1</span>;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">gameStart</span>()</span><br>    &#123;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-100</span>, Screen.height/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-60</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), gameMessage, titleStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Score: &quot;</span> + score, textStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width<span class=\"hljs-number\">-100</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Round: &quot;</span> + round, textStyle);<br>        <span class=\"hljs-keyword\">if</span> (gameMessage == <span class=\"hljs-string\">&quot;Game Over!&quot;</span>) &#123;<br>\t\t\t<span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width/<span class=\"hljs-number\">2</span><span class=\"hljs-number\">-100</span>, Screen.height/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;Restart&quot;</span>)) &#123;<br>\t\t\t\taction.Restart ();<br>\t\t\t&#125;<br>\t\t&#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span><br>    &#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>        round = <span class=\"hljs-number\">1</span>;<br>        mode = <span class=\"hljs-number\">0</span>;<br>        gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>2022.11.13\t\t\t\tCauchy</p>\n</blockquote>"},{"layout":"post","title":"HW4: 游戏对象与图形基础","date":"2022-11-05T06:00:00.000Z","subtitle":"游戏对象与图形基础","_content":"\n> 作业简介：\n>\n> 1.基本操作演练（游戏场景）\n>\n> 2.编程实践\n\n<!--more-->\n\n:shallow_pan_of_food:\n\n### 一、基本操作演练\n\n* 下载Fantasy Skybox FREE，构建自己的游戏场景（含天空、光源、音效、地形）\n\n![scene](../../../assets/game/1105/scene.jpg)\n\n* 写一个简单的总结，总结游戏对象的使用\n\n目前学习到的一些游戏对象包括：3D Object里的基本物体和Terrain、Light、Camera、Skybox、Audio。每个GameObject都有Transform属性来设置位置旋转大小等。\n\n- 基本物体（Cube、Sphere之类的）：单纯的物体，通过添加材质更改外观，添加各种组件实现功能。\n\n- Terrain：地面，通过Terrain自带的编辑工具可以编辑地形，如更改地形大小，修改地形高度，给地形“上色”，还可以添加树木花草等。我们更多地会选择使用别人做好现成的素材。\n\n    ![terrain1](../../../assets/game/1105/terrain1.jpg)\n\n    ![terrain2](../../../assets/game/1105/terrain2.jpg)\n\n- Light：灯光。光影的合理设置能更好地表达3D环境的颜色与情绪。有平行光、聚光灯、点光源、区域光等，不同光有不同属性面板。\n\n    如点光源这个面板，我们能看到像颜色、阴影等设置。\n\n    ![Light](../../../assets/game/1105/Light.jpg)\n\n- Camera：摄影机。第一人称游戏可以作为玩家的眼睛，第三人称游戏可以跟随玩家运动。多摄像机是制造效果的重要手段。摄像机属性面板如下：\n\n    ![Camera](../../../assets/game/1105/Camera.jpg)\n\n    各属性说明可参考官方文档：[https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html][link1]\n\n    [link1]:https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html\n\n- Skybox：天空盒（一种材料）。根据shader着色器的类型不同，需要配置不同的天空盒素材。如Skybox/Cubemap是一个圆形图片、Mobile/Skybox是6面图片、Skybox/Panoramic是一张全景图。制作好天空盒材质后，可以放到Camera的Skybox部件中。\n\n    ![skybox](../../../assets/game/1105/skybox.jpg)\n\n    ![skybox2](../../../assets/game/1105/skybox2.jpg)\n\n- Audio：音源。可利用Audio Source在场景中播放声音，利用附着在角色对象上的Audio Listener监听场景中的声音。Audio Source可以设置为3D，听起来有立体的效果。通过混响等技巧可以产生更复杂的效果。\n\n    ![audio](../../../assets/game/1105/audio.jpg)\n\n:ramen:\n\n### 二、编程实践\n\n牧师与魔鬼 动作分离版+设计一个裁判类（当游戏到达结束条件时，通知场景控制器游戏结束）\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts][link2]\n\n[link2]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts\n\n对比上一个版本的一些区别：\n\n* 将动作抽离出来形成一个动作管理器\n* 增加了裁判类通知游戏结束\n* 增加了计时器功能\n* 游戏结束会在船靠岸之后才提示弹出来\n\n实际效果如下图：\n\n![anime](../../../assets/game/1105/anime.gif)\n\n\n\n#### 1 动作管理器的设计\n\n![uml](../../../assets/game/1105/uml.jpg)\n\n* 通过门面模式（控制器模式）输出组合好的几个动作，供原来程序调用。\n* 通过组合模式实现动作组合，按组合模式设计方法\n* 接口回调（函数回调）实现管理者与被管理者解耦\n* 通过模板方法，让使用者减少对动作管理过程细节的要求\n* 优点：\n    * 程序更能适应需求变化\n    * 对象更容易被复用\n    * 程序更易于维护\n\n\n\n**1.动作基类(SSAction)**\n\n* SSAction是动作的基类，其他动作类都继承于它。\n* ScriptableObject是不需要绑定GameObject对象的可编程基类。这些对象受Unity引擎场景管理。\n* protected 防止用户自己new抽象的对象\n* 使用virtual申明虚方法，通过重写实现多态。\n* 利用接口(ISSActionCallback)实现消息通知，避免与动作管理者直接依赖\n\n```c#\npublic class SSAction : ScriptableObject \n{\n    public bool enable = true;\n    public bool destroy = false;\n\n    public GameObject gameObject {get; set;}\n    public Transform transform {get; set;}\n    public ISSActionCallback callback {get; set;}\n\n    protected SSAction(){}\n\n    public virtual void Start()\n    {\n        throw new System.NotImplementedException();\n    }\n\n    public virtual void Update()\n    {\n        throw new System.NotImplementedException();\n    }\n}\n```\n\n\n\n**2.动作管理基类(SSActionManager)**\n\n* 该类实现所有动作的基本管理，CCActionManager会继承于它。\n* 利用一个动作字典来进行动作的运行，先将waitingAdd中的动作加入字典中，运行动作后，再将它加入到waitingDelete中销毁。由于字典是线程不安全的，如果控制好队列，如每次最多存在一个动作，就不会导致动作的混乱。\n* 提供了添加新动作的方法RunAction。该方法把游戏对象与动作绑定，并绑定该动作事件的消息接受者。\n\n\n\n```c#\npublic class SSActionManager : MonoBehaviour {\n    //动作集，以字典形式存在\n    private Dictionary<int, SSAction> actions = new Dictionary<int, SSAction>();\n    //等待被加入的动作队列(动作即将开始)\n    private List<SSAction> waitingAdd = new List<SSAction>();\n    //等待被删除的动作队列(动作已完成)\n    private List<int> waitingDelete = new List<int>();\n\n    protected void Update()\n    {\n        //将waitingAdd中的动作保存\n        foreach (SSAction ac in waitingAdd)\n            actions[ac.GetInstanceID()] = ac;\n        waitingAdd.Clear();\n\n        //运行被保存的事件\n        foreach (KeyValuePair<int, SSAction> kv in actions)\n        {\n            SSAction ac = kv.Value;\n            if (ac.destroy)\n            {\n                waitingDelete.Add(ac.GetInstanceID());\n            }\n            else if (ac.enable)\n            {\n                ac.Update();\n            }\n        }\n\n        //销毁waitingDelete中的动作\n        foreach (int key in waitingDelete)\n        {\n            SSAction ac = actions[key];\n            actions.Remove(key);\n            Destroy(ac);\n        }\n        waitingDelete.Clear();\n    }\n\n    //准备运行一个动作，将动作初始化，并加入到waitingAdd\n    public void RunAction(GameObject gameObject, SSAction action, ISSActionCallback manager)\n    {\n        action.gameObject = gameObject;\n        action.transform = gameObject.transform;\n        action.callback = manager;\n        waitingAdd.Add(action);\n        action.Start();\n    }\n\n    protected void Start()\n    {\n        \n    }\n}\n```\n\n\n\n**3.动作事件接口定义(ISSActionCallback)**\n\n* 接口作为接收通知对象的抽象类型，所有事件管理者都必须实现该接口，来实现事件调度。\n* 事件类型定义，使用了**枚举变量**。\n\n```c#\npublic enum SSActionEventType:int {Started, Completed}\npublic interface ISSActionCallback\n{\n    //回调函数\n    void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int intParam = 0,\n        string strParam = null,\n        Object objectParam = null\n    );\n}\n```\n\n\n\n**4.简单动作实现(CCMoveToAction)**\n\n* 实现移动动作，将物体移动到目标位置，并通知任务完成。\n* 让Unity创建动作类，确保内存正确回收。\n* override 多态，c++必须申明重写，java则默认重写。\n\n```c#\npublic class CCMoveToAction : SSAction\n{\n    \n    public Vector3 target; //目的地\n    public float speed; //速度\n    \n    private CCMoveToAction(){}\n\n    //生产函数(工厂模式)\n    public static CCMoveToAction GetSSAction(Vector3 target, float speed)\n    {\n        CCMoveToAction action = ScriptableObject.CreateInstance<CCMoveToAction>();\n        action.target = target;\n        action.speed = speed;\n        return action;\n    }\n\n    public override void Start(){}\n    \n    public override void Update()\n    {\n        //判断是否符合移动条件\n        if (this.gameObject == null || this.transform.position == target)\n        {\n\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n        //移动\n        this.transform.position = Vector3.MoveTowards(this.transform.position, target, speed * Time.deltaTime);\n    }    \n}\n```\n\n\n\n**5.顺序动作组合类实现(CCSequenceAction)**\n\n* 实现一个动作组合序列，顺序播放动作。\n* 让动作组合继承抽象动作SSAction，能够进一步组合；实现回调接收，能接受被组合动作的事件。\n* 创建一个动作顺序执行序列，-1表示无限循环，start开始动作。\n* SSActionEvent 收到当前动作执行完成，推下一个动作，如果完成一次循环，减次数。如完成，通知该动作的管理者。\n* Start 执行动作前，为每个动作注入当前动作游戏对象，并将自己作为动作事件的接收者。\n* OnDestroy 如果自己被注销，应该释放自己管理的动作。这里不会被注销，因此没有实现该功能。\n* 这是标准的组合设计模式。被组合对象和组合对象同属一种类型。通过该模式，我们能实现几乎满足所有越位需要、非常复杂的动作管理。\n\n```c#\npublic class CCSequenceAction : SSAction, ISSActionCallback\n{\n    public List<SSAction> sequence; //动作序列\n    public int repeat = -1; //重复次数\n    public int start = 0; //动作开始指针\n\n    //生产函数(工厂模式)\n    public static CCSequenceAction GetSSAction(int repeat, int start, List<SSAction> sequence)\n    {\n        CCSequenceAction action = ScriptableObject.CreateInstance<CCSequenceAction>();\n        action.repeat = repeat;\n        action.sequence = sequence;\n        action.start = start;\n        return action;\n    }\n\n    public override void Start()\n    {\n        foreach (SSAction action in sequence)\n        {\n            action.gameObject = this.gameObject;\n            action.transform = this.transform;\n            action.callback = this;\n            action.Start();\n        }\n    }\n\n    public override void Update()\n    {\n        if (sequence.Count == 0)    \n            return;\n        if (start < sequence.Count)\n            sequence[start].Update();\n    }\n\n    //回调处理，当有动作完成时触发\n    public void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int Param = 0,\n        string strParam = null,\n        Object objectParam = null)\n    {\n        source.destroy = false;\n        this.start++;\n        if (this.start >= sequence.Count)\n        {\n            this.start = 0;\n            if (repeat > 0)\n                repeat--;\n            if (repeat == 0)\n            {\n                this.destroy = true;\n                this.callback.SSActionEvent(this);\n            }\n        }\n    }\n\n    void OnDestroy()\n    {\n        //TODO: Something\n    }\n}\n```\n\n\n\n**6.动作组合管理(CCActionManager)**\n\n上一版本的moveable脚本拆分到这个类和FirstController的方法中，实现船和角色的移动管理。\n\n```c#\n// 将原来移动的方法 放在这里\npublic class CCActionManager : SSActionManager, ISSActionCallback\n{\n    //是否正在运动\n    private bool isMoving = false;\n    //船移动动作类\n    public CCMoveToAction moveBoatAction;\n    //人移动动作类(需要组合)\n    public CCSequenceAction moveRoleAction;\n    //控制器\n    public FirstController controller;\n\n    protected new void Start()\n    {\n        controller = (FirstController)Director.getInstance().currentSceneController;\n        controller.actionManager = this;\n    }\n\n    public bool IsMoving()\n    {\n        return isMoving;\n    }\n\n    //移动船\n    public void MoveBoat(GameObject boat, Vector3 target, float speed)\n    {\n        if (isMoving)\n            return;\n        isMoving = true;\n        moveBoatAction = CCMoveToAction.GetSSAction(target, speed);\n        this.RunAction(boat, moveBoatAction, this);\n    }\n\n    //移动人\n    public void MoveRole(GameObject role, Vector3 mid_destination, Vector3 destination, int speed)\n    {\n        if (isMoving)\n            return;\n        isMoving = true;\n        moveRoleAction = CCSequenceAction.GetSSAction(0, 0, new List<SSAction> \n            {   CCMoveToAction.GetSSAction(mid_destination, speed), \n                CCMoveToAction.GetSSAction(destination, speed) });\n        this.RunAction(role, moveRoleAction, this);\n    }\n\n    //回调函数\n    public void SSActionEvent(SSAction source,\n    SSActionEventType events = SSActionEventType.Completed,\n    int intParam = 0,\n    string strParam = null,\n    Object objectParam = null)\n    {\n        isMoving = false;\n    }\n}\n```\n\n\n\n#### 2 部分控制类的设计\n\n**1.最高层控制器(FirstController)**\n\n* 这里仅展示有增改的函数方法，增添了一个裁判反馈信息`JudgeCallback`，实现裁判类的回调函数。\n* 将原有检测游戏状态的check函数抽离给裁判类JudgeController处理。\n* 处理了原有可移动脚本moveable的一些部分，利于与动作管理器结合。\n\n```c#\npublic class FirstController : MonoBehaviour, ISceneController, IUserAction\n{\n    readonly Vector3 waterPos = new Vector3(0,0.5F,0);\n    public CCActionManager actionManager;\n    public JudgeController judgeController;\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n    private myCharacterController[] characters;\n    myUserGUI userGUI;\n    public bool isRunning;\n    public float time;\n\n    public void JudgeCallback(bool _isRunning, string message)\n    {\n        userGUI.gameMessage = message;\n        userGUI.time = (int)time;\n        this.isRunning = _isRunning;\n    }\n\n    void Start ()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        judgeController = gameObject.AddComponent<JudgeController>() as JudgeController;\n        characters = new myCharacterController[6];\n        isRunning = true;\n        time = 60;\n        LoadResources();\n    }\n\n    public void moveBoat(){\n        if(isRunning == false || actionManager.IsMoving())\n            return;\n        if(boat.isEmpty())\n            return;\n        string direct = boat.getDirection();\n        Vector3 destination = boat.getPosition();        \n        if (direct == \"End\") {\n\t\t\tboat.setDirection(\"Start\");\n\t\t} \n\t\telse {\n\t\t\tboat.setDirection(\"End\");\n\t\t}\n        actionManager.MoveBoat(boat.getGameobj(), destination, 20);\n    }\n\n    public void ClickCharacter(myCharacterController cC){\n        if(isRunning == false || actionManager.IsMoving())\n            return;\n        if(cC.isOnBoat()){\n            CoastController coast;\n            if(boat.getDirection()==\"Start\")\n                coast = startCoast;\n            else\n                coast = endCoast;\n\n            boat.getOffBoat(cC.getName());\n            Vector3 destination = coast.getEmptyPosition();\n            Vector3 middle = destination;\n            if (destination.y < cC.GetGameObject().transform.position.y) {\n\t\t\t    middle.y = cC.GetGameObject().transform.position.y;\n\t\t    } \n\t\t    else {\n\t\t\t    middle.x = cC.GetGameObject().transform.position.x;\n\t\t    }\n            // cC.moveTo(coast.getEmptyPosition());\n            actionManager.MoveRole(cC.GetGameObject(), middle, destination, 20);\n            cC.getOnCoast(coast);\n            coast.getOnCoast(cC);\n        }\n        else{\n            CoastController coast = cC.getCoastController();\n            if(boat.getEmptyIndex () == -1 || coast.getDirection() != boat.getDirection())\n                return;\n            coast.getOffCoast(cC.getName());\n            Vector3 destination = boat.getEmptyPosition();\n            Vector3 middle = destination;\n            if (destination.y < cC.GetGameObject().transform.position.y) {\n\t\t\t    middle.y = cC.GetGameObject().transform.position.y;\n\t\t    } \n\t\t    else {\n\t\t\t    middle.x = cC.GetGameObject().transform.position.x;\n\t\t    }\n            actionManager.MoveRole(cC.GetGameObject(), middle, destination, 20);\n            // cC.moveTo(boat.getEmptyPosition());\n            cC.getOnBoat(boat);\n            boat.getOnBoat(cC);\n        }\n    }\n\n    public void Restart(){\n        //boat 移动归位\n        if(boat.getDirection()==\"End\"){\n            Vector3 destination = boat.getPosition();\n            actionManager.MoveBoat(boat.getGameobj(), destination, 20);\n        }\n        boat.reset();\n        startCoast.reset();\n        endCoast.reset();\n        for(int i=0;i<characters.Length;i++)\n            characters[i].reset();\n        isRunning = true;\n        time = 60;\n    }\n\n}\n```\n\n\n\n**2.裁判类(JudgeController)**\n\n实现原有FristController的check函数功能，检测游戏状态，在游戏结束时用过回调信息通知FirstController。\n\n```c#\npublic class JudgeController : MonoBehaviour {\n    public FirstController mainController;\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n\n\n    void Start()\n    {\n        this.mainController = (FirstController)Director.getInstance().currentSceneController;\n        this.startCoast = mainController.startCoast;\n        this.endCoast = mainController.endCoast;\n        this.boat = mainController.boat;\n\n    }\n\n    void Update()\n    {\n        if (!mainController.isRunning)\n            return;\n        if(!boat.isStop())\n            return;\n        if (mainController.time <= 0)\n        {\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n        \n        this.gameObject.GetComponent<myUserGUI>().gameMessage = \"\";\n\n        int startPriest = 0;\n        int endPriest = 0;\n        int startDevil = 0;\n        int endDevil = 0;\n\n        int[] startCount = startCoast.getNum();\n        startPriest += startCount[0];\n        startDevil += startCount[1];\n\n        int[] endCount = endCoast.getNum();\n        endPriest += endCount[0];\n        endDevil += endCount[1];\n\n        if(endDevil+endPriest ==6){\n            mainController.JudgeCallback(false, \"You Win!\");\n            return;\n        }\n\n        int[] boatCount = boat.getNum();\n        if(boat.getDirection() == \"End\"){\n            endPriest += boatCount[0];\n            endDevil += boatCount[1];\n        }\n        else{\n            startPriest += boatCount[0];\n            startDevil += boatCount[1];\n        }\n\n        if(startPriest<startDevil && startPriest>0){\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n        if(endPriest<endDevil && endPriest>0){\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n    }\n}\n```\n\n\n\n\n\n> Cauchy        2022.11.05","source":"_posts/2022/Homework4/Homework4.md","raw":"---\nlayout: post\ntitle:  \"HW4: 游戏对象与图形基础\"\ndate:   2022-11-05 14:00:00 +0800\ntags:\n- unity\ncategories: Game\nsubtitle: '游戏对象与图形基础'\n---\n\n> 作业简介：\n>\n> 1.基本操作演练（游戏场景）\n>\n> 2.编程实践\n\n<!--more-->\n\n:shallow_pan_of_food:\n\n### 一、基本操作演练\n\n* 下载Fantasy Skybox FREE，构建自己的游戏场景（含天空、光源、音效、地形）\n\n![scene](../../../assets/game/1105/scene.jpg)\n\n* 写一个简单的总结，总结游戏对象的使用\n\n目前学习到的一些游戏对象包括：3D Object里的基本物体和Terrain、Light、Camera、Skybox、Audio。每个GameObject都有Transform属性来设置位置旋转大小等。\n\n- 基本物体（Cube、Sphere之类的）：单纯的物体，通过添加材质更改外观，添加各种组件实现功能。\n\n- Terrain：地面，通过Terrain自带的编辑工具可以编辑地形，如更改地形大小，修改地形高度，给地形“上色”，还可以添加树木花草等。我们更多地会选择使用别人做好现成的素材。\n\n    ![terrain1](../../../assets/game/1105/terrain1.jpg)\n\n    ![terrain2](../../../assets/game/1105/terrain2.jpg)\n\n- Light：灯光。光影的合理设置能更好地表达3D环境的颜色与情绪。有平行光、聚光灯、点光源、区域光等，不同光有不同属性面板。\n\n    如点光源这个面板，我们能看到像颜色、阴影等设置。\n\n    ![Light](../../../assets/game/1105/Light.jpg)\n\n- Camera：摄影机。第一人称游戏可以作为玩家的眼睛，第三人称游戏可以跟随玩家运动。多摄像机是制造效果的重要手段。摄像机属性面板如下：\n\n    ![Camera](../../../assets/game/1105/Camera.jpg)\n\n    各属性说明可参考官方文档：[https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html][link1]\n\n    [link1]:https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html\n\n- Skybox：天空盒（一种材料）。根据shader着色器的类型不同，需要配置不同的天空盒素材。如Skybox/Cubemap是一个圆形图片、Mobile/Skybox是6面图片、Skybox/Panoramic是一张全景图。制作好天空盒材质后，可以放到Camera的Skybox部件中。\n\n    ![skybox](../../../assets/game/1105/skybox.jpg)\n\n    ![skybox2](../../../assets/game/1105/skybox2.jpg)\n\n- Audio：音源。可利用Audio Source在场景中播放声音，利用附着在角色对象上的Audio Listener监听场景中的声音。Audio Source可以设置为3D，听起来有立体的效果。通过混响等技巧可以产生更复杂的效果。\n\n    ![audio](../../../assets/game/1105/audio.jpg)\n\n:ramen:\n\n### 二、编程实践\n\n牧师与魔鬼 动作分离版+设计一个裁判类（当游戏到达结束条件时，通知场景控制器游戏结束）\n\n项目地址：[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts][link2]\n\n[link2]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts\n\n对比上一个版本的一些区别：\n\n* 将动作抽离出来形成一个动作管理器\n* 增加了裁判类通知游戏结束\n* 增加了计时器功能\n* 游戏结束会在船靠岸之后才提示弹出来\n\n实际效果如下图：\n\n![anime](../../../assets/game/1105/anime.gif)\n\n\n\n#### 1 动作管理器的设计\n\n![uml](../../../assets/game/1105/uml.jpg)\n\n* 通过门面模式（控制器模式）输出组合好的几个动作，供原来程序调用。\n* 通过组合模式实现动作组合，按组合模式设计方法\n* 接口回调（函数回调）实现管理者与被管理者解耦\n* 通过模板方法，让使用者减少对动作管理过程细节的要求\n* 优点：\n    * 程序更能适应需求变化\n    * 对象更容易被复用\n    * 程序更易于维护\n\n\n\n**1.动作基类(SSAction)**\n\n* SSAction是动作的基类，其他动作类都继承于它。\n* ScriptableObject是不需要绑定GameObject对象的可编程基类。这些对象受Unity引擎场景管理。\n* protected 防止用户自己new抽象的对象\n* 使用virtual申明虚方法，通过重写实现多态。\n* 利用接口(ISSActionCallback)实现消息通知，避免与动作管理者直接依赖\n\n```c#\npublic class SSAction : ScriptableObject \n{\n    public bool enable = true;\n    public bool destroy = false;\n\n    public GameObject gameObject {get; set;}\n    public Transform transform {get; set;}\n    public ISSActionCallback callback {get; set;}\n\n    protected SSAction(){}\n\n    public virtual void Start()\n    {\n        throw new System.NotImplementedException();\n    }\n\n    public virtual void Update()\n    {\n        throw new System.NotImplementedException();\n    }\n}\n```\n\n\n\n**2.动作管理基类(SSActionManager)**\n\n* 该类实现所有动作的基本管理，CCActionManager会继承于它。\n* 利用一个动作字典来进行动作的运行，先将waitingAdd中的动作加入字典中，运行动作后，再将它加入到waitingDelete中销毁。由于字典是线程不安全的，如果控制好队列，如每次最多存在一个动作，就不会导致动作的混乱。\n* 提供了添加新动作的方法RunAction。该方法把游戏对象与动作绑定，并绑定该动作事件的消息接受者。\n\n\n\n```c#\npublic class SSActionManager : MonoBehaviour {\n    //动作集，以字典形式存在\n    private Dictionary<int, SSAction> actions = new Dictionary<int, SSAction>();\n    //等待被加入的动作队列(动作即将开始)\n    private List<SSAction> waitingAdd = new List<SSAction>();\n    //等待被删除的动作队列(动作已完成)\n    private List<int> waitingDelete = new List<int>();\n\n    protected void Update()\n    {\n        //将waitingAdd中的动作保存\n        foreach (SSAction ac in waitingAdd)\n            actions[ac.GetInstanceID()] = ac;\n        waitingAdd.Clear();\n\n        //运行被保存的事件\n        foreach (KeyValuePair<int, SSAction> kv in actions)\n        {\n            SSAction ac = kv.Value;\n            if (ac.destroy)\n            {\n                waitingDelete.Add(ac.GetInstanceID());\n            }\n            else if (ac.enable)\n            {\n                ac.Update();\n            }\n        }\n\n        //销毁waitingDelete中的动作\n        foreach (int key in waitingDelete)\n        {\n            SSAction ac = actions[key];\n            actions.Remove(key);\n            Destroy(ac);\n        }\n        waitingDelete.Clear();\n    }\n\n    //准备运行一个动作，将动作初始化，并加入到waitingAdd\n    public void RunAction(GameObject gameObject, SSAction action, ISSActionCallback manager)\n    {\n        action.gameObject = gameObject;\n        action.transform = gameObject.transform;\n        action.callback = manager;\n        waitingAdd.Add(action);\n        action.Start();\n    }\n\n    protected void Start()\n    {\n        \n    }\n}\n```\n\n\n\n**3.动作事件接口定义(ISSActionCallback)**\n\n* 接口作为接收通知对象的抽象类型，所有事件管理者都必须实现该接口，来实现事件调度。\n* 事件类型定义，使用了**枚举变量**。\n\n```c#\npublic enum SSActionEventType:int {Started, Completed}\npublic interface ISSActionCallback\n{\n    //回调函数\n    void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int intParam = 0,\n        string strParam = null,\n        Object objectParam = null\n    );\n}\n```\n\n\n\n**4.简单动作实现(CCMoveToAction)**\n\n* 实现移动动作，将物体移动到目标位置，并通知任务完成。\n* 让Unity创建动作类，确保内存正确回收。\n* override 多态，c++必须申明重写，java则默认重写。\n\n```c#\npublic class CCMoveToAction : SSAction\n{\n    \n    public Vector3 target; //目的地\n    public float speed; //速度\n    \n    private CCMoveToAction(){}\n\n    //生产函数(工厂模式)\n    public static CCMoveToAction GetSSAction(Vector3 target, float speed)\n    {\n        CCMoveToAction action = ScriptableObject.CreateInstance<CCMoveToAction>();\n        action.target = target;\n        action.speed = speed;\n        return action;\n    }\n\n    public override void Start(){}\n    \n    public override void Update()\n    {\n        //判断是否符合移动条件\n        if (this.gameObject == null || this.transform.position == target)\n        {\n\n            this.destroy = true;\n            this.callback.SSActionEvent(this);\n            return;\n        }\n        //移动\n        this.transform.position = Vector3.MoveTowards(this.transform.position, target, speed * Time.deltaTime);\n    }    \n}\n```\n\n\n\n**5.顺序动作组合类实现(CCSequenceAction)**\n\n* 实现一个动作组合序列，顺序播放动作。\n* 让动作组合继承抽象动作SSAction，能够进一步组合；实现回调接收，能接受被组合动作的事件。\n* 创建一个动作顺序执行序列，-1表示无限循环，start开始动作。\n* SSActionEvent 收到当前动作执行完成，推下一个动作，如果完成一次循环，减次数。如完成，通知该动作的管理者。\n* Start 执行动作前，为每个动作注入当前动作游戏对象，并将自己作为动作事件的接收者。\n* OnDestroy 如果自己被注销，应该释放自己管理的动作。这里不会被注销，因此没有实现该功能。\n* 这是标准的组合设计模式。被组合对象和组合对象同属一种类型。通过该模式，我们能实现几乎满足所有越位需要、非常复杂的动作管理。\n\n```c#\npublic class CCSequenceAction : SSAction, ISSActionCallback\n{\n    public List<SSAction> sequence; //动作序列\n    public int repeat = -1; //重复次数\n    public int start = 0; //动作开始指针\n\n    //生产函数(工厂模式)\n    public static CCSequenceAction GetSSAction(int repeat, int start, List<SSAction> sequence)\n    {\n        CCSequenceAction action = ScriptableObject.CreateInstance<CCSequenceAction>();\n        action.repeat = repeat;\n        action.sequence = sequence;\n        action.start = start;\n        return action;\n    }\n\n    public override void Start()\n    {\n        foreach (SSAction action in sequence)\n        {\n            action.gameObject = this.gameObject;\n            action.transform = this.transform;\n            action.callback = this;\n            action.Start();\n        }\n    }\n\n    public override void Update()\n    {\n        if (sequence.Count == 0)    \n            return;\n        if (start < sequence.Count)\n            sequence[start].Update();\n    }\n\n    //回调处理，当有动作完成时触发\n    public void SSActionEvent(\n        SSAction source,\n        SSActionEventType events = SSActionEventType.Completed,\n        int Param = 0,\n        string strParam = null,\n        Object objectParam = null)\n    {\n        source.destroy = false;\n        this.start++;\n        if (this.start >= sequence.Count)\n        {\n            this.start = 0;\n            if (repeat > 0)\n                repeat--;\n            if (repeat == 0)\n            {\n                this.destroy = true;\n                this.callback.SSActionEvent(this);\n            }\n        }\n    }\n\n    void OnDestroy()\n    {\n        //TODO: Something\n    }\n}\n```\n\n\n\n**6.动作组合管理(CCActionManager)**\n\n上一版本的moveable脚本拆分到这个类和FirstController的方法中，实现船和角色的移动管理。\n\n```c#\n// 将原来移动的方法 放在这里\npublic class CCActionManager : SSActionManager, ISSActionCallback\n{\n    //是否正在运动\n    private bool isMoving = false;\n    //船移动动作类\n    public CCMoveToAction moveBoatAction;\n    //人移动动作类(需要组合)\n    public CCSequenceAction moveRoleAction;\n    //控制器\n    public FirstController controller;\n\n    protected new void Start()\n    {\n        controller = (FirstController)Director.getInstance().currentSceneController;\n        controller.actionManager = this;\n    }\n\n    public bool IsMoving()\n    {\n        return isMoving;\n    }\n\n    //移动船\n    public void MoveBoat(GameObject boat, Vector3 target, float speed)\n    {\n        if (isMoving)\n            return;\n        isMoving = true;\n        moveBoatAction = CCMoveToAction.GetSSAction(target, speed);\n        this.RunAction(boat, moveBoatAction, this);\n    }\n\n    //移动人\n    public void MoveRole(GameObject role, Vector3 mid_destination, Vector3 destination, int speed)\n    {\n        if (isMoving)\n            return;\n        isMoving = true;\n        moveRoleAction = CCSequenceAction.GetSSAction(0, 0, new List<SSAction> \n            {   CCMoveToAction.GetSSAction(mid_destination, speed), \n                CCMoveToAction.GetSSAction(destination, speed) });\n        this.RunAction(role, moveRoleAction, this);\n    }\n\n    //回调函数\n    public void SSActionEvent(SSAction source,\n    SSActionEventType events = SSActionEventType.Completed,\n    int intParam = 0,\n    string strParam = null,\n    Object objectParam = null)\n    {\n        isMoving = false;\n    }\n}\n```\n\n\n\n#### 2 部分控制类的设计\n\n**1.最高层控制器(FirstController)**\n\n* 这里仅展示有增改的函数方法，增添了一个裁判反馈信息`JudgeCallback`，实现裁判类的回调函数。\n* 将原有检测游戏状态的check函数抽离给裁判类JudgeController处理。\n* 处理了原有可移动脚本moveable的一些部分，利于与动作管理器结合。\n\n```c#\npublic class FirstController : MonoBehaviour, ISceneController, IUserAction\n{\n    readonly Vector3 waterPos = new Vector3(0,0.5F,0);\n    public CCActionManager actionManager;\n    public JudgeController judgeController;\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n    private myCharacterController[] characters;\n    myUserGUI userGUI;\n    public bool isRunning;\n    public float time;\n\n    public void JudgeCallback(bool _isRunning, string message)\n    {\n        userGUI.gameMessage = message;\n        userGUI.time = (int)time;\n        this.isRunning = _isRunning;\n    }\n\n    void Start ()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        judgeController = gameObject.AddComponent<JudgeController>() as JudgeController;\n        characters = new myCharacterController[6];\n        isRunning = true;\n        time = 60;\n        LoadResources();\n    }\n\n    public void moveBoat(){\n        if(isRunning == false || actionManager.IsMoving())\n            return;\n        if(boat.isEmpty())\n            return;\n        string direct = boat.getDirection();\n        Vector3 destination = boat.getPosition();        \n        if (direct == \"End\") {\n\t\t\tboat.setDirection(\"Start\");\n\t\t} \n\t\telse {\n\t\t\tboat.setDirection(\"End\");\n\t\t}\n        actionManager.MoveBoat(boat.getGameobj(), destination, 20);\n    }\n\n    public void ClickCharacter(myCharacterController cC){\n        if(isRunning == false || actionManager.IsMoving())\n            return;\n        if(cC.isOnBoat()){\n            CoastController coast;\n            if(boat.getDirection()==\"Start\")\n                coast = startCoast;\n            else\n                coast = endCoast;\n\n            boat.getOffBoat(cC.getName());\n            Vector3 destination = coast.getEmptyPosition();\n            Vector3 middle = destination;\n            if (destination.y < cC.GetGameObject().transform.position.y) {\n\t\t\t    middle.y = cC.GetGameObject().transform.position.y;\n\t\t    } \n\t\t    else {\n\t\t\t    middle.x = cC.GetGameObject().transform.position.x;\n\t\t    }\n            // cC.moveTo(coast.getEmptyPosition());\n            actionManager.MoveRole(cC.GetGameObject(), middle, destination, 20);\n            cC.getOnCoast(coast);\n            coast.getOnCoast(cC);\n        }\n        else{\n            CoastController coast = cC.getCoastController();\n            if(boat.getEmptyIndex () == -1 || coast.getDirection() != boat.getDirection())\n                return;\n            coast.getOffCoast(cC.getName());\n            Vector3 destination = boat.getEmptyPosition();\n            Vector3 middle = destination;\n            if (destination.y < cC.GetGameObject().transform.position.y) {\n\t\t\t    middle.y = cC.GetGameObject().transform.position.y;\n\t\t    } \n\t\t    else {\n\t\t\t    middle.x = cC.GetGameObject().transform.position.x;\n\t\t    }\n            actionManager.MoveRole(cC.GetGameObject(), middle, destination, 20);\n            // cC.moveTo(boat.getEmptyPosition());\n            cC.getOnBoat(boat);\n            boat.getOnBoat(cC);\n        }\n    }\n\n    public void Restart(){\n        //boat 移动归位\n        if(boat.getDirection()==\"End\"){\n            Vector3 destination = boat.getPosition();\n            actionManager.MoveBoat(boat.getGameobj(), destination, 20);\n        }\n        boat.reset();\n        startCoast.reset();\n        endCoast.reset();\n        for(int i=0;i<characters.Length;i++)\n            characters[i].reset();\n        isRunning = true;\n        time = 60;\n    }\n\n}\n```\n\n\n\n**2.裁判类(JudgeController)**\n\n实现原有FristController的check函数功能，检测游戏状态，在游戏结束时用过回调信息通知FirstController。\n\n```c#\npublic class JudgeController : MonoBehaviour {\n    public FirstController mainController;\n    public CoastController startCoast;\n    public CoastController endCoast;\n    public BoatController boat;\n\n\n    void Start()\n    {\n        this.mainController = (FirstController)Director.getInstance().currentSceneController;\n        this.startCoast = mainController.startCoast;\n        this.endCoast = mainController.endCoast;\n        this.boat = mainController.boat;\n\n    }\n\n    void Update()\n    {\n        if (!mainController.isRunning)\n            return;\n        if(!boat.isStop())\n            return;\n        if (mainController.time <= 0)\n        {\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n        \n        this.gameObject.GetComponent<myUserGUI>().gameMessage = \"\";\n\n        int startPriest = 0;\n        int endPriest = 0;\n        int startDevil = 0;\n        int endDevil = 0;\n\n        int[] startCount = startCoast.getNum();\n        startPriest += startCount[0];\n        startDevil += startCount[1];\n\n        int[] endCount = endCoast.getNum();\n        endPriest += endCount[0];\n        endDevil += endCount[1];\n\n        if(endDevil+endPriest ==6){\n            mainController.JudgeCallback(false, \"You Win!\");\n            return;\n        }\n\n        int[] boatCount = boat.getNum();\n        if(boat.getDirection() == \"End\"){\n            endPriest += boatCount[0];\n            endDevil += boatCount[1];\n        }\n        else{\n            startPriest += boatCount[0];\n            startDevil += boatCount[1];\n        }\n\n        if(startPriest<startDevil && startPriest>0){\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n        if(endPriest<endDevil && endPriest>0){\n            mainController.JudgeCallback(false, \"Game Over!\");\n            return;\n        }\n    }\n}\n```\n\n\n\n\n\n> Cauchy        2022.11.05","slug":"2022/Homework4/Homework4","published":1,"updated":"2023-05-19T07:05:26.740Z","comments":1,"photos":[],"link":"","_id":"clhudj1fb000b7g84bafo9u51","content":"<blockquote>\n<p>作业简介：</p>\n<p>1.基本操作演练（游戏场景）</p>\n<p>2.编程实践</p>\n</blockquote>\n<span id=\"more\"></span>\n<p>🥘</p>\n<h3 id=\"一、基本操作演练\">一、基本操作演练</h3>\n<ul>\n<li>下载Fantasy Skybox FREE，构建自己的游戏场景（含天空、光源、音效、地形）</li>\n</ul>\n<p><img src=\"../../../assets/game/1105/scene.jpg\" alt=\"scene\"></p>\n<ul>\n<li>写一个简单的总结，总结游戏对象的使用</li>\n</ul>\n<p>目前学习到的一些游戏对象包括：3D Object里的基本物体和Terrain、Light、Camera、Skybox、Audio。每个GameObject都有Transform属性来设置位置旋转大小等。</p>\n<ul>\n<li>\n<p>基本物体（Cube、Sphere之类的）：单纯的物体，通过添加材质更改外观，添加各种组件实现功能。</p>\n</li>\n<li>\n<p>Terrain：地面，通过Terrain自带的编辑工具可以编辑地形，如更改地形大小，修改地形高度，给地形“上色”，还可以添加树木花草等。我们更多地会选择使用别人做好现成的素材。</p>\n<p><img src=\"../../../assets/game/1105/terrain1.jpg\" alt=\"terrain1\"></p>\n<p><img src=\"../../../assets/game/1105/terrain2.jpg\" alt=\"terrain2\"></p>\n</li>\n<li>\n<p>Light：灯光。光影的合理设置能更好地表达3D环境的颜色与情绪。有平行光、聚光灯、点光源、区域光等，不同光有不同属性面板。</p>\n<p>如点光源这个面板，我们能看到像颜色、阴影等设置。</p>\n<p><img src=\"../../../assets/game/1105/Light.jpg\" alt=\"Light\"></p>\n</li>\n<li>\n<p>Camera：摄影机。第一人称游戏可以作为玩家的眼睛，第三人称游戏可以跟随玩家运动。多摄像机是制造效果的重要手段。摄像机属性面板如下：</p>\n<p><img src=\"../../../assets/game/1105/Camera.jpg\" alt=\"Camera\"></p>\n<p>各属性说明可参考官方文档：<a href=\"https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html\">https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html</a></p>\n</li>\n<li>\n<p>Skybox：天空盒（一种材料）。根据shader着色器的类型不同，需要配置不同的天空盒素材。如Skybox/Cubemap是一个圆形图片、Mobile/Skybox是6面图片、Skybox/Panoramic是一张全景图。制作好天空盒材质后，可以放到Camera的Skybox部件中。</p>\n<p><img src=\"../../../assets/game/1105/skybox.jpg\" alt=\"skybox\"></p>\n<p><img src=\"../../../assets/game/1105/skybox2.jpg\" alt=\"skybox2\"></p>\n</li>\n<li>\n<p>Audio：音源。可利用Audio Source在场景中播放声音，利用附着在角色对象上的Audio Listener监听场景中的声音。Audio Source可以设置为3D，听起来有立体的效果。通过混响等技巧可以产生更复杂的效果。</p>\n<p><img src=\"../../../assets/game/1105/audio.jpg\" alt=\"audio\"></p>\n</li>\n</ul>\n<p>🍜</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>牧师与魔鬼 动作分离版+设计一个裁判类（当游戏到达结束条件时，通知场景控制器游戏结束）</p>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts</a></p>\n<p>对比上一个版本的一些区别：</p>\n<ul>\n<li>将动作抽离出来形成一个动作管理器</li>\n<li>增加了裁判类通知游戏结束</li>\n<li>增加了计时器功能</li>\n<li>游戏结束会在船靠岸之后才提示弹出来</li>\n</ul>\n<p>实际效果如下图：</p>\n<p><img src=\"../../../assets/game/1105/anime.gif\" alt=\"anime\"></p>\n<h4 id=\"1-动作管理器的设计\">1 动作管理器的设计</h4>\n<p><img src=\"../../../assets/game/1105/uml.jpg\" alt=\"uml\"></p>\n<ul>\n<li>通过门面模式（控制器模式）输出组合好的几个动作，供原来程序调用。</li>\n<li>通过组合模式实现动作组合，按组合模式设计方法</li>\n<li>接口回调（函数回调）实现管理者与被管理者解耦</li>\n<li>通过模板方法，让使用者减少对动作管理过程细节的要求</li>\n<li>优点：\n<ul>\n<li>程序更能适应需求变化</li>\n<li>对象更容易被复用</li>\n<li>程序更易于维护</li>\n</ul>\n</li>\n</ul>\n<p><strong>1.动作基类(SSAction)</strong></p>\n<ul>\n<li>SSAction是动作的基类，其他动作类都继承于它。</li>\n<li>ScriptableObject是不需要绑定GameObject对象的可编程基类。这些对象受Unity引擎场景管理。</li>\n<li>protected 防止用户自己new抽象的对象</li>\n<li>使用virtual申明虚方法，通过重写实现多态。</li>\n<li>利用接口(ISSActionCallback)实现消息通知，避免与动作管理者直接依赖</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SSAction</span> : <span class=\"hljs-title\">ScriptableObject</span> <br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> enable = <span class=\"hljs-literal\">true</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> destroy = <span class=\"hljs-literal\">false</span>;<br><br>    <span class=\"hljs-keyword\">public</span> GameObject gameObject &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br>    <span class=\"hljs-keyword\">public</span> Transform transform &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br>    <span class=\"hljs-keyword\">public</span> ISSActionCallback callback &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-title\">SSAction</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> System.NotImplementedException();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> System.NotImplementedException();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>2.动作管理基类(SSActionManager)</strong></p>\n<ul>\n<li>该类实现所有动作的基本管理，CCActionManager会继承于它。</li>\n<li>利用一个动作字典来进行动作的运行，先将waitingAdd中的动作加入字典中，运行动作后，再将它加入到waitingDelete中销毁。由于字典是线程不安全的，如果控制好队列，如每次最多存在一个动作，就不会导致动作的混乱。</li>\n<li>提供了添加新动作的方法RunAction。该方法把游戏对象与动作绑定，并绑定该动作事件的消息接受者。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SSActionManager</span> : <span class=\"hljs-title\">MonoBehaviour</span> &#123;<br>    <span class=\"hljs-comment\">//动作集，以字典形式存在</span><br>    <span class=\"hljs-keyword\">private</span> Dictionary&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt; actions = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt;();<br>    <span class=\"hljs-comment\">//等待被加入的动作队列(动作即将开始)</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;SSAction&gt; waitingAdd = <span class=\"hljs-keyword\">new</span> List&lt;SSAction&gt;();<br>    <span class=\"hljs-comment\">//等待被删除的动作队列(动作已完成)</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;<span class=\"hljs-built_in\">int</span>&gt; waitingDelete = <span class=\"hljs-keyword\">new</span> List&lt;<span class=\"hljs-built_in\">int</span>&gt;();<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//将waitingAdd中的动作保存</span><br>        <span class=\"hljs-keyword\">foreach</span> (SSAction ac <span class=\"hljs-keyword\">in</span> waitingAdd)<br>            actions[ac.GetInstanceID()] = ac;<br>        waitingAdd.Clear();<br><br>        <span class=\"hljs-comment\">//运行被保存的事件</span><br>        <span class=\"hljs-keyword\">foreach</span> (KeyValuePair&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt; kv <span class=\"hljs-keyword\">in</span> actions)<br>        &#123;<br>            SSAction ac = kv.Value;<br>            <span class=\"hljs-keyword\">if</span> (ac.destroy)<br>            &#123;<br>                waitingDelete.Add(ac.GetInstanceID());<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ac.enable)<br>            &#123;<br>                ac.Update();<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-comment\">//销毁waitingDelete中的动作</span><br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-built_in\">int</span> key <span class=\"hljs-keyword\">in</span> waitingDelete)<br>        &#123;<br>            SSAction ac = actions[key];<br>            actions.Remove(key);<br>            Destroy(ac);<br>        &#125;<br>        waitingDelete.Clear();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//准备运行一个动作，将动作初始化，并加入到waitingAdd</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RunAction</span>(<span class=\"hljs-params\">GameObject gameObject, SSAction action, ISSActionCallback manager</span>)</span><br>    &#123;<br>        action.gameObject = gameObject;<br>        action.transform = gameObject.transform;<br>        action.callback = manager;<br>        waitingAdd.Add(action);<br>        action.Start();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>3.动作事件接口定义(ISSActionCallback)</strong></p>\n<ul>\n<li>接口作为接收通知对象的抽象类型，所有事件管理者都必须实现该接口，来实现事件调度。</li>\n<li>事件类型定义，使用了<strong>枚举变量</strong>。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">enum</span> SSActionEventType:<span class=\"hljs-built_in\">int</span> &#123;Started, Completed&#125;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-comment\">//回调函数</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    </span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>4.简单动作实现(CCMoveToAction)</strong></p>\n<ul>\n<li>实现移动动作，将物体移动到目标位置，并通知任务完成。</li>\n<li>让Unity创建动作类，确保内存正确回收。</li>\n<li>override 多态，c++必须申明重写，java则默认重写。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCMoveToAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <br>    <span class=\"hljs-keyword\">public</span> Vector3 target; <span class=\"hljs-comment\">//目的地</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> speed; <span class=\"hljs-comment\">//速度</span><br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-title\">CCMoveToAction</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-comment\">//生产函数(工厂模式)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCMoveToAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\">Vector3 target, <span class=\"hljs-built_in\">float</span> speed</span>)</span><br>    &#123;<br>        CCMoveToAction action = ScriptableObject.CreateInstance&lt;CCMoveToAction&gt;();<br>        action.target = target;<br>        action.speed = speed;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;&#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//判断是否符合移动条件</span><br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject == <span class=\"hljs-literal\">null</span> || <span class=\"hljs-keyword\">this</span>.transform.position == target)<br>        &#123;<br><br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-comment\">//移动</span><br>        <span class=\"hljs-keyword\">this</span>.transform.position = Vector3.MoveTowards(<span class=\"hljs-keyword\">this</span>.transform.position, target, speed * Time.deltaTime);<br>    &#125;    <br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>5.顺序动作组合类实现(CCSequenceAction)</strong></p>\n<ul>\n<li>实现一个动作组合序列，顺序播放动作。</li>\n<li>让动作组合继承抽象动作SSAction，能够进一步组合；实现回调接收，能接受被组合动作的事件。</li>\n<li>创建一个动作顺序执行序列，-1表示无限循环，start开始动作。</li>\n<li>SSActionEvent 收到当前动作执行完成，推下一个动作，如果完成一次循环，减次数。如完成，通知该动作的管理者。</li>\n<li>Start 执行动作前，为每个动作注入当前动作游戏对象，并将自己作为动作事件的接收者。</li>\n<li>OnDestroy 如果自己被注销，应该释放自己管理的动作。这里不会被注销，因此没有实现该功能。</li>\n<li>这是标准的组合设计模式。被组合对象和组合对象同属一种类型。通过该模式，我们能实现几乎满足所有越位需要、非常复杂的动作管理。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCSequenceAction</span> : <span class=\"hljs-title\">SSAction</span>, <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> List&lt;SSAction&gt; sequence; <span class=\"hljs-comment\">//动作序列</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> repeat = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//重复次数</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> start = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//动作开始指针</span><br><br>    <span class=\"hljs-comment\">//生产函数(工厂模式)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCSequenceAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> repeat, <span class=\"hljs-built_in\">int</span> start, List&lt;SSAction&gt; sequence</span>)</span><br>    &#123;<br>        CCSequenceAction action = ScriptableObject.CreateInstance&lt;CCSequenceAction&gt;();<br>        action.repeat = repeat;<br>        action.sequence = sequence;<br>        action.start = start;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">foreach</span> (SSAction action <span class=\"hljs-keyword\">in</span> sequence)<br>        &#123;<br>            action.gameObject = <span class=\"hljs-keyword\">this</span>.gameObject;<br>            action.transform = <span class=\"hljs-keyword\">this</span>.transform;<br>            action.callback = <span class=\"hljs-keyword\">this</span>;<br>            action.Start();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (sequence.Count == <span class=\"hljs-number\">0</span>)    <br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span> (start &lt; sequence.Count)<br>            sequence[start].Update();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//回调处理，当有动作完成时触发</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> Param = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span><br>    &#123;<br>        source.destroy = <span class=\"hljs-literal\">false</span>;<br>        <span class=\"hljs-keyword\">this</span>.start++;<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.start &gt;= sequence.Count)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.start = <span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-keyword\">if</span> (repeat &gt; <span class=\"hljs-number\">0</span>)<br>                repeat--;<br>            <span class=\"hljs-keyword\">if</span> (repeat == <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>                <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDestroy</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> Something</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>6.动作组合管理(CCActionManager)</strong></p>\n<p>上一版本的moveable脚本拆分到这个类和FirstController的方法中，实现船和角色的移动管理。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// 将原来移动的方法 放在这里</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCActionManager</span> : <span class=\"hljs-title\">SSActionManager</span>, <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-comment\">//是否正在运动</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isMoving = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-comment\">//船移动动作类</span><br>    <span class=\"hljs-keyword\">public</span> CCMoveToAction moveBoatAction;<br>    <span class=\"hljs-comment\">//人移动动作类(需要组合)</span><br>    <span class=\"hljs-keyword\">public</span> CCSequenceAction moveRoleAction;<br>    <span class=\"hljs-comment\">//控制器</span><br>    <span class=\"hljs-keyword\">public</span> FirstController controller;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        controller = (FirstController)Director.getInstance().currentSceneController;<br>        controller.actionManager = <span class=\"hljs-keyword\">this</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsMoving</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> isMoving;<br>    &#125;<br><br>    <span class=\"hljs-comment\">//移动船</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveBoat</span>(<span class=\"hljs-params\">GameObject boat, Vector3 target, <span class=\"hljs-built_in\">float</span> speed</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (isMoving)<br>            <span class=\"hljs-keyword\">return</span>;<br>        isMoving = <span class=\"hljs-literal\">true</span>;<br>        moveBoatAction = CCMoveToAction.GetSSAction(target, speed);<br>        <span class=\"hljs-keyword\">this</span>.RunAction(boat, moveBoatAction, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//移动人</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveRole</span>(<span class=\"hljs-params\">GameObject role, Vector3 mid_destination, Vector3 destination, <span class=\"hljs-built_in\">int</span> speed</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (isMoving)<br>            <span class=\"hljs-keyword\">return</span>;<br>        isMoving = <span class=\"hljs-literal\">true</span>;<br>        moveRoleAction = CCSequenceAction.GetSSAction(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">new</span> List&lt;SSAction&gt; <br>            &#123;   CCMoveToAction.GetSSAction(mid_destination, speed), <br>                CCMoveToAction.GetSSAction(destination, speed) &#125;);<br>        <span class=\"hljs-keyword\">this</span>.RunAction(role, moveRoleAction, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//回调函数</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\">SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span><br>    &#123;<br>        isMoving = <span class=\"hljs-literal\">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"2-部分控制类的设计\">2 部分控制类的设计</h4>\n<p><strong>1.最高层控制器(FirstController)</strong></p>\n<ul>\n<li>这里仅展示有增改的函数方法，增添了一个裁判反馈信息<code>JudgeCallback</code>，实现裁判类的回调函数。</li>\n<li>将原有检测游戏状态的check函数抽离给裁判类JudgeController处理。</li>\n<li>处理了原有可移动脚本moveable的一些部分，利于与动作管理器结合。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> Vector3 waterPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.5F</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> JudgeController judgeController;<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br>    <span class=\"hljs-keyword\">private</span> myCharacterController[] characters;<br>    myUserGUI userGUI;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isRunning;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> time;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">JudgeCallback</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">bool</span> _isRunning, <span class=\"hljs-built_in\">string</span> message</span>)</span><br>    &#123;<br>        userGUI.gameMessage = message;<br>        userGUI.time = (<span class=\"hljs-built_in\">int</span>)time;<br>        <span class=\"hljs-keyword\">this</span>.isRunning = _isRunning;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        judgeController = gameObject.AddComponent&lt;JudgeController&gt;() <span class=\"hljs-keyword\">as</span> JudgeController;<br>        characters = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>        isRunning = <span class=\"hljs-literal\">true</span>;<br>        time = <span class=\"hljs-number\">60</span>;<br>        LoadResources();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isRunning == <span class=\"hljs-literal\">false</span> || actionManager.IsMoving())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(boat.isEmpty())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-built_in\">string</span> direct = boat.getDirection();<br>        Vector3 destination = boat.getPosition();        <br>        <span class=\"hljs-keyword\">if</span> (direct == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tboat.setDirection(<span class=\"hljs-string\">&quot;Start&quot;</span>);<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tboat.setDirection(<span class=\"hljs-string\">&quot;End&quot;</span>);<br>\t\t&#125;<br>        actionManager.MoveBoat(boat.getGameobj(), destination, <span class=\"hljs-number\">20</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isRunning == <span class=\"hljs-literal\">false</span> || actionManager.IsMoving())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(cC.isOnBoat())&#123;<br>            CoastController coast;<br>            <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;Start&quot;</span>)<br>                coast = startCoast;<br>            <span class=\"hljs-keyword\">else</span><br>                coast = endCoast;<br><br>            boat.getOffBoat(cC.getName());<br>            Vector3 destination = coast.getEmptyPosition();<br>            Vector3 middle = destination;<br>            <span class=\"hljs-keyword\">if</span> (destination.y &lt; cC.GetGameObject().transform.position.y) &#123;<br>\t\t\t    middle.y = cC.GetGameObject().transform.position.y;<br>\t\t    &#125; <br>\t\t    <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t    middle.x = cC.GetGameObject().transform.position.x;<br>\t\t    &#125;<br>            <span class=\"hljs-comment\">// cC.moveTo(coast.getEmptyPosition());</span><br>            actionManager.MoveRole(cC.GetGameObject(), middle, destination, <span class=\"hljs-number\">20</span>);<br>            cC.getOnCoast(coast);<br>            coast.getOnCoast(cC);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            CoastController coast = cC.getCoastController();<br>            <span class=\"hljs-keyword\">if</span>(boat.getEmptyIndex () == <span class=\"hljs-number\">-1</span> || coast.getDirection() != boat.getDirection())<br>                <span class=\"hljs-keyword\">return</span>;<br>            coast.getOffCoast(cC.getName());<br>            Vector3 destination = boat.getEmptyPosition();<br>            Vector3 middle = destination;<br>            <span class=\"hljs-keyword\">if</span> (destination.y &lt; cC.GetGameObject().transform.position.y) &#123;<br>\t\t\t    middle.y = cC.GetGameObject().transform.position.y;<br>\t\t    &#125; <br>\t\t    <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t    middle.x = cC.GetGameObject().transform.position.x;<br>\t\t    &#125;<br>            actionManager.MoveRole(cC.GetGameObject(), middle, destination, <span class=\"hljs-number\">20</span>);<br>            <span class=\"hljs-comment\">// cC.moveTo(boat.getEmptyPosition());</span><br>            cC.getOnBoat(boat);<br>            boat.getOnBoat(cC);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        <span class=\"hljs-comment\">//boat 移动归位</span><br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            Vector3 destination = boat.getPosition();<br>            actionManager.MoveBoat(boat.getGameobj(), destination, <span class=\"hljs-number\">20</span>);<br>        &#125;<br>        boat.reset();<br>        startCoast.reset();<br>        endCoast.reset();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;characters.Length;i++)<br>            characters[i].reset();<br>        isRunning = <span class=\"hljs-literal\">true</span>;<br>        time = <span class=\"hljs-number\">60</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>2.裁判类(JudgeController)</strong></p>\n<p>实现原有FristController的check函数功能，检测游戏状态，在游戏结束时用过回调信息通知FirstController。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JudgeController</span> : <span class=\"hljs-title\">MonoBehaviour</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> FirstController mainController;<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.mainController = (FirstController)Director.getInstance().currentSceneController;<br>        <span class=\"hljs-keyword\">this</span>.startCoast = mainController.startCoast;<br>        <span class=\"hljs-keyword\">this</span>.endCoast = mainController.endCoast;<br>        <span class=\"hljs-keyword\">this</span>.boat = mainController.boat;<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (!mainController.isRunning)<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(!boat.isStop())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span> (mainController.time &lt;= <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;myUserGUI&gt;().gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br><br>        <span class=\"hljs-built_in\">int</span> startPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> startDevil = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endDevil = <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-built_in\">int</span>[] startCount = startCoast.getNum();<br>        startPriest += startCount[<span class=\"hljs-number\">0</span>];<br>        startDevil += startCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-built_in\">int</span>[] endCount = endCoast.getNum();<br>        endPriest += endCount[<span class=\"hljs-number\">0</span>];<br>        endDevil += endCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-keyword\">if</span>(endDevil+endPriest ==<span class=\"hljs-number\">6</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;You Win!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br><br>        <span class=\"hljs-built_in\">int</span>[] boatCount = boat.getNum();<br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection() == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            endPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            endDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            startPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            startDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(startPriest&lt;startDevil &amp;&amp; startPriest&gt;<span class=\"hljs-number\">0</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(endPriest&lt;endDevil &amp;&amp; endPriest&gt;<span class=\"hljs-number\">0</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>Cauchy        2022.11.05</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：</p>\n<p>1.基本操作演练（游戏场景）</p>\n<p>2.编程实践</p>\n</blockquote>","more":"<p>🥘</p>\n<h3 id=\"一、基本操作演练\">一、基本操作演练</h3>\n<ul>\n<li>下载Fantasy Skybox FREE，构建自己的游戏场景（含天空、光源、音效、地形）</li>\n</ul>\n<p><img src=\"../../../assets/game/1105/scene.jpg\" alt=\"scene\"></p>\n<ul>\n<li>写一个简单的总结，总结游戏对象的使用</li>\n</ul>\n<p>目前学习到的一些游戏对象包括：3D Object里的基本物体和Terrain、Light、Camera、Skybox、Audio。每个GameObject都有Transform属性来设置位置旋转大小等。</p>\n<ul>\n<li>\n<p>基本物体（Cube、Sphere之类的）：单纯的物体，通过添加材质更改外观，添加各种组件实现功能。</p>\n</li>\n<li>\n<p>Terrain：地面，通过Terrain自带的编辑工具可以编辑地形，如更改地形大小，修改地形高度，给地形“上色”，还可以添加树木花草等。我们更多地会选择使用别人做好现成的素材。</p>\n<p><img src=\"../../../assets/game/1105/terrain1.jpg\" alt=\"terrain1\"></p>\n<p><img src=\"../../../assets/game/1105/terrain2.jpg\" alt=\"terrain2\"></p>\n</li>\n<li>\n<p>Light：灯光。光影的合理设置能更好地表达3D环境的颜色与情绪。有平行光、聚光灯、点光源、区域光等，不同光有不同属性面板。</p>\n<p>如点光源这个面板，我们能看到像颜色、阴影等设置。</p>\n<p><img src=\"../../../assets/game/1105/Light.jpg\" alt=\"Light\"></p>\n</li>\n<li>\n<p>Camera：摄影机。第一人称游戏可以作为玩家的眼睛，第三人称游戏可以跟随玩家运动。多摄像机是制造效果的重要手段。摄像机属性面板如下：</p>\n<p><img src=\"../../../assets/game/1105/Camera.jpg\" alt=\"Camera\"></p>\n<p>各属性说明可参考官方文档：<a href=\"https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html\">https://docs.unity.cn/cn/2021.3/Manual/class-Camera.html</a></p>\n</li>\n<li>\n<p>Skybox：天空盒（一种材料）。根据shader着色器的类型不同，需要配置不同的天空盒素材。如Skybox/Cubemap是一个圆形图片、Mobile/Skybox是6面图片、Skybox/Panoramic是一张全景图。制作好天空盒材质后，可以放到Camera的Skybox部件中。</p>\n<p><img src=\"../../../assets/game/1105/skybox.jpg\" alt=\"skybox\"></p>\n<p><img src=\"../../../assets/game/1105/skybox2.jpg\" alt=\"skybox2\"></p>\n</li>\n<li>\n<p>Audio：音源。可利用Audio Source在场景中播放声音，利用附着在角色对象上的Audio Listener监听场景中的声音。Audio Source可以设置为3D，听起来有立体的效果。通过混响等技巧可以产生更复杂的效果。</p>\n<p><img src=\"../../../assets/game/1105/audio.jpg\" alt=\"audio\"></p>\n</li>\n</ul>\n<p>🍜</p>\n<h3 id=\"二、编程实践\">二、编程实践</h3>\n<p>牧师与魔鬼 动作分离版+设计一个裁判类（当游戏到达结束条件时，通知场景控制器游戏结束）</p>\n<p>项目地址：<a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw4/Assets/Scripts</a></p>\n<p>对比上一个版本的一些区别：</p>\n<ul>\n<li>将动作抽离出来形成一个动作管理器</li>\n<li>增加了裁判类通知游戏结束</li>\n<li>增加了计时器功能</li>\n<li>游戏结束会在船靠岸之后才提示弹出来</li>\n</ul>\n<p>实际效果如下图：</p>\n<p><img src=\"../../../assets/game/1105/anime.gif\" alt=\"anime\"></p>\n<h4 id=\"1-动作管理器的设计\">1 动作管理器的设计</h4>\n<p><img src=\"../../../assets/game/1105/uml.jpg\" alt=\"uml\"></p>\n<ul>\n<li>通过门面模式（控制器模式）输出组合好的几个动作，供原来程序调用。</li>\n<li>通过组合模式实现动作组合，按组合模式设计方法</li>\n<li>接口回调（函数回调）实现管理者与被管理者解耦</li>\n<li>通过模板方法，让使用者减少对动作管理过程细节的要求</li>\n<li>优点：\n<ul>\n<li>程序更能适应需求变化</li>\n<li>对象更容易被复用</li>\n<li>程序更易于维护</li>\n</ul>\n</li>\n</ul>\n<p><strong>1.动作基类(SSAction)</strong></p>\n<ul>\n<li>SSAction是动作的基类，其他动作类都继承于它。</li>\n<li>ScriptableObject是不需要绑定GameObject对象的可编程基类。这些对象受Unity引擎场景管理。</li>\n<li>protected 防止用户自己new抽象的对象</li>\n<li>使用virtual申明虚方法，通过重写实现多态。</li>\n<li>利用接口(ISSActionCallback)实现消息通知，避免与动作管理者直接依赖</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SSAction</span> : <span class=\"hljs-title\">ScriptableObject</span> <br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> enable = <span class=\"hljs-literal\">true</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> destroy = <span class=\"hljs-literal\">false</span>;<br><br>    <span class=\"hljs-keyword\">public</span> GameObject gameObject &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br>    <span class=\"hljs-keyword\">public</span> Transform transform &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br>    <span class=\"hljs-keyword\">public</span> ISSActionCallback callback &#123;<span class=\"hljs-keyword\">get</span>; <span class=\"hljs-keyword\">set</span>;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-title\">SSAction</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> System.NotImplementedException();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">virtual</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> System.NotImplementedException();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>2.动作管理基类(SSActionManager)</strong></p>\n<ul>\n<li>该类实现所有动作的基本管理，CCActionManager会继承于它。</li>\n<li>利用一个动作字典来进行动作的运行，先将waitingAdd中的动作加入字典中，运行动作后，再将它加入到waitingDelete中销毁。由于字典是线程不安全的，如果控制好队列，如每次最多存在一个动作，就不会导致动作的混乱。</li>\n<li>提供了添加新动作的方法RunAction。该方法把游戏对象与动作绑定，并绑定该动作事件的消息接受者。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SSActionManager</span> : <span class=\"hljs-title\">MonoBehaviour</span> &#123;<br>    <span class=\"hljs-comment\">//动作集，以字典形式存在</span><br>    <span class=\"hljs-keyword\">private</span> Dictionary&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt; actions = <span class=\"hljs-keyword\">new</span> Dictionary&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt;();<br>    <span class=\"hljs-comment\">//等待被加入的动作队列(动作即将开始)</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;SSAction&gt; waitingAdd = <span class=\"hljs-keyword\">new</span> List&lt;SSAction&gt;();<br>    <span class=\"hljs-comment\">//等待被删除的动作队列(动作已完成)</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;<span class=\"hljs-built_in\">int</span>&gt; waitingDelete = <span class=\"hljs-keyword\">new</span> List&lt;<span class=\"hljs-built_in\">int</span>&gt;();<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//将waitingAdd中的动作保存</span><br>        <span class=\"hljs-keyword\">foreach</span> (SSAction ac <span class=\"hljs-keyword\">in</span> waitingAdd)<br>            actions[ac.GetInstanceID()] = ac;<br>        waitingAdd.Clear();<br><br>        <span class=\"hljs-comment\">//运行被保存的事件</span><br>        <span class=\"hljs-keyword\">foreach</span> (KeyValuePair&lt;<span class=\"hljs-built_in\">int</span>, SSAction&gt; kv <span class=\"hljs-keyword\">in</span> actions)<br>        &#123;<br>            SSAction ac = kv.Value;<br>            <span class=\"hljs-keyword\">if</span> (ac.destroy)<br>            &#123;<br>                waitingDelete.Add(ac.GetInstanceID());<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ac.enable)<br>            &#123;<br>                ac.Update();<br>            &#125;<br>        &#125;<br><br>        <span class=\"hljs-comment\">//销毁waitingDelete中的动作</span><br>        <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-built_in\">int</span> key <span class=\"hljs-keyword\">in</span> waitingDelete)<br>        &#123;<br>            SSAction ac = actions[key];<br>            actions.Remove(key);<br>            Destroy(ac);<br>        &#125;<br>        waitingDelete.Clear();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//准备运行一个动作，将动作初始化，并加入到waitingAdd</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">RunAction</span>(<span class=\"hljs-params\">GameObject gameObject, SSAction action, ISSActionCallback manager</span>)</span><br>    &#123;<br>        action.gameObject = gameObject;<br>        action.transform = gameObject.transform;<br>        action.callback = manager;<br>        waitingAdd.Add(action);<br>        action.Start();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>3.动作事件接口定义(ISSActionCallback)</strong></p>\n<ul>\n<li>接口作为接收通知对象的抽象类型，所有事件管理者都必须实现该接口，来实现事件调度。</li>\n<li>事件类型定义，使用了<strong>枚举变量</strong>。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">enum</span> SSActionEventType:<span class=\"hljs-built_in\">int</span> &#123;Started, Completed&#125;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-comment\">//回调函数</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    </span>)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>4.简单动作实现(CCMoveToAction)</strong></p>\n<ul>\n<li>实现移动动作，将物体移动到目标位置，并通知任务完成。</li>\n<li>让Unity创建动作类，确保内存正确回收。</li>\n<li>override 多态，c++必须申明重写，java则默认重写。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCMoveToAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <br>    <span class=\"hljs-keyword\">public</span> Vector3 target; <span class=\"hljs-comment\">//目的地</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> speed; <span class=\"hljs-comment\">//速度</span><br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-title\">CCMoveToAction</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-comment\">//生产函数(工厂模式)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCMoveToAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\">Vector3 target, <span class=\"hljs-built_in\">float</span> speed</span>)</span><br>    &#123;<br>        CCMoveToAction action = ScriptableObject.CreateInstance&lt;CCMoveToAction&gt;();<br>        action.target = target;<br>        action.speed = speed;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;&#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//判断是否符合移动条件</span><br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject == <span class=\"hljs-literal\">null</span> || <span class=\"hljs-keyword\">this</span>.transform.position == target)<br>        &#123;<br><br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-comment\">//移动</span><br>        <span class=\"hljs-keyword\">this</span>.transform.position = Vector3.MoveTowards(<span class=\"hljs-keyword\">this</span>.transform.position, target, speed * Time.deltaTime);<br>    &#125;    <br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>5.顺序动作组合类实现(CCSequenceAction)</strong></p>\n<ul>\n<li>实现一个动作组合序列，顺序播放动作。</li>\n<li>让动作组合继承抽象动作SSAction，能够进一步组合；实现回调接收，能接受被组合动作的事件。</li>\n<li>创建一个动作顺序执行序列，-1表示无限循环，start开始动作。</li>\n<li>SSActionEvent 收到当前动作执行完成，推下一个动作，如果完成一次循环，减次数。如完成，通知该动作的管理者。</li>\n<li>Start 执行动作前，为每个动作注入当前动作游戏对象，并将自己作为动作事件的接收者。</li>\n<li>OnDestroy 如果自己被注销，应该释放自己管理的动作。这里不会被注销，因此没有实现该功能。</li>\n<li>这是标准的组合设计模式。被组合对象和组合对象同属一种类型。通过该模式，我们能实现几乎满足所有越位需要、非常复杂的动作管理。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCSequenceAction</span> : <span class=\"hljs-title\">SSAction</span>, <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> List&lt;SSAction&gt; sequence; <span class=\"hljs-comment\">//动作序列</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> repeat = <span class=\"hljs-number\">-1</span>; <span class=\"hljs-comment\">//重复次数</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> start = <span class=\"hljs-number\">0</span>; <span class=\"hljs-comment\">//动作开始指针</span><br><br>    <span class=\"hljs-comment\">//生产函数(工厂模式)</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCSequenceAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> repeat, <span class=\"hljs-built_in\">int</span> start, List&lt;SSAction&gt; sequence</span>)</span><br>    &#123;<br>        CCSequenceAction action = ScriptableObject.CreateInstance&lt;CCSequenceAction&gt;();<br>        action.repeat = repeat;<br>        action.sequence = sequence;<br>        action.start = start;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">foreach</span> (SSAction action <span class=\"hljs-keyword\">in</span> sequence)<br>        &#123;<br>            action.gameObject = <span class=\"hljs-keyword\">this</span>.gameObject;<br>            action.transform = <span class=\"hljs-keyword\">this</span>.transform;<br>            action.callback = <span class=\"hljs-keyword\">this</span>;<br>            action.Start();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (sequence.Count == <span class=\"hljs-number\">0</span>)    <br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span> (start &lt; sequence.Count)<br>            sequence[start].Update();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//回调处理，当有动作完成时触发</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\"></span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">int</span> Param = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">        Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span><br>    &#123;<br>        source.destroy = <span class=\"hljs-literal\">false</span>;<br>        <span class=\"hljs-keyword\">this</span>.start++;<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.start &gt;= sequence.Count)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.start = <span class=\"hljs-number\">0</span>;<br>            <span class=\"hljs-keyword\">if</span> (repeat &gt; <span class=\"hljs-number\">0</span>)<br>                repeat--;<br>            <span class=\"hljs-keyword\">if</span> (repeat == <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>                <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDestroy</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> Something</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>6.动作组合管理(CCActionManager)</strong></p>\n<p>上一版本的moveable脚本拆分到这个类和FirstController的方法中，实现船和角色的移动管理。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// 将原来移动的方法 放在这里</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCActionManager</span> : <span class=\"hljs-title\">SSActionManager</span>, <span class=\"hljs-title\">ISSActionCallback</span><br>&#123;<br>    <span class=\"hljs-comment\">//是否正在运动</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isMoving = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-comment\">//船移动动作类</span><br>    <span class=\"hljs-keyword\">public</span> CCMoveToAction moveBoatAction;<br>    <span class=\"hljs-comment\">//人移动动作类(需要组合)</span><br>    <span class=\"hljs-keyword\">public</span> CCSequenceAction moveRoleAction;<br>    <span class=\"hljs-comment\">//控制器</span><br>    <span class=\"hljs-keyword\">public</span> FirstController controller;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        controller = (FirstController)Director.getInstance().currentSceneController;<br>        controller.actionManager = <span class=\"hljs-keyword\">this</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsMoving</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> isMoving;<br>    &#125;<br><br>    <span class=\"hljs-comment\">//移动船</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveBoat</span>(<span class=\"hljs-params\">GameObject boat, Vector3 target, <span class=\"hljs-built_in\">float</span> speed</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (isMoving)<br>            <span class=\"hljs-keyword\">return</span>;<br>        isMoving = <span class=\"hljs-literal\">true</span>;<br>        moveBoatAction = CCMoveToAction.GetSSAction(target, speed);<br>        <span class=\"hljs-keyword\">this</span>.RunAction(boat, moveBoatAction, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//移动人</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">MoveRole</span>(<span class=\"hljs-params\">GameObject role, Vector3 mid_destination, Vector3 destination, <span class=\"hljs-built_in\">int</span> speed</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (isMoving)<br>            <span class=\"hljs-keyword\">return</span>;<br>        isMoving = <span class=\"hljs-literal\">true</span>;<br>        moveRoleAction = CCSequenceAction.GetSSAction(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">new</span> List&lt;SSAction&gt; <br>            &#123;   CCMoveToAction.GetSSAction(mid_destination, speed), <br>                CCMoveToAction.GetSSAction(destination, speed) &#125;);<br>        <span class=\"hljs-keyword\">this</span>.RunAction(role, moveRoleAction, <span class=\"hljs-keyword\">this</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//回调函数</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">SSActionEvent</span>(<span class=\"hljs-params\">SSAction source,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    SSActionEventType events = SSActionEventType.Completed,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    <span class=\"hljs-built_in\">int</span> intParam = <span class=\"hljs-number\">0</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    <span class=\"hljs-built_in\">string</span> strParam = <span class=\"hljs-literal\">null</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">    Object objectParam = <span class=\"hljs-literal\">null</span></span>)</span><br>    &#123;<br>        isMoving = <span class=\"hljs-literal\">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"2-部分控制类的设计\">2 部分控制类的设计</h4>\n<p><strong>1.最高层控制器(FirstController)</strong></p>\n<ul>\n<li>这里仅展示有增改的函数方法，增添了一个裁判反馈信息<code>JudgeCallback</code>，实现裁判类的回调函数。</li>\n<li>将原有检测游戏状态的check函数抽离给裁判类JudgeController处理。</li>\n<li>处理了原有可移动脚本moveable的一些部分，利于与动作管理器结合。</li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">readonly</span> Vector3 waterPos = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0.5F</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> JudgeController judgeController;<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br>    <span class=\"hljs-keyword\">private</span> myCharacterController[] characters;<br>    myUserGUI userGUI;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isRunning;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> time;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">JudgeCallback</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">bool</span> _isRunning, <span class=\"hljs-built_in\">string</span> message</span>)</span><br>    &#123;<br>        userGUI.gameMessage = message;<br>        userGUI.time = (<span class=\"hljs-built_in\">int</span>)time;<br>        <span class=\"hljs-keyword\">this</span>.isRunning = _isRunning;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        judgeController = gameObject.AddComponent&lt;JudgeController&gt;() <span class=\"hljs-keyword\">as</span> JudgeController;<br>        characters = <span class=\"hljs-keyword\">new</span> myCharacterController[<span class=\"hljs-number\">6</span>];<br>        isRunning = <span class=\"hljs-literal\">true</span>;<br>        time = <span class=\"hljs-number\">60</span>;<br>        LoadResources();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBoat</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isRunning == <span class=\"hljs-literal\">false</span> || actionManager.IsMoving())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(boat.isEmpty())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-built_in\">string</span> direct = boat.getDirection();<br>        Vector3 destination = boat.getPosition();        <br>        <span class=\"hljs-keyword\">if</span> (direct == <span class=\"hljs-string\">&quot;End&quot;</span>) &#123;<br>\t\t\tboat.setDirection(<span class=\"hljs-string\">&quot;Start&quot;</span>);<br>\t\t&#125; <br>\t\t<span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\tboat.setDirection(<span class=\"hljs-string\">&quot;End&quot;</span>);<br>\t\t&#125;<br>        actionManager.MoveBoat(boat.getGameobj(), destination, <span class=\"hljs-number\">20</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ClickCharacter</span>(<span class=\"hljs-params\">myCharacterController cC</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isRunning == <span class=\"hljs-literal\">false</span> || actionManager.IsMoving())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(cC.isOnBoat())&#123;<br>            CoastController coast;<br>            <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;Start&quot;</span>)<br>                coast = startCoast;<br>            <span class=\"hljs-keyword\">else</span><br>                coast = endCoast;<br><br>            boat.getOffBoat(cC.getName());<br>            Vector3 destination = coast.getEmptyPosition();<br>            Vector3 middle = destination;<br>            <span class=\"hljs-keyword\">if</span> (destination.y &lt; cC.GetGameObject().transform.position.y) &#123;<br>\t\t\t    middle.y = cC.GetGameObject().transform.position.y;<br>\t\t    &#125; <br>\t\t    <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t    middle.x = cC.GetGameObject().transform.position.x;<br>\t\t    &#125;<br>            <span class=\"hljs-comment\">// cC.moveTo(coast.getEmptyPosition());</span><br>            actionManager.MoveRole(cC.GetGameObject(), middle, destination, <span class=\"hljs-number\">20</span>);<br>            cC.getOnCoast(coast);<br>            coast.getOnCoast(cC);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            CoastController coast = cC.getCoastController();<br>            <span class=\"hljs-keyword\">if</span>(boat.getEmptyIndex () == <span class=\"hljs-number\">-1</span> || coast.getDirection() != boat.getDirection())<br>                <span class=\"hljs-keyword\">return</span>;<br>            coast.getOffCoast(cC.getName());<br>            Vector3 destination = boat.getEmptyPosition();<br>            Vector3 middle = destination;<br>            <span class=\"hljs-keyword\">if</span> (destination.y &lt; cC.GetGameObject().transform.position.y) &#123;<br>\t\t\t    middle.y = cC.GetGameObject().transform.position.y;<br>\t\t    &#125; <br>\t\t    <span class=\"hljs-keyword\">else</span> &#123;<br>\t\t\t    middle.x = cC.GetGameObject().transform.position.x;<br>\t\t    &#125;<br>            actionManager.MoveRole(cC.GetGameObject(), middle, destination, <span class=\"hljs-number\">20</span>);<br>            <span class=\"hljs-comment\">// cC.moveTo(boat.getEmptyPosition());</span><br>            cC.getOnBoat(boat);<br>            boat.getOnBoat(cC);<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span>&#123;<br>        <span class=\"hljs-comment\">//boat 移动归位</span><br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection()==<span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            Vector3 destination = boat.getPosition();<br>            actionManager.MoveBoat(boat.getGameobj(), destination, <span class=\"hljs-number\">20</span>);<br>        &#125;<br>        boat.reset();<br>        startCoast.reset();<br>        endCoast.reset();<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;characters.Length;i++)<br>            characters[i].reset();<br>        isRunning = <span class=\"hljs-literal\">true</span>;<br>        time = <span class=\"hljs-number\">60</span>;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>2.裁判类(JudgeController)</strong></p>\n<p>实现原有FristController的check函数功能，检测游戏状态，在游戏结束时用过回调信息通知FirstController。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JudgeController</span> : <span class=\"hljs-title\">MonoBehaviour</span> &#123;<br>    <span class=\"hljs-keyword\">public</span> FirstController mainController;<br>    <span class=\"hljs-keyword\">public</span> CoastController startCoast;<br>    <span class=\"hljs-keyword\">public</span> CoastController endCoast;<br>    <span class=\"hljs-keyword\">public</span> BoatController boat;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.mainController = (FirstController)Director.getInstance().currentSceneController;<br>        <span class=\"hljs-keyword\">this</span>.startCoast = mainController.startCoast;<br>        <span class=\"hljs-keyword\">this</span>.endCoast = mainController.endCoast;<br>        <span class=\"hljs-keyword\">this</span>.boat = mainController.boat;<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (!mainController.isRunning)<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span>(!boat.isStop())<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">if</span> (mainController.time &lt;= <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;myUserGUI&gt;().gameMessage = <span class=\"hljs-string\">&quot;&quot;</span>;<br><br>        <span class=\"hljs-built_in\">int</span> startPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endPriest = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> startDevil = <span class=\"hljs-number\">0</span>;<br>        <span class=\"hljs-built_in\">int</span> endDevil = <span class=\"hljs-number\">0</span>;<br><br>        <span class=\"hljs-built_in\">int</span>[] startCount = startCoast.getNum();<br>        startPriest += startCount[<span class=\"hljs-number\">0</span>];<br>        startDevil += startCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-built_in\">int</span>[] endCount = endCoast.getNum();<br>        endPriest += endCount[<span class=\"hljs-number\">0</span>];<br>        endDevil += endCount[<span class=\"hljs-number\">1</span>];<br><br>        <span class=\"hljs-keyword\">if</span>(endDevil+endPriest ==<span class=\"hljs-number\">6</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;You Win!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br><br>        <span class=\"hljs-built_in\">int</span>[] boatCount = boat.getNum();<br>        <span class=\"hljs-keyword\">if</span>(boat.getDirection() == <span class=\"hljs-string\">&quot;End&quot;</span>)&#123;<br>            endPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            endDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            startPriest += boatCount[<span class=\"hljs-number\">0</span>];<br>            startDevil += boatCount[<span class=\"hljs-number\">1</span>];<br>        &#125;<br><br>        <span class=\"hljs-keyword\">if</span>(startPriest&lt;startDevil &amp;&amp; startPriest&gt;<span class=\"hljs-number\">0</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(endPriest&lt;endDevil &amp;&amp; endPriest&gt;<span class=\"hljs-number\">0</span>)&#123;<br>            mainController.JudgeCallback(<span class=\"hljs-literal\">false</span>, <span class=\"hljs-string\">&quot;Game Over!&quot;</span>);<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>Cauchy        2022.11.05</p>\n</blockquote>"},{"layout":"post","title":"HW6: 物理系统与碰撞","date":"2022-12-04T06:00:00.000Z","subtitle":"物理系统与碰撞","_content":"\n> 作业简介：\n>\n> 1. 打靶游戏（涉及刚体物理学、碰撞）\n\n<!--more-->\n\n:racehorse:\n\n## 打靶游戏\n\n* 靶对象为5环，按环记分；\n* 箭对象，射中后要插在靶上；射中后，箭对象产生颤抖效果，到下一次射击或1秒以后；\n* 游戏仅一轮，无限trials；添加一个风向和强度标志，提高难度。\n\n\n\n**项目地址：**\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets\n\n\n\n**效果展示图：**\n\n![1](../../../assets/game/1204/1.gif)\n\n\n\n**代码框架图：**\n\n![射箭游戏](../../../assets/game/1204/射箭游戏.png)\n\n\n\n#### 1、预制件制作\n\n* 靶子\n\n1个空对象作为父对象，包含5个圆柱体(Cylinder)。通过前后位置的摆放，可以在正面形成环状视觉效果。\n\n![2](../../../assets/game/1204/2.png)\n\n空对象上只挂载刚体组件rigidbody，碰撞检测选择连续的Continus。\n\n![4](../../../assets/game/1204/4.png)\n\n圆柱子对象则挂载MeshCollider，并勾选Convex和其下的Is Trigger让其有碰撞检测功能。\n\n![3](../../../assets/game/1204/3.png)\n\n* 箭\n\n1个空对象作为父对象，包含1个长方体(Cube)箭头、1个圆柱体(Cylinder)箭身、3个长方体(Cube)箭尾。\n\n![5](../../../assets/game/1204/5.png)\n\n空对象同样只挂载刚体组件rigidbody，注意勾选使用重力Use Gravity及使用动力学Is Kinematic。碰撞检测选择动态连续Continuous Dynamic。\n\n![6](../../../assets/game/1204/6.png)\n\n子对象只在箭头挂载碰撞器与箭头脚本。**注意：**如果箭头长度太短，又配合高速运动的话，碰撞检测很有可能会出现异常，比如一次性检测到多个或者少检测到几个。\n\n![7](../../../assets/game/1204/7.png)\n\n\n\n这样，主要的预制件就做好了。这里还做了一个背景板的预制件，附带了碰撞器效果，使射出靶范围的箭能停在“墙”上。\n\n\n\n#### 2、部分代码解析\n\n* arrowScript\n\n箭头脚本：检测箭与靶子的碰撞。\n\n这里利用靶子的圆柱组件Tag来识别打到哪个环，从而计分。为避免多次碰撞，加入cnt计数限制只计分一次碰撞。碰撞完成后，将箭的空对象的刚体属性更改为is Kinematic，且速度归零；箭的tag改为”Hit“，用于触发抖动运动。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class arrowScript : MonoBehaviour\n{\n    public int cnt = 0;\n    private string ColliderTag;\n    private ScoreController scoreController;\n\n    void OnTriggerEnter(Collider tar) {\n        cnt++;\n        if(cnt>1) return;\n        ColliderTag = tar.gameObject.tag;\n        Rigidbody parent = this.gameObject.transform.parent.gameObject.GetComponent<Rigidbody>();\n        parent.isKinematic = true;\n        parent.velocity = Vector3.zero;\n        parent.gameObject.tag = \"Hit\";\n        scoreController.Record(ColliderTag);\n    }\n\n    public void reset(){\n        cnt = 0;\n    }\n\n    void Awake(){\n        scoreController = (ScoreController)FindObjectOfType(typeof(ScoreController));\n    }\n}\n\n```\n\n\n\n* CCFlyAction\n\n箭飞行运动：传入wind和force参数，来控制箭上施加的物理学的力。rot参数根据wind参数，增加自旋效果。为确保Tremble抖动运动值运行一次，这里加入了isTrem判断。只有运行完飞行运动且Tag为\"Hit\"的物体才会发生抖动。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CCFlyAction : SSAction\n{\n    public Vector3 force;\n    public Vector3 wind;\n    private Vector3 rot = new Vector3(0,0,0);\n    private bool isTrem = false;\n\n    public static CCFlyAction GetCCFlyAction(Vector3 _wind, Vector3 _force){\n        CCFlyAction action = ScriptableObject.CreateInstance<CCFlyAction>();\n        action.force = _force;\n        action.wind = _wind;\n        action.rot.z = _wind.x;\n        return action;\n    }\n\n    public override void Start(){\n        isTrem = false;\n        gameObject.transform.LookAt(force);\n\t\tgameObject.GetComponent<Rigidbody>().isKinematic = false;\n\t\tgameObject.GetComponent<Rigidbody>().AddForce(force, ForceMode.Impulse);\n\t\tgameObject.GetComponent<Rigidbody>().velocity = Vector3.zero;\n\t\tgameObject.GetComponent<Rigidbody>().AddForce(force + wind, ForceMode.Impulse);\n        gameObject.GetComponent<Rigidbody>().angularVelocity = rot;\n    }\n\n    public override void Update(){}\n\n    public override void FixedUpdate()\n    {\n        this.gameObject.GetComponent<Rigidbody>().AddForce(wind, ForceMode.Force);\n        if (this.gameObject.tag == \"Hit\" && isTrem == false){\n            this.callback.SSActionEvent(this, this.gameObject);\n            isTrem = true;\n        }\n        if (transform.position.y < -10 || transform.position.z > -6.7) {\n            this.destroy = true;\n        }\n    }\n\n}\n\n\n```\n\n\n\n* CCTrembleAction\n\n箭抖动运动：抖动时间为0.5秒，通过箭的轻微上下运动来模拟抖动效果。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CCTrembleAction : SSAction\n{\n    float radian = 0;\n\tfloat per_radian = 3f;\n\tfloat radius = 0.01f;\n\tVector3 old_pos;\n\tpublic float left_time = 0.5f;\n\n\tpublic override void Start(){\n        old_pos = transform.position;\n    }\n\tpublic static CCTrembleAction GetSSAction(){\n\t\tCCTrembleAction tremble = CreateInstance<CCTrembleAction>();\n\t\treturn tremble;\n\t}\n\tpublic override void Update(){\n\t\tleft_time -= Time.deltaTime;\n\t\tif (left_time <= 0){\n\t\t\ttransform.position = old_pos;\n\t\t\tthis.destroy = true;\n\t\t\tthis.callback.SSActionEvent(this);\n\t\t}\n\t\tradian += per_radian;\n\t\tfloat dy = Mathf.Cos(radian) * radius; \n\t\ttransform.position = old_pos + new Vector3(0, dy, 0);\n\t}\n\tpublic override void FixedUpdate(){}\n\n}\n```\n\n\n\n* ArrowFactory\n\n箭工厂：用于生成与回收箭。这里是相当于最多生成10支箭，用完了则回收最先用的箭来用。生成箭或利用回收的箭时，记得恢复箭的初始属性。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowFactory : MonoBehaviour\n{\n    public GameObject arrow = null;\n    List<GameObject> used;\n    Queue<GameObject> free;\n\n\n    void Start()\n    {\n        used = new List<GameObject>();\n        free = new Queue<GameObject>();\n        \n    }\n\n    public GameObject GetArrow(){\n        if(free.Count == 0){\n            arrow = Instantiate(Resources.Load<GameObject>(\"Prefabs/arrow\"));\n        }\n        else{\n            arrow = free.Dequeue();\n            arrow.gameObject.SetActive(true);\n            arrow.gameObject.tag = \"Untagged\";\n            arrow.gameObject.transform.Find(\"head\").gameObject.SetActive(true);\n            arrow.gameObject.transform.Find(\"body\").gameObject.SetActive(true);\n            arrow.gameObject.transform.Find(\"head\").GetComponent<arrowScript>().reset();\n        }\n        arrow.transform.position = new Vector3(0, 2.5f, -12.5F);\n        used.Add(arrow);\n        return arrow; \n    }\n\n\n    public void FreeArrow(){\n        if(used.Count<=10)\n            return;\n        for(int i=0; i<used.Count; i++){\n            if(used[i].gameObject.transform.position.y <= -10 || used[i].gameObject.transform.position.z >= -5 || used[i].gameObject.tag == \"Hit\"){\n                used[i].GetComponent<Rigidbody>().isKinematic = true;\n                used[i].gameObject.SetActive(false);\n                used[i].transform.position =  new Vector3 (0, 2.5f, -12.5f);\n                free.Enqueue(used[i]);\n                used.Remove(used[i]);\n                break;\n            }\n        }\n    }\n}\n```\n\n\n\n* RoundController\n\n场景控制器：加载资源（靶子、墙体等），生成风，移动箭等的功能实现。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RoundController : MonoBehaviour, ISceneController, IUserAction\n{\n    ArrowFactory factory;\n    public CCActionManager actionManager;\n    public ScoreController scoreController;\n    public myUserGUI userGUI;\n\n    public GameObject target;\n    public GameObject arrow;\n    public bool isStart = false;\n    public string windTag = \"\";\n\n    private float wind_directX;     \n\tprivate float wind_directY; \n\n    void Start()\n    {   \n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<ArrowFactory>();\n        factory = Singleton<ArrowFactory>.Instance;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        LoadResource();\n    }\n    \n    public void LoadResource()\n    {\n        target = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/target\"));\n        GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/wall\"));\n\n    }\n\n    void Update()\n    {\n        if(isStart) {\n            factory.FreeArrow();\n        }\n    }\n\n    public void Init(){\n        if(arrow == null){\n            wind_directX = Random.Range(-4, 4);\n\t\t\twind_directY = Random.Range(-4, 4);\n            CreateWind();\n            arrow = factory.GetArrow();\n        }\n    }\n\n    public void moveBow(Vector3 mousePos){\n        if(!isStart)\n            return;\n        arrow.transform.LookAt(mousePos * 30);\n    }\n\n    public void shootArrow(Vector3 force){\n        if(isStart)\n\t\t{\n\t\t\tVector3 wind = new Vector3(wind_directX, wind_directY, 0);\n\t\t\tactionManager.MoveArrow(arrow, wind, force * 10);\n\t\t\tarrow = null;\n\t\t}\n    }\n    public bool GetStart(){\n        return isStart;\n    }\n\n    public string GetWind()\n    {\n        return windTag;\n    }\n\n\n    public void Begin()\n    {\n        isStart = true;\n    }\n\n    public int GetScore()\n    {\n        return scoreController.score;\n    }\n\n    public void CreateWind(){\n        string Horizontal = \"\", Vertical = \"\", level = \"\";\n        if (wind_directX > 0) {\n            Horizontal = \"西\";\n        } else if (wind_directX <= 0) {\n            Horizontal = \"东\";\n        }\n        if (wind_directY > 0) {\n            Vertical = \"南\";\n        } else if (wind_directY <= 0) {\n            Vertical = \"北\";\n        }\n        if ((wind_directX + wind_directY) / 2 > -1 && (wind_directX + wind_directY) / 2 < 1)\n\t\t{\n\t\t\tlevel = \"1 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -2 && (wind_directX + wind_directY) / 2 < 2)\n\t\t{\n\t\t\tlevel = \"2 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -3 && (wind_directX + wind_directY) / 2 < 3)\n\t\t{\n\t\t\tlevel = \"3 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -5 && (wind_directX + wind_directY) / 2 < 5)\n\t\t{\n\t\t\tlevel = \"4 级\";\n\t\t}\n        windTag = Horizontal + Vertical + \"风\" + \" \" + level;\n    \n    }\n\n    public bool isArrowNull(){\n        return (arrow != null);\n    }\n\n    \n}\n\n```\n\n\n\n* ScoreController\n\n计分器：利用靶子上带有碰撞器的物体的tag来计分。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ScoreController : MonoBehaviour\n{\n    public int score;\n\n    public void Start(){\n        score = 0;\n    }\n\n    public void Record(string ColliderTag){\n        if(ColliderTag == \"10\"){\n            score+=10;\n        }\n        else if(ColliderTag == \"8\"){\n            score+=8;\n        }\n        else if(ColliderTag == \"6\"){\n            score+=6;\n        }\n        else if(ColliderTag == \"4\"){\n            score+=4;\n        }\n        else if(ColliderTag == \"2\"){\n            score+=2;\n        }\n                \n    }\n\n    public void Reset(){\n        score = 0;\n    }\n}\n\n```\n\n\n\n#### 3、小结\n\n* 要区分物理学与运动学，Rigidbody与isKinematic等的使用。\n* 要区分各种碰撞检测模式，Discrete、Continus、Continus Dynamic等，有性能上的差异。\n* 碰撞异常要思考：物体是否启用碰撞器、碰撞检测模式是否正确、物体运动是否过于高速、物体碰撞器体积是否过小等。\n* 熟悉Rigidbody的一些属性与使用，方便实现物理运动效果。\n\n\n\n> Cauchy        2022.12.04","source":"_posts/2022/Homework6/Homework6.md","raw":"---\nlayout: post\ntitle:  \"HW6: 物理系统与碰撞\"\ndate:   2022-12-04 14:00:00 +0800\ntags: \n- unity\n- rigidbody\ncategories: Game\nsubtitle: '物理系统与碰撞'\n\n---\n\n> 作业简介：\n>\n> 1. 打靶游戏（涉及刚体物理学、碰撞）\n\n<!--more-->\n\n:racehorse:\n\n## 打靶游戏\n\n* 靶对象为5环，按环记分；\n* 箭对象，射中后要插在靶上；射中后，箭对象产生颤抖效果，到下一次射击或1秒以后；\n* 游戏仅一轮，无限trials；添加一个风向和强度标志，提高难度。\n\n\n\n**项目地址：**\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets\n\n\n\n**效果展示图：**\n\n![1](../../../assets/game/1204/1.gif)\n\n\n\n**代码框架图：**\n\n![射箭游戏](../../../assets/game/1204/射箭游戏.png)\n\n\n\n#### 1、预制件制作\n\n* 靶子\n\n1个空对象作为父对象，包含5个圆柱体(Cylinder)。通过前后位置的摆放，可以在正面形成环状视觉效果。\n\n![2](../../../assets/game/1204/2.png)\n\n空对象上只挂载刚体组件rigidbody，碰撞检测选择连续的Continus。\n\n![4](../../../assets/game/1204/4.png)\n\n圆柱子对象则挂载MeshCollider，并勾选Convex和其下的Is Trigger让其有碰撞检测功能。\n\n![3](../../../assets/game/1204/3.png)\n\n* 箭\n\n1个空对象作为父对象，包含1个长方体(Cube)箭头、1个圆柱体(Cylinder)箭身、3个长方体(Cube)箭尾。\n\n![5](../../../assets/game/1204/5.png)\n\n空对象同样只挂载刚体组件rigidbody，注意勾选使用重力Use Gravity及使用动力学Is Kinematic。碰撞检测选择动态连续Continuous Dynamic。\n\n![6](../../../assets/game/1204/6.png)\n\n子对象只在箭头挂载碰撞器与箭头脚本。**注意：**如果箭头长度太短，又配合高速运动的话，碰撞检测很有可能会出现异常，比如一次性检测到多个或者少检测到几个。\n\n![7](../../../assets/game/1204/7.png)\n\n\n\n这样，主要的预制件就做好了。这里还做了一个背景板的预制件，附带了碰撞器效果，使射出靶范围的箭能停在“墙”上。\n\n\n\n#### 2、部分代码解析\n\n* arrowScript\n\n箭头脚本：检测箭与靶子的碰撞。\n\n这里利用靶子的圆柱组件Tag来识别打到哪个环，从而计分。为避免多次碰撞，加入cnt计数限制只计分一次碰撞。碰撞完成后，将箭的空对象的刚体属性更改为is Kinematic，且速度归零；箭的tag改为”Hit“，用于触发抖动运动。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class arrowScript : MonoBehaviour\n{\n    public int cnt = 0;\n    private string ColliderTag;\n    private ScoreController scoreController;\n\n    void OnTriggerEnter(Collider tar) {\n        cnt++;\n        if(cnt>1) return;\n        ColliderTag = tar.gameObject.tag;\n        Rigidbody parent = this.gameObject.transform.parent.gameObject.GetComponent<Rigidbody>();\n        parent.isKinematic = true;\n        parent.velocity = Vector3.zero;\n        parent.gameObject.tag = \"Hit\";\n        scoreController.Record(ColliderTag);\n    }\n\n    public void reset(){\n        cnt = 0;\n    }\n\n    void Awake(){\n        scoreController = (ScoreController)FindObjectOfType(typeof(ScoreController));\n    }\n}\n\n```\n\n\n\n* CCFlyAction\n\n箭飞行运动：传入wind和force参数，来控制箭上施加的物理学的力。rot参数根据wind参数，增加自旋效果。为确保Tremble抖动运动值运行一次，这里加入了isTrem判断。只有运行完飞行运动且Tag为\"Hit\"的物体才会发生抖动。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CCFlyAction : SSAction\n{\n    public Vector3 force;\n    public Vector3 wind;\n    private Vector3 rot = new Vector3(0,0,0);\n    private bool isTrem = false;\n\n    public static CCFlyAction GetCCFlyAction(Vector3 _wind, Vector3 _force){\n        CCFlyAction action = ScriptableObject.CreateInstance<CCFlyAction>();\n        action.force = _force;\n        action.wind = _wind;\n        action.rot.z = _wind.x;\n        return action;\n    }\n\n    public override void Start(){\n        isTrem = false;\n        gameObject.transform.LookAt(force);\n\t\tgameObject.GetComponent<Rigidbody>().isKinematic = false;\n\t\tgameObject.GetComponent<Rigidbody>().AddForce(force, ForceMode.Impulse);\n\t\tgameObject.GetComponent<Rigidbody>().velocity = Vector3.zero;\n\t\tgameObject.GetComponent<Rigidbody>().AddForce(force + wind, ForceMode.Impulse);\n        gameObject.GetComponent<Rigidbody>().angularVelocity = rot;\n    }\n\n    public override void Update(){}\n\n    public override void FixedUpdate()\n    {\n        this.gameObject.GetComponent<Rigidbody>().AddForce(wind, ForceMode.Force);\n        if (this.gameObject.tag == \"Hit\" && isTrem == false){\n            this.callback.SSActionEvent(this, this.gameObject);\n            isTrem = true;\n        }\n        if (transform.position.y < -10 || transform.position.z > -6.7) {\n            this.destroy = true;\n        }\n    }\n\n}\n\n\n```\n\n\n\n* CCTrembleAction\n\n箭抖动运动：抖动时间为0.5秒，通过箭的轻微上下运动来模拟抖动效果。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CCTrembleAction : SSAction\n{\n    float radian = 0;\n\tfloat per_radian = 3f;\n\tfloat radius = 0.01f;\n\tVector3 old_pos;\n\tpublic float left_time = 0.5f;\n\n\tpublic override void Start(){\n        old_pos = transform.position;\n    }\n\tpublic static CCTrembleAction GetSSAction(){\n\t\tCCTrembleAction tremble = CreateInstance<CCTrembleAction>();\n\t\treturn tremble;\n\t}\n\tpublic override void Update(){\n\t\tleft_time -= Time.deltaTime;\n\t\tif (left_time <= 0){\n\t\t\ttransform.position = old_pos;\n\t\t\tthis.destroy = true;\n\t\t\tthis.callback.SSActionEvent(this);\n\t\t}\n\t\tradian += per_radian;\n\t\tfloat dy = Mathf.Cos(radian) * radius; \n\t\ttransform.position = old_pos + new Vector3(0, dy, 0);\n\t}\n\tpublic override void FixedUpdate(){}\n\n}\n```\n\n\n\n* ArrowFactory\n\n箭工厂：用于生成与回收箭。这里是相当于最多生成10支箭，用完了则回收最先用的箭来用。生成箭或利用回收的箭时，记得恢复箭的初始属性。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowFactory : MonoBehaviour\n{\n    public GameObject arrow = null;\n    List<GameObject> used;\n    Queue<GameObject> free;\n\n\n    void Start()\n    {\n        used = new List<GameObject>();\n        free = new Queue<GameObject>();\n        \n    }\n\n    public GameObject GetArrow(){\n        if(free.Count == 0){\n            arrow = Instantiate(Resources.Load<GameObject>(\"Prefabs/arrow\"));\n        }\n        else{\n            arrow = free.Dequeue();\n            arrow.gameObject.SetActive(true);\n            arrow.gameObject.tag = \"Untagged\";\n            arrow.gameObject.transform.Find(\"head\").gameObject.SetActive(true);\n            arrow.gameObject.transform.Find(\"body\").gameObject.SetActive(true);\n            arrow.gameObject.transform.Find(\"head\").GetComponent<arrowScript>().reset();\n        }\n        arrow.transform.position = new Vector3(0, 2.5f, -12.5F);\n        used.Add(arrow);\n        return arrow; \n    }\n\n\n    public void FreeArrow(){\n        if(used.Count<=10)\n            return;\n        for(int i=0; i<used.Count; i++){\n            if(used[i].gameObject.transform.position.y <= -10 || used[i].gameObject.transform.position.z >= -5 || used[i].gameObject.tag == \"Hit\"){\n                used[i].GetComponent<Rigidbody>().isKinematic = true;\n                used[i].gameObject.SetActive(false);\n                used[i].transform.position =  new Vector3 (0, 2.5f, -12.5f);\n                free.Enqueue(used[i]);\n                used.Remove(used[i]);\n                break;\n            }\n        }\n    }\n}\n```\n\n\n\n* RoundController\n\n场景控制器：加载资源（靶子、墙体等），生成风，移动箭等的功能实现。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class RoundController : MonoBehaviour, ISceneController, IUserAction\n{\n    ArrowFactory factory;\n    public CCActionManager actionManager;\n    public ScoreController scoreController;\n    public myUserGUI userGUI;\n\n    public GameObject target;\n    public GameObject arrow;\n    public bool isStart = false;\n    public string windTag = \"\";\n\n    private float wind_directX;     \n\tprivate float wind_directY; \n\n    void Start()\n    {   \n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<ArrowFactory>();\n        factory = Singleton<ArrowFactory>.Instance;\n        actionManager = gameObject.AddComponent<CCActionManager>() as CCActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        LoadResource();\n    }\n    \n    public void LoadResource()\n    {\n        target = GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/target\"));\n        GameObject.Instantiate<GameObject>(Resources.Load<GameObject>(\"Prefabs/wall\"));\n\n    }\n\n    void Update()\n    {\n        if(isStart) {\n            factory.FreeArrow();\n        }\n    }\n\n    public void Init(){\n        if(arrow == null){\n            wind_directX = Random.Range(-4, 4);\n\t\t\twind_directY = Random.Range(-4, 4);\n            CreateWind();\n            arrow = factory.GetArrow();\n        }\n    }\n\n    public void moveBow(Vector3 mousePos){\n        if(!isStart)\n            return;\n        arrow.transform.LookAt(mousePos * 30);\n    }\n\n    public void shootArrow(Vector3 force){\n        if(isStart)\n\t\t{\n\t\t\tVector3 wind = new Vector3(wind_directX, wind_directY, 0);\n\t\t\tactionManager.MoveArrow(arrow, wind, force * 10);\n\t\t\tarrow = null;\n\t\t}\n    }\n    public bool GetStart(){\n        return isStart;\n    }\n\n    public string GetWind()\n    {\n        return windTag;\n    }\n\n\n    public void Begin()\n    {\n        isStart = true;\n    }\n\n    public int GetScore()\n    {\n        return scoreController.score;\n    }\n\n    public void CreateWind(){\n        string Horizontal = \"\", Vertical = \"\", level = \"\";\n        if (wind_directX > 0) {\n            Horizontal = \"西\";\n        } else if (wind_directX <= 0) {\n            Horizontal = \"东\";\n        }\n        if (wind_directY > 0) {\n            Vertical = \"南\";\n        } else if (wind_directY <= 0) {\n            Vertical = \"北\";\n        }\n        if ((wind_directX + wind_directY) / 2 > -1 && (wind_directX + wind_directY) / 2 < 1)\n\t\t{\n\t\t\tlevel = \"1 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -2 && (wind_directX + wind_directY) / 2 < 2)\n\t\t{\n\t\t\tlevel = \"2 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -3 && (wind_directX + wind_directY) / 2 < 3)\n\t\t{\n\t\t\tlevel = \"3 级\";\n\t\t}\n\t\telse if ((wind_directX + wind_directY) / 2 > -5 && (wind_directX + wind_directY) / 2 < 5)\n\t\t{\n\t\t\tlevel = \"4 级\";\n\t\t}\n        windTag = Horizontal + Vertical + \"风\" + \" \" + level;\n    \n    }\n\n    public bool isArrowNull(){\n        return (arrow != null);\n    }\n\n    \n}\n\n```\n\n\n\n* ScoreController\n\n计分器：利用靶子上带有碰撞器的物体的tag来计分。\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ScoreController : MonoBehaviour\n{\n    public int score;\n\n    public void Start(){\n        score = 0;\n    }\n\n    public void Record(string ColliderTag){\n        if(ColliderTag == \"10\"){\n            score+=10;\n        }\n        else if(ColliderTag == \"8\"){\n            score+=8;\n        }\n        else if(ColliderTag == \"6\"){\n            score+=6;\n        }\n        else if(ColliderTag == \"4\"){\n            score+=4;\n        }\n        else if(ColliderTag == \"2\"){\n            score+=2;\n        }\n                \n    }\n\n    public void Reset(){\n        score = 0;\n    }\n}\n\n```\n\n\n\n#### 3、小结\n\n* 要区分物理学与运动学，Rigidbody与isKinematic等的使用。\n* 要区分各种碰撞检测模式，Discrete、Continus、Continus Dynamic等，有性能上的差异。\n* 碰撞异常要思考：物体是否启用碰撞器、碰撞检测模式是否正确、物体运动是否过于高速、物体碰撞器体积是否过小等。\n* 熟悉Rigidbody的一些属性与使用，方便实现物理运动效果。\n\n\n\n> Cauchy        2022.12.04","slug":"2022/Homework6/Homework6","published":1,"updated":"2023-05-19T07:05:06.336Z","comments":1,"photos":[],"link":"","_id":"clhudj1fh000z7g844sce1uhl","content":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>打靶游戏（涉及刚体物理学、碰撞）</li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n<p>🐎</p>\n<h2 id=\"打靶游戏\">打靶游戏</h2>\n<ul>\n<li>靶对象为5环，按环记分；</li>\n<li>箭对象，射中后要插在靶上；射中后，箭对象产生颤抖效果，到下一次射击或1秒以后；</li>\n<li>游戏仅一轮，无限trials；添加一个风向和强度标志，提高难度。</li>\n</ul>\n<p><strong>项目地址：</strong></p>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets</a></p>\n<p><strong>效果展示图：</strong></p>\n<p><img src=\"../../../assets/game/1204/1.gif\" alt=\"1\"></p>\n<p><strong>代码框架图：</strong></p>\n<p><img src=\"../../../assets/game/1204/%E5%B0%84%E7%AE%AD%E6%B8%B8%E6%88%8F.png\" alt=\"射箭游戏\"></p>\n<h4 id=\"1、预制件制作\">1、预制件制作</h4>\n<ul>\n<li>靶子</li>\n</ul>\n<p>1个空对象作为父对象，包含5个圆柱体(Cylinder)。通过前后位置的摆放，可以在正面形成环状视觉效果。</p>\n<p><img src=\"../../../assets/game/1204/2.png\" alt=\"2\"></p>\n<p>空对象上只挂载刚体组件rigidbody，碰撞检测选择连续的Continus。</p>\n<p><img src=\"../../../assets/game/1204/4.png\" alt=\"4\"></p>\n<p>圆柱子对象则挂载MeshCollider，并勾选Convex和其下的Is Trigger让其有碰撞检测功能。</p>\n<p><img src=\"../../../assets/game/1204/3.png\" alt=\"3\"></p>\n<ul>\n<li>箭</li>\n</ul>\n<p>1个空对象作为父对象，包含1个长方体(Cube)箭头、1个圆柱体(Cylinder)箭身、3个长方体(Cube)箭尾。</p>\n<p><img src=\"../../../assets/game/1204/5.png\" alt=\"5\"></p>\n<p>空对象同样只挂载刚体组件rigidbody，注意勾选使用重力Use Gravity及使用动力学Is Kinematic。碰撞检测选择动态连续Continuous Dynamic。</p>\n<p><img src=\"../../../assets/game/1204/6.png\" alt=\"6\"></p>\n<p>子对象只在箭头挂载碰撞器与箭头脚本。**注意：**如果箭头长度太短，又配合高速运动的话，碰撞检测很有可能会出现异常，比如一次性检测到多个或者少检测到几个。</p>\n<p><img src=\"../../../assets/game/1204/7.png\" alt=\"7\"></p>\n<p>这样，主要的预制件就做好了。这里还做了一个背景板的预制件，附带了碰撞器效果，使射出靶范围的箭能停在“墙”上。</p>\n<h4 id=\"2、部分代码解析\">2、部分代码解析</h4>\n<ul>\n<li>arrowScript</li>\n</ul>\n<p>箭头脚本：检测箭与靶子的碰撞。</p>\n<p>这里利用靶子的圆柱组件Tag来识别打到哪个环，从而计分。为避免多次碰撞，加入cnt计数限制只计分一次碰撞。碰撞完成后，将箭的空对象的刚体属性更改为is Kinematic，且速度归零；箭的tag改为”Hit“，用于触发抖动运动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">arrowScript</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">string</span> ColliderTag;<br>    <span class=\"hljs-keyword\">private</span> ScoreController scoreController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider tar</span>)</span> &#123;<br>        cnt++;<br>        <span class=\"hljs-keyword\">if</span>(cnt&gt;<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span>;<br>        ColliderTag = tar.gameObject.tag;<br>        Rigidbody parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.gameObject.GetComponent&lt;Rigidbody&gt;();<br>        parent.isKinematic = <span class=\"hljs-literal\">true</span>;<br>        parent.velocity = Vector3.zero;<br>        parent.gameObject.tag = <span class=\"hljs-string\">&quot;Hit&quot;</span>;<br>        scoreController.Record(ColliderTag);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span>&#123;<br>        cnt = <span class=\"hljs-number\">0</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Awake</span>()</span>&#123;<br>        scoreController = (ScoreController)FindObjectOfType(<span class=\"hljs-keyword\">typeof</span>(ScoreController));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>CCFlyAction</li>\n</ul>\n<p>箭飞行运动：传入wind和force参数，来控制箭上施加的物理学的力。rot参数根据wind参数，增加自旋效果。为确保Tremble抖动运动值运行一次，这里加入了isTrem判断。只有运行完飞行运动且Tag为&quot;Hit&quot;的物体才会发生抖动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> Vector3 force;<br>    <span class=\"hljs-keyword\">public</span> Vector3 wind;<br>    <span class=\"hljs-keyword\">private</span> Vector3 rot = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isTrem = <span class=\"hljs-literal\">false</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCFlyAction <span class=\"hljs-title\">GetCCFlyAction</span>(<span class=\"hljs-params\">Vector3 _wind, Vector3 _force</span>)</span>&#123;<br>        CCFlyAction action = ScriptableObject.CreateInstance&lt;CCFlyAction&gt;();<br>        action.force = _force;<br>        action.wind = _wind;<br>        action.rot.z = _wind.x;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        isTrem = <span class=\"hljs-literal\">false</span>;<br>        gameObject.transform.LookAt(force);<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">false</span>;<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force, ForceMode.Impulse);<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.zero;<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force + wind, ForceMode.Impulse);<br>        gameObject.GetComponent&lt;Rigidbody&gt;().angularVelocity = rot;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(wind, ForceMode.Force);<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject.tag == <span class=\"hljs-string\">&quot;Hit&quot;</span> &amp;&amp; isTrem == <span class=\"hljs-literal\">false</span>)&#123;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-keyword\">this</span>.gameObject);<br>            isTrem = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (transform.position.y &lt; <span class=\"hljs-number\">-10</span> || transform.position.z &gt; <span class=\"hljs-number\">-6.7</span>) &#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>CCTrembleAction</li>\n</ul>\n<p>箭抖动运动：抖动时间为0.5秒，通过箭的轻微上下运动来模拟抖动效果。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCTrembleAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-built_in\">float</span> radian = <span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-built_in\">float</span> per_radian = <span class=\"hljs-number\">3f</span>;<br>\t<span class=\"hljs-built_in\">float</span> radius = <span class=\"hljs-number\">0.01f</span>;<br>\tVector3 old_pos;<br>\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> left_time = <span class=\"hljs-number\">0.5f</span>;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        old_pos = transform.position;<br>    &#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCTrembleAction <span class=\"hljs-title\">GetSSAction</span>()</span>&#123;<br>\t\tCCTrembleAction tremble = CreateInstance&lt;CCTrembleAction&gt;();<br>\t\t<span class=\"hljs-keyword\">return</span> tremble;<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;<br>\t\tleft_time -= Time.deltaTime;<br>\t\t<span class=\"hljs-keyword\">if</span> (left_time &lt;= <span class=\"hljs-number\">0</span>)&#123;<br>\t\t\ttransform.position = old_pos;<br>\t\t\t<span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>\t\t\t<span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>\t\t&#125;<br>\t\tradian += per_radian;<br>\t\t<span class=\"hljs-built_in\">float</span> dy = Mathf.Cos(radian) * radius; <br>\t\ttransform.position = old_pos + <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, dy, <span class=\"hljs-number\">0</span>);<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span>&#123;&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>ArrowFactory</li>\n</ul>\n<p>箭工厂：用于生成与回收箭。这里是相当于最多生成10支箭，用完了则回收最先用的箭来用。生成箭或利用回收的箭时，记得恢复箭的初始属性。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ArrowFactory</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject arrow = <span class=\"hljs-literal\">null</span>;<br>    List&lt;GameObject&gt; used;<br>    Queue&lt;GameObject&gt; free;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        used = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        free = <span class=\"hljs-keyword\">new</span> Queue&lt;GameObject&gt;();<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">GetArrow</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(free.Count == <span class=\"hljs-number\">0</span>)&#123;<br>            arrow = Instantiate(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/arrow&quot;</span>));<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            arrow = free.Dequeue();<br>            arrow.gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.tag = <span class=\"hljs-string\">&quot;Untagged&quot;</span>;<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;head&quot;</span>).gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;body&quot;</span>).gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;head&quot;</span>).GetComponent&lt;arrowScript&gt;().reset();<br>        &#125;<br>        arrow.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2.5f</span>, <span class=\"hljs-number\">-12.5F</span>);<br>        used.Add(arrow);<br>        <span class=\"hljs-keyword\">return</span> arrow; <br>    &#125;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FreeArrow</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(used.Count&lt;=<span class=\"hljs-number\">10</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;used.Count; i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(used[i].gameObject.transform.position.y &lt;= <span class=\"hljs-number\">-10</span> || used[i].gameObject.transform.position.z &gt;= <span class=\"hljs-number\">-5</span> || used[i].gameObject.tag == <span class=\"hljs-string\">&quot;Hit&quot;</span>)&#123;<br>                used[i].GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">true</span>;<br>                used[i].gameObject.SetActive(<span class=\"hljs-literal\">false</span>);<br>                used[i].transform.position =  <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2.5f</span>, <span class=\"hljs-number\">-12.5f</span>);<br>                free.Enqueue(used[i]);<br>                used.Remove(used[i]);<br>                <span class=\"hljs-keyword\">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>RoundController</li>\n</ul>\n<p>场景控制器：加载资源（靶子、墙体等），生成风，移动箭等的功能实现。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RoundController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    ArrowFactory factory;<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br><br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br>    <span class=\"hljs-keyword\">public</span> GameObject arrow;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isStart = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> windTag = <span class=\"hljs-string\">&quot;&quot;</span>;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> wind_directX;     <br>\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> wind_directY; <br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;   <br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;ArrowFactory&gt;();<br>        factory = Singleton&lt;ArrowFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        LoadResource();<br>    &#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        target = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/target&quot;</span>));<br>        GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/wall&quot;</span>));<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(isStart) &#123;<br>            factory.FreeArrow();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(arrow == <span class=\"hljs-literal\">null</span>)&#123;<br>            wind_directX = Random.Range(<span class=\"hljs-number\">-4</span>, <span class=\"hljs-number\">4</span>);<br>\t\t\twind_directY = Random.Range(<span class=\"hljs-number\">-4</span>, <span class=\"hljs-number\">4</span>);<br>            CreateWind();<br>            arrow = factory.GetArrow();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBow</span>(<span class=\"hljs-params\">Vector3 mousePos</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(!isStart)<br>            <span class=\"hljs-keyword\">return</span>;<br>        arrow.transform.LookAt(mousePos * <span class=\"hljs-number\">30</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">shootArrow</span>(<span class=\"hljs-params\">Vector3 force</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isStart)<br>\t\t&#123;<br>\t\t\tVector3 wind = <span class=\"hljs-keyword\">new</span> Vector3(wind_directX, wind_directY, <span class=\"hljs-number\">0</span>);<br>\t\t\tactionManager.MoveArrow(arrow, wind, force * <span class=\"hljs-number\">10</span>);<br>\t\t\tarrow = <span class=\"hljs-literal\">null</span>;<br>\t\t&#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">GetStart</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> isStart;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">GetWind</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> windTag;<br>    &#125;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Begin</span>()</span><br>    &#123;<br>        isStart = <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">GetScore</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.score;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">CreateWind</span>()</span>&#123;<br>        <span class=\"hljs-built_in\">string</span> Horizontal = <span class=\"hljs-string\">&quot;&quot;</span>, Vertical = <span class=\"hljs-string\">&quot;&quot;</span>, level = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (wind_directX &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            Horizontal = <span class=\"hljs-string\">&quot;西&quot;</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (wind_directX &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>            Horizontal = <span class=\"hljs-string\">&quot;东&quot;</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (wind_directY &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            Vertical = <span class=\"hljs-string\">&quot;南&quot;</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (wind_directY &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>            Vertical = <span class=\"hljs-string\">&quot;北&quot;</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-1</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">1</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;1 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-2</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">2</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;2 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-3</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">3</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;3 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-5</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">5</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;4 级&quot;</span>;<br>\t\t&#125;<br>        windTag = Horizontal + Vertical + <span class=\"hljs-string\">&quot;风&quot;</span> + <span class=\"hljs-string\">&quot; &quot;</span> + level;<br>    <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isArrowNull</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> (arrow != <span class=\"hljs-literal\">null</span>);<br>    &#125;<br><br>    <br>&#125;<br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>ScoreController</li>\n</ul>\n<p>计分器：利用靶子上带有碰撞器的物体的tag来计分。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ScoreController</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Record</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> ColliderTag</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;10&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">10</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;8&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">8</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;6&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">6</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;4&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">4</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;2&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">2</span>;<br>        &#125;<br>                <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"3、小结\">3、小结</h4>\n<ul>\n<li>要区分物理学与运动学，Rigidbody与isKinematic等的使用。</li>\n<li>要区分各种碰撞检测模式，Discrete、Continus、Continus Dynamic等，有性能上的差异。</li>\n<li>碰撞异常要思考：物体是否启用碰撞器、碰撞检测模式是否正确、物体运动是否过于高速、物体碰撞器体积是否过小等。</li>\n<li>熟悉Rigidbody的一些属性与使用，方便实现物理运动效果。</li>\n</ul>\n<blockquote>\n<p>Cauchy        2022.12.04</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>打靶游戏（涉及刚体物理学、碰撞）</li>\n</ol>\n</blockquote>","more":"<p>🐎</p>\n<h2 id=\"打靶游戏\">打靶游戏</h2>\n<ul>\n<li>靶对象为5环，按环记分；</li>\n<li>箭对象，射中后要插在靶上；射中后，箭对象产生颤抖效果，到下一次射击或1秒以后；</li>\n<li>游戏仅一轮，无限trials；添加一个风向和强度标志，提高难度。</li>\n</ul>\n<p><strong>项目地址：</strong></p>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw6/Assets</a></p>\n<p><strong>效果展示图：</strong></p>\n<p><img src=\"../../../assets/game/1204/1.gif\" alt=\"1\"></p>\n<p><strong>代码框架图：</strong></p>\n<p><img src=\"../../../assets/game/1204/%E5%B0%84%E7%AE%AD%E6%B8%B8%E6%88%8F.png\" alt=\"射箭游戏\"></p>\n<h4 id=\"1、预制件制作\">1、预制件制作</h4>\n<ul>\n<li>靶子</li>\n</ul>\n<p>1个空对象作为父对象，包含5个圆柱体(Cylinder)。通过前后位置的摆放，可以在正面形成环状视觉效果。</p>\n<p><img src=\"../../../assets/game/1204/2.png\" alt=\"2\"></p>\n<p>空对象上只挂载刚体组件rigidbody，碰撞检测选择连续的Continus。</p>\n<p><img src=\"../../../assets/game/1204/4.png\" alt=\"4\"></p>\n<p>圆柱子对象则挂载MeshCollider，并勾选Convex和其下的Is Trigger让其有碰撞检测功能。</p>\n<p><img src=\"../../../assets/game/1204/3.png\" alt=\"3\"></p>\n<ul>\n<li>箭</li>\n</ul>\n<p>1个空对象作为父对象，包含1个长方体(Cube)箭头、1个圆柱体(Cylinder)箭身、3个长方体(Cube)箭尾。</p>\n<p><img src=\"../../../assets/game/1204/5.png\" alt=\"5\"></p>\n<p>空对象同样只挂载刚体组件rigidbody，注意勾选使用重力Use Gravity及使用动力学Is Kinematic。碰撞检测选择动态连续Continuous Dynamic。</p>\n<p><img src=\"../../../assets/game/1204/6.png\" alt=\"6\"></p>\n<p>子对象只在箭头挂载碰撞器与箭头脚本。**注意：**如果箭头长度太短，又配合高速运动的话，碰撞检测很有可能会出现异常，比如一次性检测到多个或者少检测到几个。</p>\n<p><img src=\"../../../assets/game/1204/7.png\" alt=\"7\"></p>\n<p>这样，主要的预制件就做好了。这里还做了一个背景板的预制件，附带了碰撞器效果，使射出靶范围的箭能停在“墙”上。</p>\n<h4 id=\"2、部分代码解析\">2、部分代码解析</h4>\n<ul>\n<li>arrowScript</li>\n</ul>\n<p>箭头脚本：检测箭与靶子的碰撞。</p>\n<p>这里利用靶子的圆柱组件Tag来识别打到哪个环，从而计分。为避免多次碰撞，加入cnt计数限制只计分一次碰撞。碰撞完成后，将箭的空对象的刚体属性更改为is Kinematic，且速度归零；箭的tag改为”Hit“，用于触发抖动运动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">arrowScript</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> cnt = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">string</span> ColliderTag;<br>    <span class=\"hljs-keyword\">private</span> ScoreController scoreController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider tar</span>)</span> &#123;<br>        cnt++;<br>        <span class=\"hljs-keyword\">if</span>(cnt&gt;<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span>;<br>        ColliderTag = tar.gameObject.tag;<br>        Rigidbody parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.gameObject.GetComponent&lt;Rigidbody&gt;();<br>        parent.isKinematic = <span class=\"hljs-literal\">true</span>;<br>        parent.velocity = Vector3.zero;<br>        parent.gameObject.tag = <span class=\"hljs-string\">&quot;Hit&quot;</span>;<br>        scoreController.Record(ColliderTag);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reset</span>()</span>&#123;<br>        cnt = <span class=\"hljs-number\">0</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Awake</span>()</span>&#123;<br>        scoreController = (ScoreController)FindObjectOfType(<span class=\"hljs-keyword\">typeof</span>(ScoreController));<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>CCFlyAction</li>\n</ul>\n<p>箭飞行运动：传入wind和force参数，来控制箭上施加的物理学的力。rot参数根据wind参数，增加自旋效果。为确保Tremble抖动运动值运行一次，这里加入了isTrem判断。只有运行完飞行运动且Tag为&quot;Hit&quot;的物体才会发生抖动。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCFlyAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> Vector3 force;<br>    <span class=\"hljs-keyword\">public</span> Vector3 wind;<br>    <span class=\"hljs-keyword\">private</span> Vector3 rot = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isTrem = <span class=\"hljs-literal\">false</span>;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCFlyAction <span class=\"hljs-title\">GetCCFlyAction</span>(<span class=\"hljs-params\">Vector3 _wind, Vector3 _force</span>)</span>&#123;<br>        CCFlyAction action = ScriptableObject.CreateInstance&lt;CCFlyAction&gt;();<br>        action.force = _force;<br>        action.wind = _wind;<br>        action.rot.z = _wind.x;<br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        isTrem = <span class=\"hljs-literal\">false</span>;<br>        gameObject.transform.LookAt(force);<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">false</span>;<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force, ForceMode.Impulse);<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().velocity = Vector3.zero;<br>\t\tgameObject.GetComponent&lt;Rigidbody&gt;().AddForce(force + wind, ForceMode.Impulse);<br>        gameObject.GetComponent&lt;Rigidbody&gt;().angularVelocity = rot;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;&#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Rigidbody&gt;().AddForce(wind, ForceMode.Force);<br>        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.gameObject.tag == <span class=\"hljs-string\">&quot;Hit&quot;</span> &amp;&amp; isTrem == <span class=\"hljs-literal\">false</span>)&#123;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-keyword\">this</span>.gameObject);<br>            isTrem = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (transform.position.y &lt; <span class=\"hljs-number\">-10</span> || transform.position.z &gt; <span class=\"hljs-number\">-6.7</span>) &#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>CCTrembleAction</li>\n</ul>\n<p>箭抖动运动：抖动时间为0.5秒，通过箭的轻微上下运动来模拟抖动效果。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CCTrembleAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-built_in\">float</span> radian = <span class=\"hljs-number\">0</span>;<br>\t<span class=\"hljs-built_in\">float</span> per_radian = <span class=\"hljs-number\">3f</span>;<br>\t<span class=\"hljs-built_in\">float</span> radius = <span class=\"hljs-number\">0.01f</span>;<br>\tVector3 old_pos;<br>\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> left_time = <span class=\"hljs-number\">0.5f</span>;<br><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        old_pos = transform.position;<br>    &#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> CCTrembleAction <span class=\"hljs-title\">GetSSAction</span>()</span>&#123;<br>\t\tCCTrembleAction tremble = CreateInstance&lt;CCTrembleAction&gt;();<br>\t\t<span class=\"hljs-keyword\">return</span> tremble;<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span>&#123;<br>\t\tleft_time -= Time.deltaTime;<br>\t\t<span class=\"hljs-keyword\">if</span> (left_time &lt;= <span class=\"hljs-number\">0</span>)&#123;<br>\t\t\ttransform.position = old_pos;<br>\t\t\t<span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>\t\t\t<span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>);<br>\t\t&#125;<br>\t\tradian += per_radian;<br>\t\t<span class=\"hljs-built_in\">float</span> dy = Mathf.Cos(radian) * radius; <br>\t\ttransform.position = old_pos + <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, dy, <span class=\"hljs-number\">0</span>);<br>\t&#125;<br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FixedUpdate</span>()</span>&#123;&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>ArrowFactory</li>\n</ul>\n<p>箭工厂：用于生成与回收箭。这里是相当于最多生成10支箭，用完了则回收最先用的箭来用。生成箭或利用回收的箭时，记得恢复箭的初始属性。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ArrowFactory</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject arrow = <span class=\"hljs-literal\">null</span>;<br>    List&lt;GameObject&gt; used;<br>    Queue&lt;GameObject&gt; free;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        used = <span class=\"hljs-keyword\">new</span> List&lt;GameObject&gt;();<br>        free = <span class=\"hljs-keyword\">new</span> Queue&lt;GameObject&gt;();<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GameObject <span class=\"hljs-title\">GetArrow</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(free.Count == <span class=\"hljs-number\">0</span>)&#123;<br>            arrow = Instantiate(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/arrow&quot;</span>));<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            arrow = free.Dequeue();<br>            arrow.gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.tag = <span class=\"hljs-string\">&quot;Untagged&quot;</span>;<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;head&quot;</span>).gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;body&quot;</span>).gameObject.SetActive(<span class=\"hljs-literal\">true</span>);<br>            arrow.gameObject.transform.Find(<span class=\"hljs-string\">&quot;head&quot;</span>).GetComponent&lt;arrowScript&gt;().reset();<br>        &#125;<br>        arrow.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2.5f</span>, <span class=\"hljs-number\">-12.5F</span>);<br>        used.Add(arrow);<br>        <span class=\"hljs-keyword\">return</span> arrow; <br>    &#125;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">FreeArrow</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(used.Count&lt;=<span class=\"hljs-number\">10</span>)<br>            <span class=\"hljs-keyword\">return</span>;<br>        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-built_in\">int</span> i=<span class=\"hljs-number\">0</span>; i&lt;used.Count; i++)&#123;<br>            <span class=\"hljs-keyword\">if</span>(used[i].gameObject.transform.position.y &lt;= <span class=\"hljs-number\">-10</span> || used[i].gameObject.transform.position.z &gt;= <span class=\"hljs-number\">-5</span> || used[i].gameObject.tag == <span class=\"hljs-string\">&quot;Hit&quot;</span>)&#123;<br>                used[i].GetComponent&lt;Rigidbody&gt;().isKinematic = <span class=\"hljs-literal\">true</span>;<br>                used[i].gameObject.SetActive(<span class=\"hljs-literal\">false</span>);<br>                used[i].transform.position =  <span class=\"hljs-keyword\">new</span> Vector3 (<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2.5f</span>, <span class=\"hljs-number\">-12.5f</span>);<br>                free.Enqueue(used[i]);<br>                used.Remove(used[i]);<br>                <span class=\"hljs-keyword\">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<ul>\n<li>RoundController</li>\n</ul>\n<p>场景控制器：加载资源（靶子、墙体等），生成风，移动箭等的功能实现。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RoundController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">ISceneController</span>, <span class=\"hljs-title\">IUserAction</span><br>&#123;<br>    ArrowFactory factory;<br>    <span class=\"hljs-keyword\">public</span> CCActionManager actionManager;<br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;<br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;<br><br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br>    <span class=\"hljs-keyword\">public</span> GameObject arrow;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isStart = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> windTag = <span class=\"hljs-string\">&quot;&quot;</span>;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> wind_directX;     <br>\t<span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> wind_directY; <br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;   <br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;ArrowFactory&gt;();<br>        factory = Singleton&lt;ArrowFactory&gt;.Instance;<br>        actionManager = gameObject.AddComponent&lt;CCActionManager&gt;() <span class=\"hljs-keyword\">as</span> CCActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        LoadResource();<br>    &#125;<br>    <br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        target = GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/target&quot;</span>));<br>        GameObject.Instantiate&lt;GameObject&gt;(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/wall&quot;</span>));<br><br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(isStart) &#123;<br>            factory.FreeArrow();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Init</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(arrow == <span class=\"hljs-literal\">null</span>)&#123;<br>            wind_directX = Random.Range(<span class=\"hljs-number\">-4</span>, <span class=\"hljs-number\">4</span>);<br>\t\t\twind_directY = Random.Range(<span class=\"hljs-number\">-4</span>, <span class=\"hljs-number\">4</span>);<br>            CreateWind();<br>            arrow = factory.GetArrow();<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">moveBow</span>(<span class=\"hljs-params\">Vector3 mousePos</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(!isStart)<br>            <span class=\"hljs-keyword\">return</span>;<br>        arrow.transform.LookAt(mousePos * <span class=\"hljs-number\">30</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">shootArrow</span>(<span class=\"hljs-params\">Vector3 force</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(isStart)<br>\t\t&#123;<br>\t\t\tVector3 wind = <span class=\"hljs-keyword\">new</span> Vector3(wind_directX, wind_directY, <span class=\"hljs-number\">0</span>);<br>\t\t\tactionManager.MoveArrow(arrow, wind, force * <span class=\"hljs-number\">10</span>);<br>\t\t\tarrow = <span class=\"hljs-literal\">null</span>;<br>\t\t&#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">GetStart</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> isStart;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">string</span> <span class=\"hljs-title\">GetWind</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> windTag;<br>    &#125;<br><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Begin</span>()</span><br>    &#123;<br>        isStart = <span class=\"hljs-literal\">true</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">GetScore</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.score;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">CreateWind</span>()</span>&#123;<br>        <span class=\"hljs-built_in\">string</span> Horizontal = <span class=\"hljs-string\">&quot;&quot;</span>, Vertical = <span class=\"hljs-string\">&quot;&quot;</span>, level = <span class=\"hljs-string\">&quot;&quot;</span>;<br>        <span class=\"hljs-keyword\">if</span> (wind_directX &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            Horizontal = <span class=\"hljs-string\">&quot;西&quot;</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (wind_directX &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>            Horizontal = <span class=\"hljs-string\">&quot;东&quot;</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (wind_directY &gt; <span class=\"hljs-number\">0</span>) &#123;<br>            Vertical = <span class=\"hljs-string\">&quot;南&quot;</span>;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (wind_directY &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>            Vertical = <span class=\"hljs-string\">&quot;北&quot;</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-1</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">1</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;1 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-2</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">2</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;2 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-3</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">3</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;3 级&quot;</span>;<br>\t\t&#125;<br>\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ((wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &gt; <span class=\"hljs-number\">-5</span> &amp;&amp; (wind_directX + wind_directY) / <span class=\"hljs-number\">2</span> &lt; <span class=\"hljs-number\">5</span>)<br>\t\t&#123;<br>\t\t\tlevel = <span class=\"hljs-string\">&quot;4 级&quot;</span>;<br>\t\t&#125;<br>        windTag = Horizontal + Vertical + <span class=\"hljs-string\">&quot;风&quot;</span> + <span class=\"hljs-string\">&quot; &quot;</span> + level;<br>    <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">isArrowNull</span>()</span>&#123;<br>        <span class=\"hljs-keyword\">return</span> (arrow != <span class=\"hljs-literal\">null</span>);<br>    &#125;<br><br>    <br>&#125;<br><br></code></pre></td></tr></table></figure>\n<ul>\n<li>ScoreController</li>\n</ul>\n<p>计分器：利用靶子上带有碰撞器的物体的tag来计分。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">using</span> System.Collections;<br><span class=\"hljs-keyword\">using</span> System.Collections.Generic;<br><span class=\"hljs-keyword\">using</span> UnityEngine;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ScoreController</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> score;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Record</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">string</span> ColliderTag</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;10&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">10</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;8&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">8</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;6&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">6</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;4&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">4</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(ColliderTag == <span class=\"hljs-string\">&quot;2&quot;</span>)&#123;<br>            score+=<span class=\"hljs-number\">2</span>;<br>        &#125;<br>                <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Reset</span>()</span>&#123;<br>        score = <span class=\"hljs-number\">0</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"3、小结\">3、小结</h4>\n<ul>\n<li>要区分物理学与运动学，Rigidbody与isKinematic等的使用。</li>\n<li>要区分各种碰撞检测模式，Discrete、Continus、Continus Dynamic等，有性能上的差异。</li>\n<li>碰撞异常要思考：物体是否启用碰撞器、碰撞检测模式是否正确、物体运动是否过于高速、物体碰撞器体积是否过小等。</li>\n<li>熟悉Rigidbody的一些属性与使用，方便实现物理运动效果。</li>\n</ul>\n<blockquote>\n<p>Cauchy        2022.12.04</p>\n</blockquote>"},{"layout":"post","title":"HW7: 模型与动画","date":"2022-12-18T06:00:00.000Z","subtitle":"模型与动画","_content":"\n> 作业简介：\n>\n> 1. 智能巡逻兵(动画、订阅/发布模式)\n\n<!--more-->\n\n:fox_face:\n\n## 智能巡逻兵\n\n#### 设计要求\n\n* 创建一个地图和若干巡逻兵（使用动画）；\n* 每个巡逻兵走一个3-5个边的凸多边形，位置数据是相对地址。即每次确定下一个目标位置，用自己当前位置为原点计算；\n* 巡逻兵碰撞到障碍物，则会自动选下一个点为目标；\n* 巡逻兵在设定范围内感知到玩家，会自动追击玩家；\n* 失去玩家目标后，继续巡逻；\n* 计分：玩家每次甩掉一个巡逻兵计一分，与巡逻兵碰撞游戏结束；\n\n#### 程序设计要求\n\n* 必须使用订阅与发布模式传消息\n* 工厂模式生产巡逻兵\n\n\n\n#### 项目地址\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets\n\n#### 效果展示图\n\n地图展示\n\n![map](../../../assets/game/1218/map.gif)\n\n游戏展示\n\n![game](../../../assets/game/1218/game.gif)\n\n\n\n#### 玩法\n\n​\t你是一个狐狸妈咪，你在和你的7个小狐狸宝贝玩捉迷藏。你有一堆烦人的动物朋友，分别为猩猩、老虎和鸽子，你一靠近他们，他们就会追着你喋喋不休。要是被它们逮到，你就会被他们烦死。你要做的是快速地绕开你的烦人朋友，找到你的所有宝贝狐狸们。**方向键控制行进，按住左shift键进行加速，鼠标右键移动视角。**\n\n\n\n### 1.  预制件制作\n\n本次作业选用了Asset store里的资源包[《Quirky Series Vol.2 [v1.3]》][link2]。\n\n[link2]:https://assetstore.unity.com/packages/3d/characters/animals/quirky-series-animals-mega-pack-vol-2-183280\n\n角色主要分为3类：Player玩家：大狐狸；巡逻兵：其他动物；可拾取物体：小狐狸。\n\n#### 组件设置\n\n​\t点开Jungle Vol.1/Prefabs/RedPanda_LOD1，可以看到如图所示。为了简化模型，没有使用带有Lod Group的prefabs，这里选取的是较为精细的lod1。\n\n![01](../../../assets/game/1218/01.png)\n\n​\t对于**Player玩家**来说，我们只需要在最外层的父对象挂一个rigidbody就行，碰撞检测的部分由其他碰撞体实现。该rigidbody属性如下图所示。这里为了方便没有使用重力。注意到Constraints处勾选了几项，是因为在调试过程中，遇到了**碰撞抖动**问题。本次作业角色移动没有利用物理学，碰撞后受力就会发生奇怪的运动。这里采取锁定刚体旋转和部分位移的方式解决。\n\n![02](../../../assets/game/1218/02.png)\n\n​\t\n\n​\t对于**巡逻兵**来说，在最外层的父对象挂上rigidbody和两个脚本（一个是属性脚本，一个是检测玩家碰撞的脚本）。这里的rigidbody和上述设置类似。创建Collider空子对象，挂上一个方盒碰撞器并设为触发器，再挂上一个用于检测玩家范围的脚本。巡逻兵大体都也是这样做。差异只在属性脚本和检测范围上面。\n\n![03](../../../assets/game/1218/03.png)\n\n![04](../../../assets/game/1218/04.png)\n\n​\t对于**拾取的物体**来说，父对象挂一个碰撞器并设为触发器，再挂一个检测玩家碰撞的脚本即可。这里没有用mesh碰撞器，觉得拾取范围可以模糊一点。\n\n![05](../../../assets/game/1218/05.png)\n\n\n\n#### 动画控制器制作\n\n​\t点开官方的AC_Red Panda(Animator Controller)，我们可以看到有两个层，一个是控制整体动作，一个是控制眼睛动作。其中，整体动作可以直接通过Inspector预览，而眼睛动作需要将模型拖到Inspector才可预览，也可直接先在官方给出的Demo场景中预览。\n\n![06](../../../assets/game/1218/06.png)\n\n![07](../../../assets/game/1218/07.png)\n\n为了简单起见，本作业只用到了其中很少的动作。\n\n​\t下图是Player的动画控制器，包含三个bool类型参数：存活live、是否行走isWalk、是否奔跑isRun。动作只有默认状态Idle、行走Walk、奔跑Run及死亡Death。这里Idle到Exit的过渡没有条件，会被系统自动忽略。\n\n![08](../../../assets/game/1218/08.png)\n\n​\t下图是Idle过渡到Walk的设置。注意，这里的动作大多没有Exit Time，因为满足过渡条件时，如进入行走、进入攻击等动作变化需要马上执行，不需要等待上一个动作做完。\n\n![09](../../../assets/game/1218/09.png)\n\n​\t下图是**巡逻兵**的动画控制器，这个更简单，其实只有行走和攻击两种状态，不过在游戏结束时，我们还是让它进入到静止状态的Idle。这里只是给出一个例子，不同的模型要匹配相应的模型动作，不然执行时模型会变成动画控制器的那个 (别问怎么知道的，问就是干过这种蠢事)。\n\n![10](../../../assets/game/1218/10.png)\n\n​\t下图是**拾取的物体**的动画控制器，由于动作比较简单，也加入了眼睛的变化。没被找到时，就坐在原地哭唧唧，被找到后就高兴跳起来。\n\n![11](../../../assets/game/1218/11.png)![12](../../../assets/game/1218/12.png)\n\n\n\n到此，角色的预制件就做得差不多了。后面就是根据实际情况，还要去预先设计并记录一下巡逻兵属性脚本的数据值。\n\n\n\n### 2.  场景制作\n\n场景分两部分，摄像机Camera和地图Map。为了方便加载，这个地图是预先摆好并保存为预制件。\n\n​\t地图部分如下图，是Map空对象下放了子对象墙体地板等组成的。子对象部分有4类：Wall、InnerWall、Plane、Area，分别代表四面围墙、内部障碍墙、地板和各巡逻区域。Wall和InnerWall都是普通的Cube对象，Plane就是Plane对象，Area则是空对象挂上一个Box Collider和一个区域检测的脚本。位置摆放及数值等都是本人自己设计的，没什么好讲的。~~(这里有扇墙是假的)~~\n\n![13](../../../assets/game/1218/13.png)\n\n​\t然后，我们将第一步做的预制件先放在想要放的位置，记录位置数据等。因为要求用工厂模式生成巡逻兵，拾取的物体也顺便通过该模式生成了。\n\n​\t摄像机是使用Main Camera，为了可以通过鼠标控制视角，并跟随玩家，挂上一个Camera Flow脚本。确定好Player的初始位置，就可以确定好摄像机的初始位置了。\n\n到此，预制部分就全部做完了，可以开始写代码了。\n\n\n\n### 3.  代码解析\n\n#### 代码框架图\n\n(本人还是不太习惯用UML图，思维导图既能帮助我整理结构，又能标记完成情况等，比较方便。)\n\n![Patrol](../../../assets/game/1218/Patrol.png)\n\n\n\n#### Models部分\n\n**Camera Flow**\n\n摄像机跟随脚本，网络上挺多这样的模板的，这里也是随便参考了一个。因为视角只希望在水平方向移动，不希望上下或者前后移动，这里的RotateAround就只是绕着跟随的目标的Y轴旋转。\n\n```c#\npublic class CameraFlow : MonoBehaviour\n{\n    public GameObject target;\n\n    Vector3 offset;\n\n    void Start()\n    {\n        offset = this.transform.position - target.transform.position;\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        this.transform.position = target.transform.position + offset;\n        Rotate();\n        Scale();\n    }\n    //缩放\n    private void Scale()\n    {\n        float dis = offset.magnitude;\n        dis += Input.GetAxis(\"Mouse ScrollWheel\") * 5;\n        if (dis < 3 || dis > 20)\n        {\n            return;\n        }\n        offset = offset.normalized * dis;\n    }\n    //左右移动\n    private void Rotate()\n    {\n        if (Input.GetMouseButton(1))\n        {\n            Vector3 pos = this.transform.position;\n            this.transform.RotateAround(target.transform.position, Vector3.up, Input.GetAxis(\"Mouse X\") * 10);\n            //  更新相对差值\n            offset = this.transform.position - target.transform.position;\n        }\n    }\n}\n```\n\n\n\n**Enemy Data**\n\n巡逻兵属性。每个数据的含义如注释所写。在工厂模式生成的时候，初始化数值。\n\n```c#\npublic class EnemyData : MonoBehaviour\n{\n    public int AreaID;                      //  Enemy巡逻区域序号\n    public bool isFollow = false;           // 是否跟随玩家\n    public int CurID = -1;                  //  当前玩家所在区域序号\n    public GameObject player;               //  玩家游戏对象\n    public int kind;                        //  巡逻类型 3/4/5边\n    public Vector3 startPos;                //  Enemy初始位置   \n    public Vector3 lu;                      //  Enemy巡逻区域左上角坐标\n    public Vector3 rd;                      //  Enemy巡逻区域右下角坐标\n}\n```\n\n\n\n**Patrol Detection**\n\n巡逻检测，玩家进入范围就追捕，走出范围就停止追捕。\n\n```c#\npublic class PatrolDetection : MonoBehaviour\n{\n    void OnTriggerEnter(Collider collider)\n    {\n        EnemyData parent = this.gameObject.transform.parent.GetComponent<EnemyData>();\n    \t//玩家进入Enemy追捕范围，开始追捕\n        if (collider.gameObject.tag == \"Player\")\n        {\n            //启动追捕模式\n            parent.isFollow = true;\n            //将追捕对象设置为玩家\n            parent.player = collider.gameObject;\n        }\n    }\n    void OnTriggerExit(Collider collider)\n    {\n        EnemyData parent = this.gameObject.transform.parent.GetComponent<EnemyData>();\n        //玩家跑出Enemy追捕范围/玩家跑出Enemy管控范围，结束追捕\n        if (collider.gameObject.tag == \"Player\" || parent.AreaID != parent.CurID)\n        {\n            //关闭追捕模式\n            parent.isFollow = false;\n            //将追捕对象设置为空\n            parent.player = null;\n        }\n    }\n}\n```\n\n\n\n**Other Detection** \n\n```c#\n// 检测玩家与巡逻兵碰撞\npublic class PlayerDetection : MonoBehaviour\n{\n    void OnCollisionEnter(Collision other)\n    {\n        //当玩家与巡逻兵相撞\n        if (other.gameObject.tag == \"Player\")\n        {\n            //玩家死亡\n            other.gameObject.GetComponent<Animator>().SetBool(\"live\",false);\n            //Enemy发动攻击\n            this.GetComponent<Animator>().SetTrigger(\"attack_tri\");\n            //游戏结束\n            Singleton<GameEventManager>.Instance.playerGameOver();\n        }\n    }\n}\n\n// 检测被拾取的物体(Baby)是否被碰撞(拾取)\npublic class BabyDetection : MonoBehaviour\n{\n    void OnTriggerEnter(Collider collider)\n    {\n        if (collider.gameObject.tag == \"Player\" && this.gameObject.activeSelf)\n        {\n            this.gameObject.GetComponent<Animator>().SetBool(\"isFind\",true);\n            this.gameObject.GetComponent<BoxCollider>().enabled = false;\n            Singleton<GameEventManager>.Instance.reduceBabyNum();\n        }\n    }\n}\n\n// 区域标志、检测玩家进入哪个区域\npublic class AreaDetection : MonoBehaviour\n{\n    public int AreaID = 0;\n    FirstSceneController sceneController;\n\n    void Start()\n    {\n        sceneController = Director.getInstance().currentSceneController as FirstSceneController;\n    }\n\n    void OnTriggerEnter(Collider collider){\n        if(collider.gameObject.tag == \"Player\"){\n            sceneController.CurID = AreaID;\n        }\n    }\n}\n```\n\n\n\n#### Actions部分\n\n这里只介绍巡逻动作的脚本。\n\n**Enemy Walk Action**\n\n​\t通过在矩形画凸多边形，在多边形上任意取点。多边形取点逻辑如下图所示。橙色边为给定的巡逻大范围。**三角形**则在紫色、绿色及黄色三条线段依次任取点；**四边形**则在紫色、绿色、黄色、蓝色四条线段上依次任取点；**五边形**则在紫色、绿色、右侧粉色、粉色定点、上方粉色，四条线段加一个定点依次取点。忽略边界的小概率实践，形成的轨迹就是指定的凸多边形。\n\n![14](../../../assets/game/1218/14.png)\n\n​\t也许会留意到轨迹周围有一段留白，那是为了避免巡逻兵在指定轨迹上行走，碰上障碍物原地不动的情况设置的。\n\n```c#\npublic class EnemyWalkAction : SSAction\n{\n    private int kind = 4;                           //  多边形边数\n    // 运动范围为(areaDown,areaUp),(areaLeft,areaRight)\n    private float areaLeft = 0;\n    private float areaUp = 0;\n    private float areaRight = 0;\n    private float areaDown = 0;\n    private float moveSpeed = 1.8f;                 //  移动速度\n    private bool isReach = true;                    //  是否到达目的地\n    private EnemyData enemyData;                    //  Enemy数据\n    private List<Vector3> path = new List<Vector3>();   //存储路径点\n    private int curTar = 0;     //  当前目标地索引\n\n    private EnemyWalkAction() { }\n    public static EnemyWalkAction GetSSAction(int k, Vector3 start, Vector3 lu, Vector3 rd)\n    {\n        EnemyWalkAction action = CreateInstance<EnemyWalkAction>();\n        action.kind = k;\n        action.areaLeft = lu.x;\n        action.areaRight = rd.x;\n        action.areaUp = lu.z;\n        action.areaDown = rd.z;\n        action.initPath();\n        \n        return action;\n    }\n    Vector3 getPoint(float left, float right, float down, float up){\n        Vector3 res= new Vector3(0,0,0);\n        if(left==right){    //竖线\n            res.x = left;\n            res.z = Random.Range(down,up); \n        }\n        else if(down==up){\n            res.x = Random.Range(left,right);\n            res.z = down;\n        }\n        else{\n            res.x = Random.Range(left,right);\n            res.z = Random.Range(down,up);\n        }\n        return res;\n    }\n    void initPath()\n    {\n        float midx = (areaLeft+areaRight)/2;\n        float midz = (areaUp+areaDown)/2;\n        path.Add(getPoint(areaLeft+2f,areaLeft+2f,areaDown+2f,areaUp-2f));\n        path.Add(getPoint(areaLeft+2f,areaRight-2f,areaDown+2f,areaDown+2f));\n        // 三角形\n        if(kind==3){\n            path.Add(getPoint(areaRight-2f,areaRight-2f,midz,areaUp-2f));\n        }\n        // 四边形\n        else if(kind==4){\n            path.Add(getPoint(areaRight-2f,areaRight-2f,areaDown+2f,areaUp-2f));\n            path.Add(getPoint(areaLeft+2f,areaRight-2f,areaUp-2f,areaUp-2f));\n        }\n        // 五边形\n        else if(kind==5){\n            float quax = (midx+areaRight)/2;\n            float quaz = (midz+areaUp)/2;\n            path.Add(getPoint(areaRight-2f,areaRight-2f,areaDown+2f,midz));\n            path.Add(new Vector3(quax,0,quaz));\n            path.Add(getPoint(areaLeft+2f,midx,areaUp-2f,areaUp-2f));\n        }\n    }\n\n    void goPatrol()\n    {\n        if(isReach){\n            curTar ++;\n            curTar %= kind;\n            isReach = false;\n        }\n        this.transform.LookAt(path[curTar]);\n        // 只要很接近地点就相当于到了\n        float distance = Vector3.Distance(transform.position, path[curTar]);\n        if (distance > 0.9)\n        {\n            transform.position = Vector3.MoveTowards(this.transform.position, path[curTar], moveSpeed * Time.deltaTime);\n        }\n        else{\n            isReach = true;\n        }\n    }\n    \n\n    public override void Update()\n    {\n        // 巡逻移动\n        goPatrol();\n        // 如果巡逻兵需要跟随玩家并且玩家就在巡逻兵所在的区域，巡逻动作停止\n        if (enemyData.isFollow && enemyData.CurID == enemyData.AreaID)\n        {\n            this.destroy = true;\n            this.callback.SSActionEvent(this, 0, this.gameObject);\n        }\n    }\n    public override void Start()\n    {\n        this.gameObject.GetComponent<Animator>().SetBool(\"isWalk\", true);\n        enemyData = this.gameObject.GetComponent<EnemyData>();\n    }\n}\n\n```\n\n\n\n#### Controllers部分\n\n**First Scene Controller**\n\n简单讲一下场景控制器。实现了消息订阅，实现了用户动作接口和场景动作接口。其中，有一个需要注意的点是 Restart 使用了`SceneManager.LoadScene();`，可以加载指定场景，比较方便。\n\n```c#\npublic class FirstSceneController : MonoBehaviour, IUserAction, ISceneController\n{\n    public PropFactory factory;                              // Enemy和Baby工厂\n    public ScoreController scoreController;                  // 记分员\n    public EnemyActionManager manager;                       // 运动管理器\n    public myUserGUI userGUI;                                // 用户界面\n    public int CurID = -1;                                   // 当前玩家所于检测区域的序号\n    public GameObject player;                                // 玩家\n    public Camera cam;                                       // 主相机\n    public float moveSpeed = 5;                              // 玩家移动速度\n    public float rotateSpeed = 250f;                         // 玩家旋转速度\n    private List<GameObject> enemies;                        // 场景中Enemy列表\n    private List<GameObject> babies;                         // 场景Baby列表\n    private bool isGameOver = false;                         // 游戏是否结束\n\n    void Update()\n    {\n        for (int i = 0; i < enemies.Count; i++)\n        {\n            enemies[i].gameObject.GetComponent<EnemyData>().CurID = CurID;\n        }\n        // Baby收集完毕\n        if(scoreController.getBabyNum() == 0)\n        {\n            GameOver();\n        }\n    }\n    void Start()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<PropFactory>();\n        factory = Singleton<PropFactory>.Instance;\n        manager = gameObject.AddComponent<EnemyActionManager>() as EnemyActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        LoadResource();\n        cam.GetComponent<CameraFlow>().target = player;\n        \n    }\n\n    public void LoadResource()\n    {\n        Instantiate(Resources.Load<GameObject>(\"Prefabs/Map\"));\n        player = Instantiate(Resources.Load(\"Prefabs/Player\"), new Vector3(0, 0, 0), Quaternion.identity) as GameObject;\n        babies = factory.getBabies();\n        enemies = factory.getEnemies();\n\n        // 所有巡逻兵移动\n        for (int i = 0; i < enemies.Count; i++)\n        {\n            manager.Walk(enemies[i]);\n        }\n    }\n\n\n    // 玩家移动\n    public void movePlayer(float tranX, float tranZ, bool isShift)\n    {\n        if(!isGameOver)\n        {\n            if (tranX != 0 || tranZ != 0)\n            {\n                player.GetComponent<Animator>().SetBool(\"isWalk\", true);\n                // 如果shift加速\n                if (isShift){\n                    player.GetComponent<Animator>().SetBool(\"isRun\", true);\n                    moveSpeed = 10;\n                }\n                else{\n                    player.GetComponent<Animator>().SetBool(\"isRun\", false);\n                    moveSpeed = 5;\n                }\n            }\n            else\n            {\n                player.GetComponent<Animator>().SetBool(\"isWalk\", false);\n                return;\n            }\n            // 移动和旋转\n            player.transform.Translate(0, 0, tranZ * moveSpeed * Time.deltaTime);\n            player.transform.Rotate(0, tranX * rotateSpeed * Time.deltaTime, 0);\n\n            // 防止碰撞带来的移动\n            if (player.transform.localEulerAngles.x != 0 || player.transform.localEulerAngles.z != 0)\n            {\n                player.transform.localEulerAngles = new Vector3(0, player.transform.localEulerAngles.y, 0);\n            }\n            if (player.transform.position.y != 0)\n            {\n                player.transform.position = new Vector3(player.transform.position.x, 0, player.transform.position.z);\n            }     \n        }\n    }\n\n    public int getScore()\n    {\n        return scoreController.getScore();\n    }\n\n    public int getBabyNum()\n    {\n        return scoreController.getBabyNum();\n    }\n    public bool getGameOver()\n    {\n        return isGameOver;\n    }\n    public void Restart()\n    {\n        SceneManager.LoadScene(\"Scenes/startScene\");\n    }\n\n    void OnEnable()\n    {\n        GameEventManager.scoreChange += addScore;\n        GameEventManager.gameOverChange += GameOver;\n        GameEventManager.babyChange += reduceBabyNum;\n    }\n    void OnDisable()\n    {\n        GameEventManager.scoreChange -= addScore;\n        GameEventManager.gameOverChange -= GameOver;\n        GameEventManager.babyChange -= reduceBabyNum;\n    }\n\n    void reduceBabyNum()\n    {\n        scoreController.reduceBaby();\n    }\n    void addScore()\n    {\n        scoreController.addScore();\n    }\n    void GameOver()\n    {\n        isGameOver = true;\n        factory.stopEnemies();\n        manager.DestroyAllAction();\n    }\n}\n```\n\n\n\n\n\n#### Others部分\n\n**Game Event Manager**\n\n订阅/发布模式（又叫观察者模式，事件-代理机制 ， 事件的代理模型）。\n\n```c#\npublic class GameEventManager : MonoBehaviour\n{\n    //  分数变化\n    public delegate void ScoreEvent();\n    public static event ScoreEvent scoreChange;\n    //  游戏结束\n    public delegate void GameOverEvent();\n    public static event GameOverEvent gameOverChange;\n    //  Baby数量\n    public delegate void BabyEvent();\n    public static event BabyEvent babyChange;\n\n    //  分数变化\n    public void playerEscape()\n    {\n        if (scoreChange != null)\n        {\n            scoreChange();\n        }\n    }\n    //  游戏结束\n    public void playerGameOver()\n    {\n        if (gameOverChange != null)\n        {\n            gameOverChange();\n        }\n    }\n    //  Baby数量\n    public void reduceBabyNum()\n    {\n        if (babyChange != null)\n        {\n            babyChange();\n        }\n    }\n}\n```\n\n`delegate`关键字定义了函数类型`ScoreEvent`、`GameOverEvent`、`BabyEvent`等的代理类型。静态变量scoreChange、gameOverChange、babyChange就是相应的“被订阅的主题”。\n\n如下图 FirstSceneController 里的调用，+= 部分表示左边的函数一被调用，就会通知**所有**带有右边函数的对象要进行调用右边的函数，相当于右边订阅了左边。而 -= 就代表取消订阅了。\n\n这里的`playerEscape()`等函数是一个接口，当调用时，就在告诉记分员要计分`addScore()`了。\n\n![15](../../../assets/game/1218/15.png)\n\n\n\n#### Views部分\n\n**myUserGUI**\n\n用户界面，也是大同小异。\n\n这里主要是为了提到一个悬浮提示的小制作。格式如下，其中`tipStyle`为可选\n\n```c#\nGUI.Button(new Rect(0,0,0,0), new GUIContent(\"提示\", \"提示内容\"));\nGUI.Label(new Rect(1,1,1,1), GUI.tooltip[, tipStyle]);\n```\n\n第一次知道，IMGUI里的内容可以使用 `\\n` 来换行。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    private GUIStyle scoreNumStyle = new GUIStyle();\n    private GUIStyle scoreTextStyle = new GUIStyle();\n    private GUIStyle scoreShadowStyle = new GUIStyle();\n    private GUIStyle titleStyle = new GUIStyle();\n    private GUIStyle shadowStyle = new GUIStyle();\n    private GUIStyle tipStyle = new GUIStyle();\n\n    void Start ()\n    {\n        action = Director.getInstance().currentSceneController as IUserAction;\n        scoreNumStyle.normal.textColor = new Color(1,0.92f,0.016f,1);\n        scoreNumStyle.fontSize = 30;\n        scoreTextStyle.normal.textColor = new Color(0, 0, 0, 1);\n        scoreTextStyle.fontSize = 30;\n        scoreShadowStyle.normal.textColor = new Color(1,1,1,0.4f);\n        scoreShadowStyle.fontSize = 30;\n        titleStyle.normal.textColor = new Color(0.47F,0.4F,0.93F,1);\n        titleStyle.fontSize = 40;\n        shadowStyle.normal.textColor = new Color(1,1,1,0.5f);\n        shadowStyle.fontSize = 40;\n        tipStyle.normal.textColor = new Color(0.54f,0.27f,0.04f,1);\n        tipStyle.fontSize = 18;\n        \n    }\n\n    void Update()\n    {\n        //获取方向键的偏移量\n        float tranX = Input.GetAxis(\"Horizontal\");\n        float tranZ = Input.GetAxis(\"Vertical\");\n        bool isShift = Input.GetKey(KeyCode.LeftShift);\n        //移动玩家\n        action.movePlayer(tranX, tranZ, isShift);\n    }\n    private void OnGUI()\n    {\n        GUI.skin.button.fontSize = 20;\n        GUI.Label(new Rect(10, 5, 200, 50), \"分数:\", scoreTextStyle);\n        GUI.Label(new Rect(9, 4, 200, 50), \"分数:\", scoreShadowStyle);\n        GUI.Label(new Rect(90, 5, 200, 50), action.getScore().ToString(), scoreNumStyle);\n        GUI.Label(new Rect(Screen.width - 245, 5, 200, 50), \"剩余小狐狸数:\", scoreTextStyle);\n        GUI.Label(new Rect(Screen.width - 246, 4, 200, 50), \"剩余小狐狸数:\", scoreShadowStyle);\n        GUI.Label(new Rect(Screen.width - 50, 5, 50, 50), action.getBabyNum().ToString(), scoreNumStyle);\n        if(action.getGameOver() && action.getBabyNum() != 0)\n        {\n            GUI.Label(new Rect(Screen.width / 2 - 80, Screen.height / 2 - 100, 100, 100), \"游戏结束\", titleStyle);\n            GUI.Label(new Rect(Screen.width / 2 - 78, Screen.height / 2 - 98, 100, 100), \"游戏结束\", shadowStyle);\n            if (GUI.Button(new Rect(Screen.width / 2 - 50, Screen.height / 2 , 100, 50), \"重新开始\"))\n            {\n                action.Restart();\n                return;\n            }\n        }\n        else if(action.getBabyNum() <= 0)\n        {\n            GUI.Label(new Rect(Screen.width / 2 - 80, Screen.height / 2 - 100, 100, 100), \"恭喜胜利\", titleStyle);\n            GUI.Label(new Rect(Screen.width / 2 - 78, Screen.height / 2 - 98, 100, 100), \"恭喜胜利\", shadowStyle);\n            if (GUI.Button(new Rect(Screen.width / 2 - 50, Screen.height / 2 , 100, 50), \"重新开始\"))\n            {\n                action.Restart();\n                return;\n            }\n        }\n\n        GUI.Button(new Rect(Screen.width / 2 - 50 ,10, 100, 50), new GUIContent(\"提示规则\", \"按WSAD或方向键移动\\n按左Shift键进行加速\\n成功躲避猛兽追捕加1分\\n找到所有小狐狸即可获胜\\n鼠标右键实现视角转动\"));\n        GUI.Label(new Rect(Screen.width / 2 - 80 ,80, 150, 120), GUI.tooltip, tipStyle);\n    }\n\n}\n```\n\n\n\n### 小结\n\n* 学会了动画控制器的使用；\n* 理解了订阅/发布模式；\n* 了解到了碰撞抖动、IMGUI的悬浮提示做法等。\n\n* Player与一个被拾取物体的碰撞按道理只会触发一次。碰撞很偶尔会出现两次的情况，没有解决这个bug。\n* 巡逻兵没有加变速功能，且探测范围设置较小，游戏难度比较低。\n\n\n\n> 2022.12.19\t\t\tCauchy.","source":"_posts/2022/Homework7/Homework7.md","raw":"---\nlayout: post\ntitle:  \"HW7: 模型与动画\"\ndate:   2022-12-18 14:00:00 +0800\ntags:\n- unity\n- animator\ncategories: Game\nsubtitle: '模型与动画'\n---\n\n> 作业简介：\n>\n> 1. 智能巡逻兵(动画、订阅/发布模式)\n\n<!--more-->\n\n:fox_face:\n\n## 智能巡逻兵\n\n#### 设计要求\n\n* 创建一个地图和若干巡逻兵（使用动画）；\n* 每个巡逻兵走一个3-5个边的凸多边形，位置数据是相对地址。即每次确定下一个目标位置，用自己当前位置为原点计算；\n* 巡逻兵碰撞到障碍物，则会自动选下一个点为目标；\n* 巡逻兵在设定范围内感知到玩家，会自动追击玩家；\n* 失去玩家目标后，继续巡逻；\n* 计分：玩家每次甩掉一个巡逻兵计一分，与巡逻兵碰撞游戏结束；\n\n#### 程序设计要求\n\n* 必须使用订阅与发布模式传消息\n* 工厂模式生产巡逻兵\n\n\n\n#### 项目地址\n\n[https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets][link]\n\n[link]:https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets\n\n#### 效果展示图\n\n地图展示\n\n![map](../../../assets/game/1218/map.gif)\n\n游戏展示\n\n![game](../../../assets/game/1218/game.gif)\n\n\n\n#### 玩法\n\n​\t你是一个狐狸妈咪，你在和你的7个小狐狸宝贝玩捉迷藏。你有一堆烦人的动物朋友，分别为猩猩、老虎和鸽子，你一靠近他们，他们就会追着你喋喋不休。要是被它们逮到，你就会被他们烦死。你要做的是快速地绕开你的烦人朋友，找到你的所有宝贝狐狸们。**方向键控制行进，按住左shift键进行加速，鼠标右键移动视角。**\n\n\n\n### 1.  预制件制作\n\n本次作业选用了Asset store里的资源包[《Quirky Series Vol.2 [v1.3]》][link2]。\n\n[link2]:https://assetstore.unity.com/packages/3d/characters/animals/quirky-series-animals-mega-pack-vol-2-183280\n\n角色主要分为3类：Player玩家：大狐狸；巡逻兵：其他动物；可拾取物体：小狐狸。\n\n#### 组件设置\n\n​\t点开Jungle Vol.1/Prefabs/RedPanda_LOD1，可以看到如图所示。为了简化模型，没有使用带有Lod Group的prefabs，这里选取的是较为精细的lod1。\n\n![01](../../../assets/game/1218/01.png)\n\n​\t对于**Player玩家**来说，我们只需要在最外层的父对象挂一个rigidbody就行，碰撞检测的部分由其他碰撞体实现。该rigidbody属性如下图所示。这里为了方便没有使用重力。注意到Constraints处勾选了几项，是因为在调试过程中，遇到了**碰撞抖动**问题。本次作业角色移动没有利用物理学，碰撞后受力就会发生奇怪的运动。这里采取锁定刚体旋转和部分位移的方式解决。\n\n![02](../../../assets/game/1218/02.png)\n\n​\t\n\n​\t对于**巡逻兵**来说，在最外层的父对象挂上rigidbody和两个脚本（一个是属性脚本，一个是检测玩家碰撞的脚本）。这里的rigidbody和上述设置类似。创建Collider空子对象，挂上一个方盒碰撞器并设为触发器，再挂上一个用于检测玩家范围的脚本。巡逻兵大体都也是这样做。差异只在属性脚本和检测范围上面。\n\n![03](../../../assets/game/1218/03.png)\n\n![04](../../../assets/game/1218/04.png)\n\n​\t对于**拾取的物体**来说，父对象挂一个碰撞器并设为触发器，再挂一个检测玩家碰撞的脚本即可。这里没有用mesh碰撞器，觉得拾取范围可以模糊一点。\n\n![05](../../../assets/game/1218/05.png)\n\n\n\n#### 动画控制器制作\n\n​\t点开官方的AC_Red Panda(Animator Controller)，我们可以看到有两个层，一个是控制整体动作，一个是控制眼睛动作。其中，整体动作可以直接通过Inspector预览，而眼睛动作需要将模型拖到Inspector才可预览，也可直接先在官方给出的Demo场景中预览。\n\n![06](../../../assets/game/1218/06.png)\n\n![07](../../../assets/game/1218/07.png)\n\n为了简单起见，本作业只用到了其中很少的动作。\n\n​\t下图是Player的动画控制器，包含三个bool类型参数：存活live、是否行走isWalk、是否奔跑isRun。动作只有默认状态Idle、行走Walk、奔跑Run及死亡Death。这里Idle到Exit的过渡没有条件，会被系统自动忽略。\n\n![08](../../../assets/game/1218/08.png)\n\n​\t下图是Idle过渡到Walk的设置。注意，这里的动作大多没有Exit Time，因为满足过渡条件时，如进入行走、进入攻击等动作变化需要马上执行，不需要等待上一个动作做完。\n\n![09](../../../assets/game/1218/09.png)\n\n​\t下图是**巡逻兵**的动画控制器，这个更简单，其实只有行走和攻击两种状态，不过在游戏结束时，我们还是让它进入到静止状态的Idle。这里只是给出一个例子，不同的模型要匹配相应的模型动作，不然执行时模型会变成动画控制器的那个 (别问怎么知道的，问就是干过这种蠢事)。\n\n![10](../../../assets/game/1218/10.png)\n\n​\t下图是**拾取的物体**的动画控制器，由于动作比较简单，也加入了眼睛的变化。没被找到时，就坐在原地哭唧唧，被找到后就高兴跳起来。\n\n![11](../../../assets/game/1218/11.png)![12](../../../assets/game/1218/12.png)\n\n\n\n到此，角色的预制件就做得差不多了。后面就是根据实际情况，还要去预先设计并记录一下巡逻兵属性脚本的数据值。\n\n\n\n### 2.  场景制作\n\n场景分两部分，摄像机Camera和地图Map。为了方便加载，这个地图是预先摆好并保存为预制件。\n\n​\t地图部分如下图，是Map空对象下放了子对象墙体地板等组成的。子对象部分有4类：Wall、InnerWall、Plane、Area，分别代表四面围墙、内部障碍墙、地板和各巡逻区域。Wall和InnerWall都是普通的Cube对象，Plane就是Plane对象，Area则是空对象挂上一个Box Collider和一个区域检测的脚本。位置摆放及数值等都是本人自己设计的，没什么好讲的。~~(这里有扇墙是假的)~~\n\n![13](../../../assets/game/1218/13.png)\n\n​\t然后，我们将第一步做的预制件先放在想要放的位置，记录位置数据等。因为要求用工厂模式生成巡逻兵，拾取的物体也顺便通过该模式生成了。\n\n​\t摄像机是使用Main Camera，为了可以通过鼠标控制视角，并跟随玩家，挂上一个Camera Flow脚本。确定好Player的初始位置，就可以确定好摄像机的初始位置了。\n\n到此，预制部分就全部做完了，可以开始写代码了。\n\n\n\n### 3.  代码解析\n\n#### 代码框架图\n\n(本人还是不太习惯用UML图，思维导图既能帮助我整理结构，又能标记完成情况等，比较方便。)\n\n![Patrol](../../../assets/game/1218/Patrol.png)\n\n\n\n#### Models部分\n\n**Camera Flow**\n\n摄像机跟随脚本，网络上挺多这样的模板的，这里也是随便参考了一个。因为视角只希望在水平方向移动，不希望上下或者前后移动，这里的RotateAround就只是绕着跟随的目标的Y轴旋转。\n\n```c#\npublic class CameraFlow : MonoBehaviour\n{\n    public GameObject target;\n\n    Vector3 offset;\n\n    void Start()\n    {\n        offset = this.transform.position - target.transform.position;\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        this.transform.position = target.transform.position + offset;\n        Rotate();\n        Scale();\n    }\n    //缩放\n    private void Scale()\n    {\n        float dis = offset.magnitude;\n        dis += Input.GetAxis(\"Mouse ScrollWheel\") * 5;\n        if (dis < 3 || dis > 20)\n        {\n            return;\n        }\n        offset = offset.normalized * dis;\n    }\n    //左右移动\n    private void Rotate()\n    {\n        if (Input.GetMouseButton(1))\n        {\n            Vector3 pos = this.transform.position;\n            this.transform.RotateAround(target.transform.position, Vector3.up, Input.GetAxis(\"Mouse X\") * 10);\n            //  更新相对差值\n            offset = this.transform.position - target.transform.position;\n        }\n    }\n}\n```\n\n\n\n**Enemy Data**\n\n巡逻兵属性。每个数据的含义如注释所写。在工厂模式生成的时候，初始化数值。\n\n```c#\npublic class EnemyData : MonoBehaviour\n{\n    public int AreaID;                      //  Enemy巡逻区域序号\n    public bool isFollow = false;           // 是否跟随玩家\n    public int CurID = -1;                  //  当前玩家所在区域序号\n    public GameObject player;               //  玩家游戏对象\n    public int kind;                        //  巡逻类型 3/4/5边\n    public Vector3 startPos;                //  Enemy初始位置   \n    public Vector3 lu;                      //  Enemy巡逻区域左上角坐标\n    public Vector3 rd;                      //  Enemy巡逻区域右下角坐标\n}\n```\n\n\n\n**Patrol Detection**\n\n巡逻检测，玩家进入范围就追捕，走出范围就停止追捕。\n\n```c#\npublic class PatrolDetection : MonoBehaviour\n{\n    void OnTriggerEnter(Collider collider)\n    {\n        EnemyData parent = this.gameObject.transform.parent.GetComponent<EnemyData>();\n    \t//玩家进入Enemy追捕范围，开始追捕\n        if (collider.gameObject.tag == \"Player\")\n        {\n            //启动追捕模式\n            parent.isFollow = true;\n            //将追捕对象设置为玩家\n            parent.player = collider.gameObject;\n        }\n    }\n    void OnTriggerExit(Collider collider)\n    {\n        EnemyData parent = this.gameObject.transform.parent.GetComponent<EnemyData>();\n        //玩家跑出Enemy追捕范围/玩家跑出Enemy管控范围，结束追捕\n        if (collider.gameObject.tag == \"Player\" || parent.AreaID != parent.CurID)\n        {\n            //关闭追捕模式\n            parent.isFollow = false;\n            //将追捕对象设置为空\n            parent.player = null;\n        }\n    }\n}\n```\n\n\n\n**Other Detection** \n\n```c#\n// 检测玩家与巡逻兵碰撞\npublic class PlayerDetection : MonoBehaviour\n{\n    void OnCollisionEnter(Collision other)\n    {\n        //当玩家与巡逻兵相撞\n        if (other.gameObject.tag == \"Player\")\n        {\n            //玩家死亡\n            other.gameObject.GetComponent<Animator>().SetBool(\"live\",false);\n            //Enemy发动攻击\n            this.GetComponent<Animator>().SetTrigger(\"attack_tri\");\n            //游戏结束\n            Singleton<GameEventManager>.Instance.playerGameOver();\n        }\n    }\n}\n\n// 检测被拾取的物体(Baby)是否被碰撞(拾取)\npublic class BabyDetection : MonoBehaviour\n{\n    void OnTriggerEnter(Collider collider)\n    {\n        if (collider.gameObject.tag == \"Player\" && this.gameObject.activeSelf)\n        {\n            this.gameObject.GetComponent<Animator>().SetBool(\"isFind\",true);\n            this.gameObject.GetComponent<BoxCollider>().enabled = false;\n            Singleton<GameEventManager>.Instance.reduceBabyNum();\n        }\n    }\n}\n\n// 区域标志、检测玩家进入哪个区域\npublic class AreaDetection : MonoBehaviour\n{\n    public int AreaID = 0;\n    FirstSceneController sceneController;\n\n    void Start()\n    {\n        sceneController = Director.getInstance().currentSceneController as FirstSceneController;\n    }\n\n    void OnTriggerEnter(Collider collider){\n        if(collider.gameObject.tag == \"Player\"){\n            sceneController.CurID = AreaID;\n        }\n    }\n}\n```\n\n\n\n#### Actions部分\n\n这里只介绍巡逻动作的脚本。\n\n**Enemy Walk Action**\n\n​\t通过在矩形画凸多边形，在多边形上任意取点。多边形取点逻辑如下图所示。橙色边为给定的巡逻大范围。**三角形**则在紫色、绿色及黄色三条线段依次任取点；**四边形**则在紫色、绿色、黄色、蓝色四条线段上依次任取点；**五边形**则在紫色、绿色、右侧粉色、粉色定点、上方粉色，四条线段加一个定点依次取点。忽略边界的小概率实践，形成的轨迹就是指定的凸多边形。\n\n![14](../../../assets/game/1218/14.png)\n\n​\t也许会留意到轨迹周围有一段留白，那是为了避免巡逻兵在指定轨迹上行走，碰上障碍物原地不动的情况设置的。\n\n```c#\npublic class EnemyWalkAction : SSAction\n{\n    private int kind = 4;                           //  多边形边数\n    // 运动范围为(areaDown,areaUp),(areaLeft,areaRight)\n    private float areaLeft = 0;\n    private float areaUp = 0;\n    private float areaRight = 0;\n    private float areaDown = 0;\n    private float moveSpeed = 1.8f;                 //  移动速度\n    private bool isReach = true;                    //  是否到达目的地\n    private EnemyData enemyData;                    //  Enemy数据\n    private List<Vector3> path = new List<Vector3>();   //存储路径点\n    private int curTar = 0;     //  当前目标地索引\n\n    private EnemyWalkAction() { }\n    public static EnemyWalkAction GetSSAction(int k, Vector3 start, Vector3 lu, Vector3 rd)\n    {\n        EnemyWalkAction action = CreateInstance<EnemyWalkAction>();\n        action.kind = k;\n        action.areaLeft = lu.x;\n        action.areaRight = rd.x;\n        action.areaUp = lu.z;\n        action.areaDown = rd.z;\n        action.initPath();\n        \n        return action;\n    }\n    Vector3 getPoint(float left, float right, float down, float up){\n        Vector3 res= new Vector3(0,0,0);\n        if(left==right){    //竖线\n            res.x = left;\n            res.z = Random.Range(down,up); \n        }\n        else if(down==up){\n            res.x = Random.Range(left,right);\n            res.z = down;\n        }\n        else{\n            res.x = Random.Range(left,right);\n            res.z = Random.Range(down,up);\n        }\n        return res;\n    }\n    void initPath()\n    {\n        float midx = (areaLeft+areaRight)/2;\n        float midz = (areaUp+areaDown)/2;\n        path.Add(getPoint(areaLeft+2f,areaLeft+2f,areaDown+2f,areaUp-2f));\n        path.Add(getPoint(areaLeft+2f,areaRight-2f,areaDown+2f,areaDown+2f));\n        // 三角形\n        if(kind==3){\n            path.Add(getPoint(areaRight-2f,areaRight-2f,midz,areaUp-2f));\n        }\n        // 四边形\n        else if(kind==4){\n            path.Add(getPoint(areaRight-2f,areaRight-2f,areaDown+2f,areaUp-2f));\n            path.Add(getPoint(areaLeft+2f,areaRight-2f,areaUp-2f,areaUp-2f));\n        }\n        // 五边形\n        else if(kind==5){\n            float quax = (midx+areaRight)/2;\n            float quaz = (midz+areaUp)/2;\n            path.Add(getPoint(areaRight-2f,areaRight-2f,areaDown+2f,midz));\n            path.Add(new Vector3(quax,0,quaz));\n            path.Add(getPoint(areaLeft+2f,midx,areaUp-2f,areaUp-2f));\n        }\n    }\n\n    void goPatrol()\n    {\n        if(isReach){\n            curTar ++;\n            curTar %= kind;\n            isReach = false;\n        }\n        this.transform.LookAt(path[curTar]);\n        // 只要很接近地点就相当于到了\n        float distance = Vector3.Distance(transform.position, path[curTar]);\n        if (distance > 0.9)\n        {\n            transform.position = Vector3.MoveTowards(this.transform.position, path[curTar], moveSpeed * Time.deltaTime);\n        }\n        else{\n            isReach = true;\n        }\n    }\n    \n\n    public override void Update()\n    {\n        // 巡逻移动\n        goPatrol();\n        // 如果巡逻兵需要跟随玩家并且玩家就在巡逻兵所在的区域，巡逻动作停止\n        if (enemyData.isFollow && enemyData.CurID == enemyData.AreaID)\n        {\n            this.destroy = true;\n            this.callback.SSActionEvent(this, 0, this.gameObject);\n        }\n    }\n    public override void Start()\n    {\n        this.gameObject.GetComponent<Animator>().SetBool(\"isWalk\", true);\n        enemyData = this.gameObject.GetComponent<EnemyData>();\n    }\n}\n\n```\n\n\n\n#### Controllers部分\n\n**First Scene Controller**\n\n简单讲一下场景控制器。实现了消息订阅，实现了用户动作接口和场景动作接口。其中，有一个需要注意的点是 Restart 使用了`SceneManager.LoadScene();`，可以加载指定场景，比较方便。\n\n```c#\npublic class FirstSceneController : MonoBehaviour, IUserAction, ISceneController\n{\n    public PropFactory factory;                              // Enemy和Baby工厂\n    public ScoreController scoreController;                  // 记分员\n    public EnemyActionManager manager;                       // 运动管理器\n    public myUserGUI userGUI;                                // 用户界面\n    public int CurID = -1;                                   // 当前玩家所于检测区域的序号\n    public GameObject player;                                // 玩家\n    public Camera cam;                                       // 主相机\n    public float moveSpeed = 5;                              // 玩家移动速度\n    public float rotateSpeed = 250f;                         // 玩家旋转速度\n    private List<GameObject> enemies;                        // 场景中Enemy列表\n    private List<GameObject> babies;                         // 场景Baby列表\n    private bool isGameOver = false;                         // 游戏是否结束\n\n    void Update()\n    {\n        for (int i = 0; i < enemies.Count; i++)\n        {\n            enemies[i].gameObject.GetComponent<EnemyData>().CurID = CurID;\n        }\n        // Baby收集完毕\n        if(scoreController.getBabyNum() == 0)\n        {\n            GameOver();\n        }\n    }\n    void Start()\n    {\n        Director director = Director.getInstance();\n        director.currentSceneController = this;\n        gameObject.AddComponent<PropFactory>();\n        factory = Singleton<PropFactory>.Instance;\n        manager = gameObject.AddComponent<EnemyActionManager>() as EnemyActionManager;\n        scoreController = gameObject.AddComponent<ScoreController>() as ScoreController;\n        userGUI = gameObject.AddComponent<myUserGUI>() as myUserGUI;\n        LoadResource();\n        cam.GetComponent<CameraFlow>().target = player;\n        \n    }\n\n    public void LoadResource()\n    {\n        Instantiate(Resources.Load<GameObject>(\"Prefabs/Map\"));\n        player = Instantiate(Resources.Load(\"Prefabs/Player\"), new Vector3(0, 0, 0), Quaternion.identity) as GameObject;\n        babies = factory.getBabies();\n        enemies = factory.getEnemies();\n\n        // 所有巡逻兵移动\n        for (int i = 0; i < enemies.Count; i++)\n        {\n            manager.Walk(enemies[i]);\n        }\n    }\n\n\n    // 玩家移动\n    public void movePlayer(float tranX, float tranZ, bool isShift)\n    {\n        if(!isGameOver)\n        {\n            if (tranX != 0 || tranZ != 0)\n            {\n                player.GetComponent<Animator>().SetBool(\"isWalk\", true);\n                // 如果shift加速\n                if (isShift){\n                    player.GetComponent<Animator>().SetBool(\"isRun\", true);\n                    moveSpeed = 10;\n                }\n                else{\n                    player.GetComponent<Animator>().SetBool(\"isRun\", false);\n                    moveSpeed = 5;\n                }\n            }\n            else\n            {\n                player.GetComponent<Animator>().SetBool(\"isWalk\", false);\n                return;\n            }\n            // 移动和旋转\n            player.transform.Translate(0, 0, tranZ * moveSpeed * Time.deltaTime);\n            player.transform.Rotate(0, tranX * rotateSpeed * Time.deltaTime, 0);\n\n            // 防止碰撞带来的移动\n            if (player.transform.localEulerAngles.x != 0 || player.transform.localEulerAngles.z != 0)\n            {\n                player.transform.localEulerAngles = new Vector3(0, player.transform.localEulerAngles.y, 0);\n            }\n            if (player.transform.position.y != 0)\n            {\n                player.transform.position = new Vector3(player.transform.position.x, 0, player.transform.position.z);\n            }     \n        }\n    }\n\n    public int getScore()\n    {\n        return scoreController.getScore();\n    }\n\n    public int getBabyNum()\n    {\n        return scoreController.getBabyNum();\n    }\n    public bool getGameOver()\n    {\n        return isGameOver;\n    }\n    public void Restart()\n    {\n        SceneManager.LoadScene(\"Scenes/startScene\");\n    }\n\n    void OnEnable()\n    {\n        GameEventManager.scoreChange += addScore;\n        GameEventManager.gameOverChange += GameOver;\n        GameEventManager.babyChange += reduceBabyNum;\n    }\n    void OnDisable()\n    {\n        GameEventManager.scoreChange -= addScore;\n        GameEventManager.gameOverChange -= GameOver;\n        GameEventManager.babyChange -= reduceBabyNum;\n    }\n\n    void reduceBabyNum()\n    {\n        scoreController.reduceBaby();\n    }\n    void addScore()\n    {\n        scoreController.addScore();\n    }\n    void GameOver()\n    {\n        isGameOver = true;\n        factory.stopEnemies();\n        manager.DestroyAllAction();\n    }\n}\n```\n\n\n\n\n\n#### Others部分\n\n**Game Event Manager**\n\n订阅/发布模式（又叫观察者模式，事件-代理机制 ， 事件的代理模型）。\n\n```c#\npublic class GameEventManager : MonoBehaviour\n{\n    //  分数变化\n    public delegate void ScoreEvent();\n    public static event ScoreEvent scoreChange;\n    //  游戏结束\n    public delegate void GameOverEvent();\n    public static event GameOverEvent gameOverChange;\n    //  Baby数量\n    public delegate void BabyEvent();\n    public static event BabyEvent babyChange;\n\n    //  分数变化\n    public void playerEscape()\n    {\n        if (scoreChange != null)\n        {\n            scoreChange();\n        }\n    }\n    //  游戏结束\n    public void playerGameOver()\n    {\n        if (gameOverChange != null)\n        {\n            gameOverChange();\n        }\n    }\n    //  Baby数量\n    public void reduceBabyNum()\n    {\n        if (babyChange != null)\n        {\n            babyChange();\n        }\n    }\n}\n```\n\n`delegate`关键字定义了函数类型`ScoreEvent`、`GameOverEvent`、`BabyEvent`等的代理类型。静态变量scoreChange、gameOverChange、babyChange就是相应的“被订阅的主题”。\n\n如下图 FirstSceneController 里的调用，+= 部分表示左边的函数一被调用，就会通知**所有**带有右边函数的对象要进行调用右边的函数，相当于右边订阅了左边。而 -= 就代表取消订阅了。\n\n这里的`playerEscape()`等函数是一个接口，当调用时，就在告诉记分员要计分`addScore()`了。\n\n![15](../../../assets/game/1218/15.png)\n\n\n\n#### Views部分\n\n**myUserGUI**\n\n用户界面，也是大同小异。\n\n这里主要是为了提到一个悬浮提示的小制作。格式如下，其中`tipStyle`为可选\n\n```c#\nGUI.Button(new Rect(0,0,0,0), new GUIContent(\"提示\", \"提示内容\"));\nGUI.Label(new Rect(1,1,1,1), GUI.tooltip[, tipStyle]);\n```\n\n第一次知道，IMGUI里的内容可以使用 `\\n` 来换行。\n\n```c#\npublic class myUserGUI : MonoBehaviour\n{\n    private IUserAction action;\n    private GUIStyle scoreNumStyle = new GUIStyle();\n    private GUIStyle scoreTextStyle = new GUIStyle();\n    private GUIStyle scoreShadowStyle = new GUIStyle();\n    private GUIStyle titleStyle = new GUIStyle();\n    private GUIStyle shadowStyle = new GUIStyle();\n    private GUIStyle tipStyle = new GUIStyle();\n\n    void Start ()\n    {\n        action = Director.getInstance().currentSceneController as IUserAction;\n        scoreNumStyle.normal.textColor = new Color(1,0.92f,0.016f,1);\n        scoreNumStyle.fontSize = 30;\n        scoreTextStyle.normal.textColor = new Color(0, 0, 0, 1);\n        scoreTextStyle.fontSize = 30;\n        scoreShadowStyle.normal.textColor = new Color(1,1,1,0.4f);\n        scoreShadowStyle.fontSize = 30;\n        titleStyle.normal.textColor = new Color(0.47F,0.4F,0.93F,1);\n        titleStyle.fontSize = 40;\n        shadowStyle.normal.textColor = new Color(1,1,1,0.5f);\n        shadowStyle.fontSize = 40;\n        tipStyle.normal.textColor = new Color(0.54f,0.27f,0.04f,1);\n        tipStyle.fontSize = 18;\n        \n    }\n\n    void Update()\n    {\n        //获取方向键的偏移量\n        float tranX = Input.GetAxis(\"Horizontal\");\n        float tranZ = Input.GetAxis(\"Vertical\");\n        bool isShift = Input.GetKey(KeyCode.LeftShift);\n        //移动玩家\n        action.movePlayer(tranX, tranZ, isShift);\n    }\n    private void OnGUI()\n    {\n        GUI.skin.button.fontSize = 20;\n        GUI.Label(new Rect(10, 5, 200, 50), \"分数:\", scoreTextStyle);\n        GUI.Label(new Rect(9, 4, 200, 50), \"分数:\", scoreShadowStyle);\n        GUI.Label(new Rect(90, 5, 200, 50), action.getScore().ToString(), scoreNumStyle);\n        GUI.Label(new Rect(Screen.width - 245, 5, 200, 50), \"剩余小狐狸数:\", scoreTextStyle);\n        GUI.Label(new Rect(Screen.width - 246, 4, 200, 50), \"剩余小狐狸数:\", scoreShadowStyle);\n        GUI.Label(new Rect(Screen.width - 50, 5, 50, 50), action.getBabyNum().ToString(), scoreNumStyle);\n        if(action.getGameOver() && action.getBabyNum() != 0)\n        {\n            GUI.Label(new Rect(Screen.width / 2 - 80, Screen.height / 2 - 100, 100, 100), \"游戏结束\", titleStyle);\n            GUI.Label(new Rect(Screen.width / 2 - 78, Screen.height / 2 - 98, 100, 100), \"游戏结束\", shadowStyle);\n            if (GUI.Button(new Rect(Screen.width / 2 - 50, Screen.height / 2 , 100, 50), \"重新开始\"))\n            {\n                action.Restart();\n                return;\n            }\n        }\n        else if(action.getBabyNum() <= 0)\n        {\n            GUI.Label(new Rect(Screen.width / 2 - 80, Screen.height / 2 - 100, 100, 100), \"恭喜胜利\", titleStyle);\n            GUI.Label(new Rect(Screen.width / 2 - 78, Screen.height / 2 - 98, 100, 100), \"恭喜胜利\", shadowStyle);\n            if (GUI.Button(new Rect(Screen.width / 2 - 50, Screen.height / 2 , 100, 50), \"重新开始\"))\n            {\n                action.Restart();\n                return;\n            }\n        }\n\n        GUI.Button(new Rect(Screen.width / 2 - 50 ,10, 100, 50), new GUIContent(\"提示规则\", \"按WSAD或方向键移动\\n按左Shift键进行加速\\n成功躲避猛兽追捕加1分\\n找到所有小狐狸即可获胜\\n鼠标右键实现视角转动\"));\n        GUI.Label(new Rect(Screen.width / 2 - 80 ,80, 150, 120), GUI.tooltip, tipStyle);\n    }\n\n}\n```\n\n\n\n### 小结\n\n* 学会了动画控制器的使用；\n* 理解了订阅/发布模式；\n* 了解到了碰撞抖动、IMGUI的悬浮提示做法等。\n\n* Player与一个被拾取物体的碰撞按道理只会触发一次。碰撞很偶尔会出现两次的情况，没有解决这个bug。\n* 巡逻兵没有加变速功能，且探测范围设置较小，游戏难度比较低。\n\n\n\n> 2022.12.19\t\t\tCauchy.","slug":"2022/Homework7/Homework7","published":1,"updated":"2023-05-19T07:05:01.637Z","comments":1,"photos":[],"link":"","_id":"clhudj1fi00107g847n2m1bfo","content":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>智能巡逻兵(动画、订阅/发布模式)</li>\n</ol>\n</blockquote>\n<span id=\"more\"></span>\n<p>🦊</p>\n<h2 id=\"智能巡逻兵\">智能巡逻兵</h2>\n<h4 id=\"设计要求\">设计要求</h4>\n<ul>\n<li>创建一个地图和若干巡逻兵（使用动画）；</li>\n<li>每个巡逻兵走一个3-5个边的凸多边形，位置数据是相对地址。即每次确定下一个目标位置，用自己当前位置为原点计算；</li>\n<li>巡逻兵碰撞到障碍物，则会自动选下一个点为目标；</li>\n<li>巡逻兵在设定范围内感知到玩家，会自动追击玩家；</li>\n<li>失去玩家目标后，继续巡逻；</li>\n<li>计分：玩家每次甩掉一个巡逻兵计一分，与巡逻兵碰撞游戏结束；</li>\n</ul>\n<h4 id=\"程序设计要求\">程序设计要求</h4>\n<ul>\n<li>必须使用订阅与发布模式传消息</li>\n<li>工厂模式生产巡逻兵</li>\n</ul>\n<h4 id=\"项目地址\">项目地址</h4>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets</a></p>\n<h4 id=\"效果展示图\">效果展示图</h4>\n<p>地图展示</p>\n<p><img src=\"../../../assets/game/1218/map.gif\" alt=\"map\"></p>\n<p>游戏展示</p>\n<p><img src=\"../../../assets/game/1218/game.gif\" alt=\"game\"></p>\n<h4 id=\"玩法\">玩法</h4>\n<p>​\t你是一个狐狸妈咪，你在和你的7个小狐狸宝贝玩捉迷藏。你有一堆烦人的动物朋友，分别为猩猩、老虎和鸽子，你一靠近他们，他们就会追着你喋喋不休。要是被它们逮到，你就会被他们烦死。你要做的是快速地绕开你的烦人朋友，找到你的所有宝贝狐狸们。<strong>方向键控制行进，按住左shift键进行加速，鼠标右键移动视角。</strong></p>\n<h3 id=\"1-预制件制作\">1.  预制件制作</h3>\n<p>本次作业选用了Asset store里的资源包<a href=\"https://assetstore.unity.com/packages/3d/characters/animals/quirky-series-animals-mega-pack-vol-2-183280\">《Quirky Series Vol.2 [v1.3]》</a>。</p>\n<p>角色主要分为3类：Player玩家：大狐狸；巡逻兵：其他动物；可拾取物体：小狐狸。</p>\n<h4 id=\"组件设置\">组件设置</h4>\n<p>​\t点开Jungle Vol.1/Prefabs/RedPanda_LOD1，可以看到如图所示。为了简化模型，没有使用带有Lod Group的prefabs，这里选取的是较为精细的lod1。</p>\n<p><img src=\"../../../assets/game/1218/01.png\" alt=\"01\"></p>\n<p>​\t对于<strong>Player玩家</strong>来说，我们只需要在最外层的父对象挂一个rigidbody就行，碰撞检测的部分由其他碰撞体实现。该rigidbody属性如下图所示。这里为了方便没有使用重力。注意到Constraints处勾选了几项，是因为在调试过程中，遇到了<strong>碰撞抖动</strong>问题。本次作业角色移动没有利用物理学，碰撞后受力就会发生奇怪的运动。这里采取锁定刚体旋转和部分位移的方式解决。</p>\n<p><img src=\"../../../assets/game/1218/02.png\" alt=\"02\"></p>\n<p>​</p>\n<p>​\t对于<strong>巡逻兵</strong>来说，在最外层的父对象挂上rigidbody和两个脚本（一个是属性脚本，一个是检测玩家碰撞的脚本）。这里的rigidbody和上述设置类似。创建Collider空子对象，挂上一个方盒碰撞器并设为触发器，再挂上一个用于检测玩家范围的脚本。巡逻兵大体都也是这样做。差异只在属性脚本和检测范围上面。</p>\n<p><img src=\"../../../assets/game/1218/03.png\" alt=\"03\"></p>\n<p><img src=\"../../../assets/game/1218/04.png\" alt=\"04\"></p>\n<p>​\t对于<strong>拾取的物体</strong>来说，父对象挂一个碰撞器并设为触发器，再挂一个检测玩家碰撞的脚本即可。这里没有用mesh碰撞器，觉得拾取范围可以模糊一点。</p>\n<p><img src=\"../../../assets/game/1218/05.png\" alt=\"05\"></p>\n<h4 id=\"动画控制器制作\">动画控制器制作</h4>\n<p>​\t点开官方的AC_Red Panda(Animator Controller)，我们可以看到有两个层，一个是控制整体动作，一个是控制眼睛动作。其中，整体动作可以直接通过Inspector预览，而眼睛动作需要将模型拖到Inspector才可预览，也可直接先在官方给出的Demo场景中预览。</p>\n<p><img src=\"../../../assets/game/1218/06.png\" alt=\"06\"></p>\n<p><img src=\"../../../assets/game/1218/07.png\" alt=\"07\"></p>\n<p>为了简单起见，本作业只用到了其中很少的动作。</p>\n<p>​\t下图是Player的动画控制器，包含三个bool类型参数：存活live、是否行走isWalk、是否奔跑isRun。动作只有默认状态Idle、行走Walk、奔跑Run及死亡Death。这里Idle到Exit的过渡没有条件，会被系统自动忽略。</p>\n<p><img src=\"../../../assets/game/1218/08.png\" alt=\"08\"></p>\n<p>​\t下图是Idle过渡到Walk的设置。注意，这里的动作大多没有Exit Time，因为满足过渡条件时，如进入行走、进入攻击等动作变化需要马上执行，不需要等待上一个动作做完。</p>\n<p><img src=\"../../../assets/game/1218/09.png\" alt=\"09\"></p>\n<p>​\t下图是<strong>巡逻兵</strong>的动画控制器，这个更简单，其实只有行走和攻击两种状态，不过在游戏结束时，我们还是让它进入到静止状态的Idle。这里只是给出一个例子，不同的模型要匹配相应的模型动作，不然执行时模型会变成动画控制器的那个 (别问怎么知道的，问就是干过这种蠢事)。</p>\n<p><img src=\"../../../assets/game/1218/10.png\" alt=\"10\"></p>\n<p>​\t下图是<strong>拾取的物体</strong>的动画控制器，由于动作比较简单，也加入了眼睛的变化。没被找到时，就坐在原地哭唧唧，被找到后就高兴跳起来。</p>\n<p><img src=\"../../../assets/game/1218/11.png\" alt=\"11\"><img src=\"../../../assets/game/1218/12.png\" alt=\"12\"></p>\n<p>到此，角色的预制件就做得差不多了。后面就是根据实际情况，还要去预先设计并记录一下巡逻兵属性脚本的数据值。</p>\n<h3 id=\"2-场景制作\">2.  场景制作</h3>\n<p>场景分两部分，摄像机Camera和地图Map。为了方便加载，这个地图是预先摆好并保存为预制件。</p>\n<p>​\t地图部分如下图，是Map空对象下放了子对象墙体地板等组成的。子对象部分有4类：Wall、InnerWall、Plane、Area，分别代表四面围墙、内部障碍墙、地板和各巡逻区域。Wall和InnerWall都是普通的Cube对象，Plane就是Plane对象，Area则是空对象挂上一个Box Collider和一个区域检测的脚本。位置摆放及数值等都是本人自己设计的，没什么好讲的。<s>(这里有扇墙是假的)</s></p>\n<p><img src=\"../../../assets/game/1218/13.png\" alt=\"13\"></p>\n<p>​\t然后，我们将第一步做的预制件先放在想要放的位置，记录位置数据等。因为要求用工厂模式生成巡逻兵，拾取的物体也顺便通过该模式生成了。</p>\n<p>​\t摄像机是使用Main Camera，为了可以通过鼠标控制视角，并跟随玩家，挂上一个Camera Flow脚本。确定好Player的初始位置，就可以确定好摄像机的初始位置了。</p>\n<p>到此，预制部分就全部做完了，可以开始写代码了。</p>\n<h3 id=\"3-代码解析\">3.  代码解析</h3>\n<h4 id=\"代码框架图\">代码框架图</h4>\n<p>(本人还是不太习惯用UML图，思维导图既能帮助我整理结构，又能标记完成情况等，比较方便。)</p>\n<p><img src=\"../../../assets/game/1218/Patrol.png\" alt=\"Patrol\"></p>\n<h4 id=\"Models部分\">Models部分</h4>\n<p><strong>Camera Flow</strong></p>\n<p>摄像机跟随脚本，网络上挺多这样的模板的，这里也是随便参考了一个。因为视角只希望在水平方向移动，不希望上下或者前后移动，这里的RotateAround就只是绕着跟随的目标的Y轴旋转。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CameraFlow</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br><br>    Vector3 offset;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        offset = <span class=\"hljs-keyword\">this</span>.transform.position - target.transform.position;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// Update is called once per frame</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.transform.position = target.transform.position + offset;<br>        Rotate();<br>        Scale();<br>    &#125;<br>    <span class=\"hljs-comment\">//缩放</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Scale</span>()</span><br>    &#123;<br>        <span class=\"hljs-built_in\">float</span> dis = offset.magnitude;<br>        dis += Input.GetAxis(<span class=\"hljs-string\">&quot;Mouse ScrollWheel&quot;</span>) * <span class=\"hljs-number\">5</span>;<br>        <span class=\"hljs-keyword\">if</span> (dis &lt; <span class=\"hljs-number\">3</span> || dis &gt; <span class=\"hljs-number\">20</span>)<br>        &#123;<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        offset = offset.normalized * dis;<br>    &#125;<br>    <span class=\"hljs-comment\">//左右移动</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Rotate</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (Input.GetMouseButton(<span class=\"hljs-number\">1</span>))<br>        &#123;<br>            Vector3 pos = <span class=\"hljs-keyword\">this</span>.transform.position;<br>            <span class=\"hljs-keyword\">this</span>.transform.RotateAround(target.transform.position, Vector3.up, Input.GetAxis(<span class=\"hljs-string\">&quot;Mouse X&quot;</span>) * <span class=\"hljs-number\">10</span>);<br>            <span class=\"hljs-comment\">//  更新相对差值</span><br>            offset = <span class=\"hljs-keyword\">this</span>.transform.position - target.transform.position;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Enemy Data</strong></p>\n<p>巡逻兵属性。每个数据的含义如注释所写。在工厂模式生成的时候，初始化数值。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EnemyData</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> AreaID;                      <span class=\"hljs-comment\">//  Enemy巡逻区域序号</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isFollow = <span class=\"hljs-literal\">false</span>;           <span class=\"hljs-comment\">// 是否跟随玩家</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> CurID = <span class=\"hljs-number\">-1</span>;                  <span class=\"hljs-comment\">//  当前玩家所在区域序号</span><br>    <span class=\"hljs-keyword\">public</span> GameObject player;               <span class=\"hljs-comment\">//  玩家游戏对象</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> kind;                        <span class=\"hljs-comment\">//  巡逻类型 3/4/5边</span><br>    <span class=\"hljs-keyword\">public</span> Vector3 startPos;                <span class=\"hljs-comment\">//  Enemy初始位置   </span><br>    <span class=\"hljs-keyword\">public</span> Vector3 lu;                      <span class=\"hljs-comment\">//  Enemy巡逻区域左上角坐标</span><br>    <span class=\"hljs-keyword\">public</span> Vector3 rd;                      <span class=\"hljs-comment\">//  Enemy巡逻区域右下角坐标</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Patrol Detection</strong></p>\n<p>巡逻检测，玩家进入范围就追捕，走出范围就停止追捕。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PatrolDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        EnemyData parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.GetComponent&lt;EnemyData&gt;();<br>    \t<span class=\"hljs-comment\">//玩家进入Enemy追捕范围，开始追捕</span><br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)<br>        &#123;<br>            <span class=\"hljs-comment\">//启动追捕模式</span><br>            parent.isFollow = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-comment\">//将追捕对象设置为玩家</span><br>            parent.player = collider.gameObject;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerExit</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        EnemyData parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.GetComponent&lt;EnemyData&gt;();<br>        <span class=\"hljs-comment\">//玩家跑出Enemy追捕范围/玩家跑出Enemy管控范围，结束追捕</span><br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span> || parent.AreaID != parent.CurID)<br>        &#123;<br>            <span class=\"hljs-comment\">//关闭追捕模式</span><br>            parent.isFollow = <span class=\"hljs-literal\">false</span>;<br>            <span class=\"hljs-comment\">//将追捕对象设置为空</span><br>            parent.player = <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Other Detection</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// 检测玩家与巡逻兵碰撞</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnCollisionEnter</span>(<span class=\"hljs-params\">Collision other</span>)</span><br>    &#123;<br>        <span class=\"hljs-comment\">//当玩家与巡逻兵相撞</span><br>        <span class=\"hljs-keyword\">if</span> (other.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)<br>        &#123;<br>            <span class=\"hljs-comment\">//玩家死亡</span><br>            other.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;live&quot;</span>,<span class=\"hljs-literal\">false</span>);<br>            <span class=\"hljs-comment\">//Enemy发动攻击</span><br>            <span class=\"hljs-keyword\">this</span>.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"hljs-string\">&quot;attack_tri&quot;</span>);<br>            <span class=\"hljs-comment\">//游戏结束</span><br>            Singleton&lt;GameEventManager&gt;.Instance.playerGameOver();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 检测被拾取的物体(Baby)是否被碰撞(拾取)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BabyDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span> &amp;&amp; <span class=\"hljs-keyword\">this</span>.gameObject.activeSelf)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isFind&quot;</span>,<span class=\"hljs-literal\">true</span>);<br>            <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;BoxCollider&gt;().enabled = <span class=\"hljs-literal\">false</span>;<br>            Singleton&lt;GameEventManager&gt;.Instance.reduceBabyNum();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 区域标志、检测玩家进入哪个区域</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AreaDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> AreaID = <span class=\"hljs-number\">0</span>;<br>    FirstSceneController sceneController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        sceneController = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> FirstSceneController;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)&#123;<br>            sceneController.CurID = AreaID;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Actions部分\">Actions部分</h4>\n<p>这里只介绍巡逻动作的脚本。</p>\n<p><strong>Enemy Walk Action</strong></p>\n<p>​\t通过在矩形画凸多边形，在多边形上任意取点。多边形取点逻辑如下图所示。橙色边为给定的巡逻大范围。<strong>三角形</strong>则在紫色、绿色及黄色三条线段依次任取点；<strong>四边形</strong>则在紫色、绿色、黄色、蓝色四条线段上依次任取点；<strong>五边形</strong>则在紫色、绿色、右侧粉色、粉色定点、上方粉色，四条线段加一个定点依次取点。忽略边界的小概率实践，形成的轨迹就是指定的凸多边形。</p>\n<p><img src=\"../../../assets/game/1218/14.png\" alt=\"14\"></p>\n<p>​\t也许会留意到轨迹周围有一段留白，那是为了避免巡逻兵在指定轨迹上行走，碰上障碍物原地不动的情况设置的。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EnemyWalkAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> kind = <span class=\"hljs-number\">4</span>;                           <span class=\"hljs-comment\">//  多边形边数</span><br>    <span class=\"hljs-comment\">// 运动范围为(areaDown,areaUp),(areaLeft,areaRight)</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaLeft = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaUp = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaRight = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaDown = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">1.8f</span>;                 <span class=\"hljs-comment\">//  移动速度</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isReach = <span class=\"hljs-literal\">true</span>;                    <span class=\"hljs-comment\">//  是否到达目的地</span><br>    <span class=\"hljs-keyword\">private</span> EnemyData enemyData;                    <span class=\"hljs-comment\">//  Enemy数据</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;Vector3&gt; path = <span class=\"hljs-keyword\">new</span> List&lt;Vector3&gt;();   <span class=\"hljs-comment\">//存储路径点</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> curTar = <span class=\"hljs-number\">0</span>;     <span class=\"hljs-comment\">//  当前目标地索引</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-title\">EnemyWalkAction</span>()</span> &#123; &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> EnemyWalkAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> k, Vector3 start, Vector3 lu, Vector3 rd</span>)</span><br>    &#123;<br>        EnemyWalkAction action = CreateInstance&lt;EnemyWalkAction&gt;();<br>        action.kind = k;<br>        action.areaLeft = lu.x;<br>        action.areaRight = rd.x;<br>        action.areaUp = lu.z;<br>        action.areaDown = rd.z;<br>        action.initPath();<br>        <br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br>    <span class=\"hljs-function\">Vector3 <span class=\"hljs-title\">getPoint</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> left, <span class=\"hljs-built_in\">float</span> right, <span class=\"hljs-built_in\">float</span> down, <span class=\"hljs-built_in\">float</span> up</span>)</span>&#123;<br>        Vector3 res= <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>        <span class=\"hljs-keyword\">if</span>(left==right)&#123;    <span class=\"hljs-comment\">//竖线</span><br>            res.x = left;<br>            res.z = Random.Range(down,up); <br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(down==up)&#123;<br>            res.x = Random.Range(left,right);<br>            res.z = down;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            res.x = Random.Range(left,right);<br>            res.z = Random.Range(down,up);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> res;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">initPath</span>()</span><br>    &#123;<br>        <span class=\"hljs-built_in\">float</span> midx = (areaLeft+areaRight)/<span class=\"hljs-number\">2</span>;<br>        <span class=\"hljs-built_in\">float</span> midz = (areaUp+areaDown)/<span class=\"hljs-number\">2</span>;<br>        path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaLeft+<span class=\"hljs-number\">2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaDown+<span class=\"hljs-number\">2f</span>));<br>        <span class=\"hljs-comment\">// 三角形</span><br>        <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">3</span>)&#123;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,midz,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>        <span class=\"hljs-comment\">// 四边形</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">4</span>)&#123;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>            path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>        <span class=\"hljs-comment\">// 五边形</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">5</span>)&#123;<br>            <span class=\"hljs-built_in\">float</span> quax = (midx+areaRight)/<span class=\"hljs-number\">2</span>;<br>            <span class=\"hljs-built_in\">float</span> quaz = (midz+areaUp)/<span class=\"hljs-number\">2</span>;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,midz));<br>            path.Add(<span class=\"hljs-keyword\">new</span> Vector3(quax,<span class=\"hljs-number\">0</span>,quaz));<br>            path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,midx,areaUp<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">goPatrol</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(isReach)&#123;<br>            curTar ++;<br>            curTar %= kind;<br>            isReach = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">this</span>.transform.LookAt(path[curTar]);<br>        <span class=\"hljs-comment\">// 只要很接近地点就相当于到了</span><br>        <span class=\"hljs-built_in\">float</span> distance = Vector3.Distance(transform.position, path[curTar]);<br>        <span class=\"hljs-keyword\">if</span> (distance &gt; <span class=\"hljs-number\">0.9</span>)<br>        &#123;<br>            transform.position = Vector3.MoveTowards(<span class=\"hljs-keyword\">this</span>.transform.position, path[curTar], moveSpeed * Time.deltaTime);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            isReach = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br>    <br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">// 巡逻移动</span><br>        goPatrol();<br>        <span class=\"hljs-comment\">// 如果巡逻兵需要跟随玩家并且玩家就在巡逻兵所在的区域，巡逻动作停止</span><br>        <span class=\"hljs-keyword\">if</span> (enemyData.isFollow &amp;&amp; enemyData.CurID == enemyData.AreaID)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">this</span>.gameObject);<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>        enemyData = <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;EnemyData&gt;();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"Controllers部分\">Controllers部分</h4>\n<p><strong>First Scene Controller</strong></p>\n<p>简单讲一下场景控制器。实现了消息订阅，实现了用户动作接口和场景动作接口。其中，有一个需要注意的点是 Restart 使用了<code>SceneManager.LoadScene();</code>，可以加载指定场景，比较方便。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstSceneController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">IUserAction</span>, <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> PropFactory factory;                              <span class=\"hljs-comment\">// Enemy和Baby工厂</span><br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;                  <span class=\"hljs-comment\">// 记分员</span><br>    <span class=\"hljs-keyword\">public</span> EnemyActionManager manager;                       <span class=\"hljs-comment\">// 运动管理器</span><br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;                                <span class=\"hljs-comment\">// 用户界面</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> CurID = <span class=\"hljs-number\">-1</span>;                                   <span class=\"hljs-comment\">// 当前玩家所于检测区域的序号</span><br>    <span class=\"hljs-keyword\">public</span> GameObject player;                                <span class=\"hljs-comment\">// 玩家</span><br>    <span class=\"hljs-keyword\">public</span> Camera cam;                                       <span class=\"hljs-comment\">// 主相机</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">5</span>;                              <span class=\"hljs-comment\">// 玩家移动速度</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> rotateSpeed = <span class=\"hljs-number\">250f</span>;                         <span class=\"hljs-comment\">// 玩家旋转速度</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;GameObject&gt; enemies;                        <span class=\"hljs-comment\">// 场景中Enemy列表</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;GameObject&gt; babies;                         <span class=\"hljs-comment\">// 场景Baby列表</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isGameOver = <span class=\"hljs-literal\">false</span>;                         <span class=\"hljs-comment\">// 游戏是否结束</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; enemies.Count; i++)<br>        &#123;<br>            enemies[i].gameObject.GetComponent&lt;EnemyData&gt;().CurID = CurID;<br>        &#125;<br>        <span class=\"hljs-comment\">// Baby收集完毕</span><br>        <span class=\"hljs-keyword\">if</span>(scoreController.getBabyNum() == <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GameOver();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;PropFactory&gt;();<br>        factory = Singleton&lt;PropFactory&gt;.Instance;<br>        manager = gameObject.AddComponent&lt;EnemyActionManager&gt;() <span class=\"hljs-keyword\">as</span> EnemyActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        LoadResource();<br>        cam.GetComponent&lt;CameraFlow&gt;().target = player;<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        Instantiate(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Map&quot;</span>));<br>        player = Instantiate(Resources.Load(<span class=\"hljs-string\">&quot;Prefabs/Player&quot;</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), Quaternion.identity) <span class=\"hljs-keyword\">as</span> GameObject;<br>        babies = factory.getBabies();<br>        enemies = factory.getEnemies();<br><br>        <span class=\"hljs-comment\">// 所有巡逻兵移动</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; enemies.Count; i++)<br>        &#123;<br>            manager.Walk(enemies[i]);<br>        &#125;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">// 玩家移动</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">movePlayer</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> tranX, <span class=\"hljs-built_in\">float</span> tranZ, <span class=\"hljs-built_in\">bool</span> isShift</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(!isGameOver)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span> (tranX != <span class=\"hljs-number\">0</span> || tranZ != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>                <span class=\"hljs-comment\">// 如果shift加速</span><br>                <span class=\"hljs-keyword\">if</span> (isShift)&#123;<br>                    player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isRun&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>                    moveSpeed = <span class=\"hljs-number\">10</span>;<br>                &#125;<br>                <span class=\"hljs-keyword\">else</span>&#123;<br>                    player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isRun&quot;</span>, <span class=\"hljs-literal\">false</span>);<br>                    moveSpeed = <span class=\"hljs-number\">5</span>;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span><br>            &#123;<br>                player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">false</span>);<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>            <span class=\"hljs-comment\">// 移动和旋转</span><br>            player.transform.Translate(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, tranZ * moveSpeed * Time.deltaTime);<br>            player.transform.Rotate(<span class=\"hljs-number\">0</span>, tranX * rotateSpeed * Time.deltaTime, <span class=\"hljs-number\">0</span>);<br><br>            <span class=\"hljs-comment\">// 防止碰撞带来的移动</span><br>            <span class=\"hljs-keyword\">if</span> (player.transform.localEulerAngles.x != <span class=\"hljs-number\">0</span> || player.transform.localEulerAngles.z != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.transform.localEulerAngles = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, player.transform.localEulerAngles.y, <span class=\"hljs-number\">0</span>);<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (player.transform.position.y != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(player.transform.position.x, <span class=\"hljs-number\">0</span>, player.transform.position.z);<br>            &#125;     <br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getScore</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.getScore();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getBabyNum</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.getBabyNum();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">getGameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> isGameOver;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span><br>    &#123;<br>        SceneManager.LoadScene(<span class=\"hljs-string\">&quot;Scenes/startScene&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEnable</span>()</span><br>    &#123;<br>        GameEventManager.scoreChange += addScore;<br>        GameEventManager.gameOverChange += GameOver;<br>        GameEventManager.babyChange += reduceBabyNum;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDisable</span>()</span><br>    &#123;<br>        GameEventManager.scoreChange -= addScore;<br>        GameEventManager.gameOverChange -= GameOver;<br>        GameEventManager.babyChange -= reduceBabyNum;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reduceBabyNum</span>()</span><br>    &#123;<br>        scoreController.reduceBaby();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addScore</span>()</span><br>    &#123;<br>        scoreController.addScore();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">GameOver</span>()</span><br>    &#123;<br>        isGameOver = <span class=\"hljs-literal\">true</span>;<br>        factory.stopEnemies();<br>        manager.DestroyAllAction();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Others部分\">Others部分</h4>\n<p><strong>Game Event Manager</strong></p>\n<p>订阅/发布模式（又叫观察者模式，事件-代理机制 ， 事件的代理模型）。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GameEventManager</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-comment\">//  分数变化</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ScoreEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> ScoreEvent scoreChange;<br>    <span class=\"hljs-comment\">//  游戏结束</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">GameOverEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> GameOverEvent gameOverChange;<br>    <span class=\"hljs-comment\">//  Baby数量</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">BabyEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> BabyEvent babyChange;<br><br>    <span class=\"hljs-comment\">//  分数变化</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">playerEscape</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (scoreChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            scoreChange();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//  游戏结束</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">playerGameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (gameOverChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            gameOverChange();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//  Baby数量</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reduceBabyNum</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (babyChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            babyChange();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>delegate</code>关键字定义了函数类型<code>ScoreEvent</code>、<code>GameOverEvent</code>、<code>BabyEvent</code>等的代理类型。静态变量scoreChange、gameOverChange、babyChange就是相应的“被订阅的主题”。</p>\n<p>如下图 FirstSceneController 里的调用，+= 部分表示左边的函数一被调用，就会通知<strong>所有</strong>带有右边函数的对象要进行调用右边的函数，相当于右边订阅了左边。而 -= 就代表取消订阅了。</p>\n<p>这里的<code>playerEscape()</code>等函数是一个接口，当调用时，就在告诉记分员要计分<code>addScore()</code>了。</p>\n<p><img src=\"../../../assets/game/1218/15.png\" alt=\"15\"></p>\n<h4 id=\"Views部分\">Views部分</h4>\n<p><strong>myUserGUI</strong></p>\n<p>用户界面，也是大同小异。</p>\n<p>这里主要是为了提到一个悬浮提示的小制作。格式如下，其中<code>tipStyle</code>为可选</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\">GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> GUIContent(<span class=\"hljs-string\">&quot;提示&quot;</span>, <span class=\"hljs-string\">&quot;提示内容&quot;</span>));<br>GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>), GUI.tooltip[, tipStyle]);<br></code></pre></td></tr></table></figure>\n<p>第一次知道，IMGUI里的内容可以使用 <code>\\n</code> 来换行。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreNumStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreTextStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreShadowStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle shadowStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle tipStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>        scoreNumStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.92f</span>,<span class=\"hljs-number\">0.016f</span>,<span class=\"hljs-number\">1</span>);<br>        scoreNumStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        scoreTextStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>        scoreTextStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        scoreShadowStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.4f</span>);<br>        scoreShadowStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        titleStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.47F</span>,<span class=\"hljs-number\">0.4F</span>,<span class=\"hljs-number\">0.93F</span>,<span class=\"hljs-number\">1</span>);<br>        titleStyle.fontSize = <span class=\"hljs-number\">40</span>;<br>        shadowStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.5f</span>);<br>        shadowStyle.fontSize = <span class=\"hljs-number\">40</span>;<br>        tipStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.54f</span>,<span class=\"hljs-number\">0.27f</span>,<span class=\"hljs-number\">0.04f</span>,<span class=\"hljs-number\">1</span>);<br>        tipStyle.fontSize = <span class=\"hljs-number\">18</span>;<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//获取方向键的偏移量</span><br>        <span class=\"hljs-built_in\">float</span> tranX = Input.GetAxis(<span class=\"hljs-string\">&quot;Horizontal&quot;</span>);<br>        <span class=\"hljs-built_in\">float</span> tranZ = Input.GetAxis(<span class=\"hljs-string\">&quot;Vertical&quot;</span>);<br>        <span class=\"hljs-built_in\">bool</span> isShift = Input.GetKey(KeyCode.LeftShift);<br>        <span class=\"hljs-comment\">//移动玩家</span><br>        action.movePlayer(tranX, tranZ, isShift);<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span><br>    &#123;<br>        GUI.skin.button.fontSize = <span class=\"hljs-number\">20</span>;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;分数:&quot;</span>, scoreTextStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;分数:&quot;</span>, scoreShadowStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), action.getScore().ToString(), scoreNumStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">245</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;剩余小狐狸数:&quot;</span>, scoreTextStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">246</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;剩余小狐狸数:&quot;</span>, scoreShadowStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>), action.getBabyNum().ToString(), scoreNumStyle);<br>        <span class=\"hljs-keyword\">if</span>(action.getGameOver() &amp;&amp; action.getBabyNum() != <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;游戏结束&quot;</span>, titleStyle);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">78</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">98</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;游戏结束&quot;</span>, shadowStyle);<br>            <span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span>, Screen.height / <span class=\"hljs-number\">2</span> , <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;重新开始&quot;</span>))<br>            &#123;<br>                action.Restart();<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(action.getBabyNum() &lt;= <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;恭喜胜利&quot;</span>, titleStyle);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">78</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">98</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;恭喜胜利&quot;</span>, shadowStyle);<br>            <span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span>, Screen.height / <span class=\"hljs-number\">2</span> , <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;重新开始&quot;</span>))<br>            &#123;<br>                action.Restart();<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>        &#125;<br><br>        GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span> ,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-keyword\">new</span> GUIContent(<span class=\"hljs-string\">&quot;提示规则&quot;</span>, <span class=\"hljs-string\">&quot;按WSAD或方向键移动\\n按左Shift键进行加速\\n成功躲避猛兽追捕加1分\\n找到所有小狐狸即可获胜\\n鼠标右键实现视角转动&quot;</span>));<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span> ,<span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">120</span>), GUI.tooltip, tipStyle);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"小结\">小结</h3>\n<ul>\n<li>\n<p>学会了动画控制器的使用；</p>\n</li>\n<li>\n<p>理解了订阅/发布模式；</p>\n</li>\n<li>\n<p>了解到了碰撞抖动、IMGUI的悬浮提示做法等。</p>\n</li>\n<li>\n<p>Player与一个被拾取物体的碰撞按道理只会触发一次。碰撞很偶尔会出现两次的情况，没有解决这个bug。</p>\n</li>\n<li>\n<p>巡逻兵没有加变速功能，且探测范围设置较小，游戏难度比较低。</p>\n</li>\n</ul>\n<blockquote>\n<p>2022.12.19\t\t\tCauchy.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>作业简介：</p>\n<ol>\n<li>智能巡逻兵(动画、订阅/发布模式)</li>\n</ol>\n</blockquote>","more":"<p>🦊</p>\n<h2 id=\"智能巡逻兵\">智能巡逻兵</h2>\n<h4 id=\"设计要求\">设计要求</h4>\n<ul>\n<li>创建一个地图和若干巡逻兵（使用动画）；</li>\n<li>每个巡逻兵走一个3-5个边的凸多边形，位置数据是相对地址。即每次确定下一个目标位置，用自己当前位置为原点计算；</li>\n<li>巡逻兵碰撞到障碍物，则会自动选下一个点为目标；</li>\n<li>巡逻兵在设定范围内感知到玩家，会自动追击玩家；</li>\n<li>失去玩家目标后，继续巡逻；</li>\n<li>计分：玩家每次甩掉一个巡逻兵计一分，与巡逻兵碰撞游戏结束；</li>\n</ul>\n<h4 id=\"程序设计要求\">程序设计要求</h4>\n<ul>\n<li>必须使用订阅与发布模式传消息</li>\n<li>工厂模式生产巡逻兵</li>\n</ul>\n<h4 id=\"项目地址\">项目地址</h4>\n<p><a href=\"https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets\">https://github.com/Cauchyoooo/3DGameDesign/tree/main/hw7/Assets</a></p>\n<h4 id=\"效果展示图\">效果展示图</h4>\n<p>地图展示</p>\n<p><img src=\"../../../assets/game/1218/map.gif\" alt=\"map\"></p>\n<p>游戏展示</p>\n<p><img src=\"../../../assets/game/1218/game.gif\" alt=\"game\"></p>\n<h4 id=\"玩法\">玩法</h4>\n<p>​\t你是一个狐狸妈咪，你在和你的7个小狐狸宝贝玩捉迷藏。你有一堆烦人的动物朋友，分别为猩猩、老虎和鸽子，你一靠近他们，他们就会追着你喋喋不休。要是被它们逮到，你就会被他们烦死。你要做的是快速地绕开你的烦人朋友，找到你的所有宝贝狐狸们。<strong>方向键控制行进，按住左shift键进行加速，鼠标右键移动视角。</strong></p>\n<h3 id=\"1-预制件制作\">1.  预制件制作</h3>\n<p>本次作业选用了Asset store里的资源包<a href=\"https://assetstore.unity.com/packages/3d/characters/animals/quirky-series-animals-mega-pack-vol-2-183280\">《Quirky Series Vol.2 [v1.3]》</a>。</p>\n<p>角色主要分为3类：Player玩家：大狐狸；巡逻兵：其他动物；可拾取物体：小狐狸。</p>\n<h4 id=\"组件设置\">组件设置</h4>\n<p>​\t点开Jungle Vol.1/Prefabs/RedPanda_LOD1，可以看到如图所示。为了简化模型，没有使用带有Lod Group的prefabs，这里选取的是较为精细的lod1。</p>\n<p><img src=\"../../../assets/game/1218/01.png\" alt=\"01\"></p>\n<p>​\t对于<strong>Player玩家</strong>来说，我们只需要在最外层的父对象挂一个rigidbody就行，碰撞检测的部分由其他碰撞体实现。该rigidbody属性如下图所示。这里为了方便没有使用重力。注意到Constraints处勾选了几项，是因为在调试过程中，遇到了<strong>碰撞抖动</strong>问题。本次作业角色移动没有利用物理学，碰撞后受力就会发生奇怪的运动。这里采取锁定刚体旋转和部分位移的方式解决。</p>\n<p><img src=\"../../../assets/game/1218/02.png\" alt=\"02\"></p>\n<p>​</p>\n<p>​\t对于<strong>巡逻兵</strong>来说，在最外层的父对象挂上rigidbody和两个脚本（一个是属性脚本，一个是检测玩家碰撞的脚本）。这里的rigidbody和上述设置类似。创建Collider空子对象，挂上一个方盒碰撞器并设为触发器，再挂上一个用于检测玩家范围的脚本。巡逻兵大体都也是这样做。差异只在属性脚本和检测范围上面。</p>\n<p><img src=\"../../../assets/game/1218/03.png\" alt=\"03\"></p>\n<p><img src=\"../../../assets/game/1218/04.png\" alt=\"04\"></p>\n<p>​\t对于<strong>拾取的物体</strong>来说，父对象挂一个碰撞器并设为触发器，再挂一个检测玩家碰撞的脚本即可。这里没有用mesh碰撞器，觉得拾取范围可以模糊一点。</p>\n<p><img src=\"../../../assets/game/1218/05.png\" alt=\"05\"></p>\n<h4 id=\"动画控制器制作\">动画控制器制作</h4>\n<p>​\t点开官方的AC_Red Panda(Animator Controller)，我们可以看到有两个层，一个是控制整体动作，一个是控制眼睛动作。其中，整体动作可以直接通过Inspector预览，而眼睛动作需要将模型拖到Inspector才可预览，也可直接先在官方给出的Demo场景中预览。</p>\n<p><img src=\"../../../assets/game/1218/06.png\" alt=\"06\"></p>\n<p><img src=\"../../../assets/game/1218/07.png\" alt=\"07\"></p>\n<p>为了简单起见，本作业只用到了其中很少的动作。</p>\n<p>​\t下图是Player的动画控制器，包含三个bool类型参数：存活live、是否行走isWalk、是否奔跑isRun。动作只有默认状态Idle、行走Walk、奔跑Run及死亡Death。这里Idle到Exit的过渡没有条件，会被系统自动忽略。</p>\n<p><img src=\"../../../assets/game/1218/08.png\" alt=\"08\"></p>\n<p>​\t下图是Idle过渡到Walk的设置。注意，这里的动作大多没有Exit Time，因为满足过渡条件时，如进入行走、进入攻击等动作变化需要马上执行，不需要等待上一个动作做完。</p>\n<p><img src=\"../../../assets/game/1218/09.png\" alt=\"09\"></p>\n<p>​\t下图是<strong>巡逻兵</strong>的动画控制器，这个更简单，其实只有行走和攻击两种状态，不过在游戏结束时，我们还是让它进入到静止状态的Idle。这里只是给出一个例子，不同的模型要匹配相应的模型动作，不然执行时模型会变成动画控制器的那个 (别问怎么知道的，问就是干过这种蠢事)。</p>\n<p><img src=\"../../../assets/game/1218/10.png\" alt=\"10\"></p>\n<p>​\t下图是<strong>拾取的物体</strong>的动画控制器，由于动作比较简单，也加入了眼睛的变化。没被找到时，就坐在原地哭唧唧，被找到后就高兴跳起来。</p>\n<p><img src=\"../../../assets/game/1218/11.png\" alt=\"11\"><img src=\"../../../assets/game/1218/12.png\" alt=\"12\"></p>\n<p>到此，角色的预制件就做得差不多了。后面就是根据实际情况，还要去预先设计并记录一下巡逻兵属性脚本的数据值。</p>\n<h3 id=\"2-场景制作\">2.  场景制作</h3>\n<p>场景分两部分，摄像机Camera和地图Map。为了方便加载，这个地图是预先摆好并保存为预制件。</p>\n<p>​\t地图部分如下图，是Map空对象下放了子对象墙体地板等组成的。子对象部分有4类：Wall、InnerWall、Plane、Area，分别代表四面围墙、内部障碍墙、地板和各巡逻区域。Wall和InnerWall都是普通的Cube对象，Plane就是Plane对象，Area则是空对象挂上一个Box Collider和一个区域检测的脚本。位置摆放及数值等都是本人自己设计的，没什么好讲的。<s>(这里有扇墙是假的)</s></p>\n<p><img src=\"../../../assets/game/1218/13.png\" alt=\"13\"></p>\n<p>​\t然后，我们将第一步做的预制件先放在想要放的位置，记录位置数据等。因为要求用工厂模式生成巡逻兵，拾取的物体也顺便通过该模式生成了。</p>\n<p>​\t摄像机是使用Main Camera，为了可以通过鼠标控制视角，并跟随玩家，挂上一个Camera Flow脚本。确定好Player的初始位置，就可以确定好摄像机的初始位置了。</p>\n<p>到此，预制部分就全部做完了，可以开始写代码了。</p>\n<h3 id=\"3-代码解析\">3.  代码解析</h3>\n<h4 id=\"代码框架图\">代码框架图</h4>\n<p>(本人还是不太习惯用UML图，思维导图既能帮助我整理结构，又能标记完成情况等，比较方便。)</p>\n<p><img src=\"../../../assets/game/1218/Patrol.png\" alt=\"Patrol\"></p>\n<h4 id=\"Models部分\">Models部分</h4>\n<p><strong>Camera Flow</strong></p>\n<p>摄像机跟随脚本，网络上挺多这样的模板的，这里也是随便参考了一个。因为视角只希望在水平方向移动，不希望上下或者前后移动，这里的RotateAround就只是绕着跟随的目标的Y轴旋转。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CameraFlow</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> GameObject target;<br><br>    Vector3 offset;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        offset = <span class=\"hljs-keyword\">this</span>.transform.position - target.transform.position;<br>    &#125;<br><br>    <span class=\"hljs-comment\">// Update is called once per frame</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.transform.position = target.transform.position + offset;<br>        Rotate();<br>        Scale();<br>    &#125;<br>    <span class=\"hljs-comment\">//缩放</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Scale</span>()</span><br>    &#123;<br>        <span class=\"hljs-built_in\">float</span> dis = offset.magnitude;<br>        dis += Input.GetAxis(<span class=\"hljs-string\">&quot;Mouse ScrollWheel&quot;</span>) * <span class=\"hljs-number\">5</span>;<br>        <span class=\"hljs-keyword\">if</span> (dis &lt; <span class=\"hljs-number\">3</span> || dis &gt; <span class=\"hljs-number\">20</span>)<br>        &#123;<br>            <span class=\"hljs-keyword\">return</span>;<br>        &#125;<br>        offset = offset.normalized * dis;<br>    &#125;<br>    <span class=\"hljs-comment\">//左右移动</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Rotate</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (Input.GetMouseButton(<span class=\"hljs-number\">1</span>))<br>        &#123;<br>            Vector3 pos = <span class=\"hljs-keyword\">this</span>.transform.position;<br>            <span class=\"hljs-keyword\">this</span>.transform.RotateAround(target.transform.position, Vector3.up, Input.GetAxis(<span class=\"hljs-string\">&quot;Mouse X&quot;</span>) * <span class=\"hljs-number\">10</span>);<br>            <span class=\"hljs-comment\">//  更新相对差值</span><br>            offset = <span class=\"hljs-keyword\">this</span>.transform.position - target.transform.position;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Enemy Data</strong></p>\n<p>巡逻兵属性。每个数据的含义如注释所写。在工厂模式生成的时候，初始化数值。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EnemyData</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> AreaID;                      <span class=\"hljs-comment\">//  Enemy巡逻区域序号</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> isFollow = <span class=\"hljs-literal\">false</span>;           <span class=\"hljs-comment\">// 是否跟随玩家</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> CurID = <span class=\"hljs-number\">-1</span>;                  <span class=\"hljs-comment\">//  当前玩家所在区域序号</span><br>    <span class=\"hljs-keyword\">public</span> GameObject player;               <span class=\"hljs-comment\">//  玩家游戏对象</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> kind;                        <span class=\"hljs-comment\">//  巡逻类型 3/4/5边</span><br>    <span class=\"hljs-keyword\">public</span> Vector3 startPos;                <span class=\"hljs-comment\">//  Enemy初始位置   </span><br>    <span class=\"hljs-keyword\">public</span> Vector3 lu;                      <span class=\"hljs-comment\">//  Enemy巡逻区域左上角坐标</span><br>    <span class=\"hljs-keyword\">public</span> Vector3 rd;                      <span class=\"hljs-comment\">//  Enemy巡逻区域右下角坐标</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Patrol Detection</strong></p>\n<p>巡逻检测，玩家进入范围就追捕，走出范围就停止追捕。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PatrolDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        EnemyData parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.GetComponent&lt;EnemyData&gt;();<br>    \t<span class=\"hljs-comment\">//玩家进入Enemy追捕范围，开始追捕</span><br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)<br>        &#123;<br>            <span class=\"hljs-comment\">//启动追捕模式</span><br>            parent.isFollow = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-comment\">//将追捕对象设置为玩家</span><br>            parent.player = collider.gameObject;<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerExit</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        EnemyData parent = <span class=\"hljs-keyword\">this</span>.gameObject.transform.parent.GetComponent&lt;EnemyData&gt;();<br>        <span class=\"hljs-comment\">//玩家跑出Enemy追捕范围/玩家跑出Enemy管控范围，结束追捕</span><br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span> || parent.AreaID != parent.CurID)<br>        &#123;<br>            <span class=\"hljs-comment\">//关闭追捕模式</span><br>            parent.isFollow = <span class=\"hljs-literal\">false</span>;<br>            <span class=\"hljs-comment\">//将追捕对象设置为空</span><br>            parent.player = <span class=\"hljs-literal\">null</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><strong>Other Detection</strong></p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-comment\">// 检测玩家与巡逻兵碰撞</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnCollisionEnter</span>(<span class=\"hljs-params\">Collision other</span>)</span><br>    &#123;<br>        <span class=\"hljs-comment\">//当玩家与巡逻兵相撞</span><br>        <span class=\"hljs-keyword\">if</span> (other.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)<br>        &#123;<br>            <span class=\"hljs-comment\">//玩家死亡</span><br>            other.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;live&quot;</span>,<span class=\"hljs-literal\">false</span>);<br>            <span class=\"hljs-comment\">//Enemy发动攻击</span><br>            <span class=\"hljs-keyword\">this</span>.GetComponent&lt;Animator&gt;().SetTrigger(<span class=\"hljs-string\">&quot;attack_tri&quot;</span>);<br>            <span class=\"hljs-comment\">//游戏结束</span><br>            Singleton&lt;GameEventManager&gt;.Instance.playerGameOver();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 检测被拾取的物体(Baby)是否被碰撞(拾取)</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BabyDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span> &amp;&amp; <span class=\"hljs-keyword\">this</span>.gameObject.activeSelf)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isFind&quot;</span>,<span class=\"hljs-literal\">true</span>);<br>            <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;BoxCollider&gt;().enabled = <span class=\"hljs-literal\">false</span>;<br>            Singleton&lt;GameEventManager&gt;.Instance.reduceBabyNum();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class=\"hljs-comment\">// 区域标志、检测玩家进入哪个区域</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AreaDetection</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> AreaID = <span class=\"hljs-number\">0</span>;<br>    FirstSceneController sceneController;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        sceneController = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> FirstSceneController;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnTriggerEnter</span>(<span class=\"hljs-params\">Collider collider</span>)</span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(collider.gameObject.tag == <span class=\"hljs-string\">&quot;Player&quot;</span>)&#123;<br>            sceneController.CurID = AreaID;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Actions部分\">Actions部分</h4>\n<p>这里只介绍巡逻动作的脚本。</p>\n<p><strong>Enemy Walk Action</strong></p>\n<p>​\t通过在矩形画凸多边形，在多边形上任意取点。多边形取点逻辑如下图所示。橙色边为给定的巡逻大范围。<strong>三角形</strong>则在紫色、绿色及黄色三条线段依次任取点；<strong>四边形</strong>则在紫色、绿色、黄色、蓝色四条线段上依次任取点；<strong>五边形</strong>则在紫色、绿色、右侧粉色、粉色定点、上方粉色，四条线段加一个定点依次取点。忽略边界的小概率实践，形成的轨迹就是指定的凸多边形。</p>\n<p><img src=\"../../../assets/game/1218/14.png\" alt=\"14\"></p>\n<p>​\t也许会留意到轨迹周围有一段留白，那是为了避免巡逻兵在指定轨迹上行走，碰上障碍物原地不动的情况设置的。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EnemyWalkAction</span> : <span class=\"hljs-title\">SSAction</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> kind = <span class=\"hljs-number\">4</span>;                           <span class=\"hljs-comment\">//  多边形边数</span><br>    <span class=\"hljs-comment\">// 运动范围为(areaDown,areaUp),(areaLeft,areaRight)</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaLeft = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaUp = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaRight = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> areaDown = <span class=\"hljs-number\">0</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">1.8f</span>;                 <span class=\"hljs-comment\">//  移动速度</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isReach = <span class=\"hljs-literal\">true</span>;                    <span class=\"hljs-comment\">//  是否到达目的地</span><br>    <span class=\"hljs-keyword\">private</span> EnemyData enemyData;                    <span class=\"hljs-comment\">//  Enemy数据</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;Vector3&gt; path = <span class=\"hljs-keyword\">new</span> List&lt;Vector3&gt;();   <span class=\"hljs-comment\">//存储路径点</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> curTar = <span class=\"hljs-number\">0</span>;     <span class=\"hljs-comment\">//  当前目标地索引</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-title\">EnemyWalkAction</span>()</span> &#123; &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> EnemyWalkAction <span class=\"hljs-title\">GetSSAction</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> k, Vector3 start, Vector3 lu, Vector3 rd</span>)</span><br>    &#123;<br>        EnemyWalkAction action = CreateInstance&lt;EnemyWalkAction&gt;();<br>        action.kind = k;<br>        action.areaLeft = lu.x;<br>        action.areaRight = rd.x;<br>        action.areaUp = lu.z;<br>        action.areaDown = rd.z;<br>        action.initPath();<br>        <br>        <span class=\"hljs-keyword\">return</span> action;<br>    &#125;<br>    <span class=\"hljs-function\">Vector3 <span class=\"hljs-title\">getPoint</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> left, <span class=\"hljs-built_in\">float</span> right, <span class=\"hljs-built_in\">float</span> down, <span class=\"hljs-built_in\">float</span> up</span>)</span>&#123;<br>        Vector3 res= <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>);<br>        <span class=\"hljs-keyword\">if</span>(left==right)&#123;    <span class=\"hljs-comment\">//竖线</span><br>            res.x = left;<br>            res.z = Random.Range(down,up); <br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(down==up)&#123;<br>            res.x = Random.Range(left,right);<br>            res.z = down;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            res.x = Random.Range(left,right);<br>            res.z = Random.Range(down,up);<br>        &#125;<br>        <span class=\"hljs-keyword\">return</span> res;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">initPath</span>()</span><br>    &#123;<br>        <span class=\"hljs-built_in\">float</span> midx = (areaLeft+areaRight)/<span class=\"hljs-number\">2</span>;<br>        <span class=\"hljs-built_in\">float</span> midz = (areaUp+areaDown)/<span class=\"hljs-number\">2</span>;<br>        path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaLeft+<span class=\"hljs-number\">2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaDown+<span class=\"hljs-number\">2f</span>));<br>        <span class=\"hljs-comment\">// 三角形</span><br>        <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">3</span>)&#123;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,midz,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>        <span class=\"hljs-comment\">// 四边形</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">4</span>)&#123;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>            path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>        <span class=\"hljs-comment\">// 五边形</span><br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(kind==<span class=\"hljs-number\">5</span>)&#123;<br>            <span class=\"hljs-built_in\">float</span> quax = (midx+areaRight)/<span class=\"hljs-number\">2</span>;<br>            <span class=\"hljs-built_in\">float</span> quaz = (midz+areaUp)/<span class=\"hljs-number\">2</span>;<br>            path.Add(getPoint(areaRight<span class=\"hljs-number\">-2f</span>,areaRight<span class=\"hljs-number\">-2f</span>,areaDown+<span class=\"hljs-number\">2f</span>,midz));<br>            path.Add(<span class=\"hljs-keyword\">new</span> Vector3(quax,<span class=\"hljs-number\">0</span>,quaz));<br>            path.Add(getPoint(areaLeft+<span class=\"hljs-number\">2f</span>,midx,areaUp<span class=\"hljs-number\">-2f</span>,areaUp<span class=\"hljs-number\">-2f</span>));<br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">goPatrol</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(isReach)&#123;<br>            curTar ++;<br>            curTar %= kind;<br>            isReach = <span class=\"hljs-literal\">false</span>;<br>        &#125;<br>        <span class=\"hljs-keyword\">this</span>.transform.LookAt(path[curTar]);<br>        <span class=\"hljs-comment\">// 只要很接近地点就相当于到了</span><br>        <span class=\"hljs-built_in\">float</span> distance = Vector3.Distance(transform.position, path[curTar]);<br>        <span class=\"hljs-keyword\">if</span> (distance &gt; <span class=\"hljs-number\">0.9</span>)<br>        &#123;<br>            transform.position = Vector3.MoveTowards(<span class=\"hljs-keyword\">this</span>.transform.position, path[curTar], moveSpeed * Time.deltaTime);<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span>&#123;<br>            isReach = <span class=\"hljs-literal\">true</span>;<br>        &#125;<br>    &#125;<br>    <br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">// 巡逻移动</span><br>        goPatrol();<br>        <span class=\"hljs-comment\">// 如果巡逻兵需要跟随玩家并且玩家就在巡逻兵所在的区域，巡逻动作停止</span><br>        <span class=\"hljs-keyword\">if</span> (enemyData.isFollow &amp;&amp; enemyData.CurID == enemyData.AreaID)<br>        &#123;<br>            <span class=\"hljs-keyword\">this</span>.destroy = <span class=\"hljs-literal\">true</span>;<br>            <span class=\"hljs-keyword\">this</span>.callback.SSActionEvent(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-keyword\">this</span>.gameObject);<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">override</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>        enemyData = <span class=\"hljs-keyword\">this</span>.gameObject.GetComponent&lt;EnemyData&gt;();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<h4 id=\"Controllers部分\">Controllers部分</h4>\n<p><strong>First Scene Controller</strong></p>\n<p>简单讲一下场景控制器。实现了消息订阅，实现了用户动作接口和场景动作接口。其中，有一个需要注意的点是 Restart 使用了<code>SceneManager.LoadScene();</code>，可以加载指定场景，比较方便。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FirstSceneController</span> : <span class=\"hljs-title\">MonoBehaviour</span>, <span class=\"hljs-title\">IUserAction</span>, <span class=\"hljs-title\">ISceneController</span><br>&#123;<br>    <span class=\"hljs-keyword\">public</span> PropFactory factory;                              <span class=\"hljs-comment\">// Enemy和Baby工厂</span><br>    <span class=\"hljs-keyword\">public</span> ScoreController scoreController;                  <span class=\"hljs-comment\">// 记分员</span><br>    <span class=\"hljs-keyword\">public</span> EnemyActionManager manager;                       <span class=\"hljs-comment\">// 运动管理器</span><br>    <span class=\"hljs-keyword\">public</span> myUserGUI userGUI;                                <span class=\"hljs-comment\">// 用户界面</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> CurID = <span class=\"hljs-number\">-1</span>;                                   <span class=\"hljs-comment\">// 当前玩家所于检测区域的序号</span><br>    <span class=\"hljs-keyword\">public</span> GameObject player;                                <span class=\"hljs-comment\">// 玩家</span><br>    <span class=\"hljs-keyword\">public</span> Camera cam;                                       <span class=\"hljs-comment\">// 主相机</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> moveSpeed = <span class=\"hljs-number\">5</span>;                              <span class=\"hljs-comment\">// 玩家移动速度</span><br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">float</span> rotateSpeed = <span class=\"hljs-number\">250f</span>;                         <span class=\"hljs-comment\">// 玩家旋转速度</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;GameObject&gt; enemies;                        <span class=\"hljs-comment\">// 场景中Enemy列表</span><br>    <span class=\"hljs-keyword\">private</span> List&lt;GameObject&gt; babies;                         <span class=\"hljs-comment\">// 场景Baby列表</span><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isGameOver = <span class=\"hljs-literal\">false</span>;                         <span class=\"hljs-comment\">// 游戏是否结束</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; enemies.Count; i++)<br>        &#123;<br>            enemies[i].gameObject.GetComponent&lt;EnemyData&gt;().CurID = CurID;<br>        &#125;<br>        <span class=\"hljs-comment\">// Baby收集完毕</span><br>        <span class=\"hljs-keyword\">if</span>(scoreController.getBabyNum() == <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GameOver();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span>()</span><br>    &#123;<br>        Director director = Director.getInstance();<br>        director.currentSceneController = <span class=\"hljs-keyword\">this</span>;<br>        gameObject.AddComponent&lt;PropFactory&gt;();<br>        factory = Singleton&lt;PropFactory&gt;.Instance;<br>        manager = gameObject.AddComponent&lt;EnemyActionManager&gt;() <span class=\"hljs-keyword\">as</span> EnemyActionManager;<br>        scoreController = gameObject.AddComponent&lt;ScoreController&gt;() <span class=\"hljs-keyword\">as</span> ScoreController;<br>        userGUI = gameObject.AddComponent&lt;myUserGUI&gt;() <span class=\"hljs-keyword\">as</span> myUserGUI;<br>        LoadResource();<br>        cam.GetComponent&lt;CameraFlow&gt;().target = player;<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">LoadResource</span>()</span><br>    &#123;<br>        Instantiate(Resources.Load&lt;GameObject&gt;(<span class=\"hljs-string\">&quot;Prefabs/Map&quot;</span>));<br>        player = Instantiate(Resources.Load(<span class=\"hljs-string\">&quot;Prefabs/Player&quot;</span>), <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), Quaternion.identity) <span class=\"hljs-keyword\">as</span> GameObject;<br>        babies = factory.getBabies();<br>        enemies = factory.getEnemies();<br><br>        <span class=\"hljs-comment\">// 所有巡逻兵移动</span><br>        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; enemies.Count; i++)<br>        &#123;<br>            manager.Walk(enemies[i]);<br>        &#125;<br>    &#125;<br><br><br>    <span class=\"hljs-comment\">// 玩家移动</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">movePlayer</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">float</span> tranX, <span class=\"hljs-built_in\">float</span> tranZ, <span class=\"hljs-built_in\">bool</span> isShift</span>)</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span>(!isGameOver)<br>        &#123;<br>            <span class=\"hljs-keyword\">if</span> (tranX != <span class=\"hljs-number\">0</span> || tranZ != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>                <span class=\"hljs-comment\">// 如果shift加速</span><br>                <span class=\"hljs-keyword\">if</span> (isShift)&#123;<br>                    player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isRun&quot;</span>, <span class=\"hljs-literal\">true</span>);<br>                    moveSpeed = <span class=\"hljs-number\">10</span>;<br>                &#125;<br>                <span class=\"hljs-keyword\">else</span>&#123;<br>                    player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isRun&quot;</span>, <span class=\"hljs-literal\">false</span>);<br>                    moveSpeed = <span class=\"hljs-number\">5</span>;<br>                &#125;<br>            &#125;<br>            <span class=\"hljs-keyword\">else</span><br>            &#123;<br>                player.GetComponent&lt;Animator&gt;().SetBool(<span class=\"hljs-string\">&quot;isWalk&quot;</span>, <span class=\"hljs-literal\">false</span>);<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>            <span class=\"hljs-comment\">// 移动和旋转</span><br>            player.transform.Translate(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, tranZ * moveSpeed * Time.deltaTime);<br>            player.transform.Rotate(<span class=\"hljs-number\">0</span>, tranX * rotateSpeed * Time.deltaTime, <span class=\"hljs-number\">0</span>);<br><br>            <span class=\"hljs-comment\">// 防止碰撞带来的移动</span><br>            <span class=\"hljs-keyword\">if</span> (player.transform.localEulerAngles.x != <span class=\"hljs-number\">0</span> || player.transform.localEulerAngles.z != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.transform.localEulerAngles = <span class=\"hljs-keyword\">new</span> Vector3(<span class=\"hljs-number\">0</span>, player.transform.localEulerAngles.y, <span class=\"hljs-number\">0</span>);<br>            &#125;<br>            <span class=\"hljs-keyword\">if</span> (player.transform.position.y != <span class=\"hljs-number\">0</span>)<br>            &#123;<br>                player.transform.position = <span class=\"hljs-keyword\">new</span> Vector3(player.transform.position.x, <span class=\"hljs-number\">0</span>, player.transform.position.z);<br>            &#125;     <br>        &#125;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getScore</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.getScore();<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">getBabyNum</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> scoreController.getBabyNum();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">getGameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">return</span> isGameOver;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Restart</span>()</span><br>    &#123;<br>        SceneManager.LoadScene(<span class=\"hljs-string\">&quot;Scenes/startScene&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnEnable</span>()</span><br>    &#123;<br>        GameEventManager.scoreChange += addScore;<br>        GameEventManager.gameOverChange += GameOver;<br>        GameEventManager.babyChange += reduceBabyNum;<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnDisable</span>()</span><br>    &#123;<br>        GameEventManager.scoreChange -= addScore;<br>        GameEventManager.gameOverChange -= GameOver;<br>        GameEventManager.babyChange -= reduceBabyNum;<br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reduceBabyNum</span>()</span><br>    &#123;<br>        scoreController.reduceBaby();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">addScore</span>()</span><br>    &#123;<br>        scoreController.addScore();<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">GameOver</span>()</span><br>    &#123;<br>        isGameOver = <span class=\"hljs-literal\">true</span>;<br>        factory.stopEnemies();<br>        manager.DestroyAllAction();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"Others部分\">Others部分</h4>\n<p><strong>Game Event Manager</strong></p>\n<p>订阅/发布模式（又叫观察者模式，事件-代理机制 ， 事件的代理模型）。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GameEventManager</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-comment\">//  分数变化</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">ScoreEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> ScoreEvent scoreChange;<br>    <span class=\"hljs-comment\">//  游戏结束</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">GameOverEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> GameOverEvent gameOverChange;<br>    <span class=\"hljs-comment\">//  Baby数量</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">delegate</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">BabyEvent</span>()</span>;<br>    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">event</span> BabyEvent babyChange;<br><br>    <span class=\"hljs-comment\">//  分数变化</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">playerEscape</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (scoreChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            scoreChange();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//  游戏结束</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">playerGameOver</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (gameOverChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            gameOverChange();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//  Baby数量</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">reduceBabyNum</span>()</span><br>    &#123;<br>        <span class=\"hljs-keyword\">if</span> (babyChange != <span class=\"hljs-literal\">null</span>)<br>        &#123;<br>            babyChange();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>delegate</code>关键字定义了函数类型<code>ScoreEvent</code>、<code>GameOverEvent</code>、<code>BabyEvent</code>等的代理类型。静态变量scoreChange、gameOverChange、babyChange就是相应的“被订阅的主题”。</p>\n<p>如下图 FirstSceneController 里的调用，+= 部分表示左边的函数一被调用，就会通知<strong>所有</strong>带有右边函数的对象要进行调用右边的函数，相当于右边订阅了左边。而 -= 就代表取消订阅了。</p>\n<p>这里的<code>playerEscape()</code>等函数是一个接口，当调用时，就在告诉记分员要计分<code>addScore()</code>了。</p>\n<p><img src=\"../../../assets/game/1218/15.png\" alt=\"15\"></p>\n<h4 id=\"Views部分\">Views部分</h4>\n<p><strong>myUserGUI</strong></p>\n<p>用户界面，也是大同小异。</p>\n<p>这里主要是为了提到一个悬浮提示的小制作。格式如下，其中<code>tipStyle</code>为可选</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\">GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> GUIContent(<span class=\"hljs-string\">&quot;提示&quot;</span>, <span class=\"hljs-string\">&quot;提示内容&quot;</span>));<br>GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>), GUI.tooltip[, tipStyle]);<br></code></pre></td></tr></table></figure>\n<p>第一次知道，IMGUI里的内容可以使用 <code>\\n</code> 来换行。</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c#\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">myUserGUI</span> : <span class=\"hljs-title\">MonoBehaviour</span><br>&#123;<br>    <span class=\"hljs-keyword\">private</span> IUserAction action;<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreNumStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreTextStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle scoreShadowStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle titleStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle shadowStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br>    <span class=\"hljs-keyword\">private</span> GUIStyle tipStyle = <span class=\"hljs-keyword\">new</span> GUIStyle();<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Start</span> ()</span><br>    &#123;<br>        action = Director.getInstance().currentSceneController <span class=\"hljs-keyword\">as</span> IUserAction;<br>        scoreNumStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.92f</span>,<span class=\"hljs-number\">0.016f</span>,<span class=\"hljs-number\">1</span>);<br>        scoreNumStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        scoreTextStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>);<br>        scoreTextStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        scoreShadowStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.4f</span>);<br>        scoreShadowStyle.fontSize = <span class=\"hljs-number\">30</span>;<br>        titleStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.47F</span>,<span class=\"hljs-number\">0.4F</span>,<span class=\"hljs-number\">0.93F</span>,<span class=\"hljs-number\">1</span>);<br>        titleStyle.fontSize = <span class=\"hljs-number\">40</span>;<br>        shadowStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0.5f</span>);<br>        shadowStyle.fontSize = <span class=\"hljs-number\">40</span>;<br>        tipStyle.normal.textColor = <span class=\"hljs-keyword\">new</span> Color(<span class=\"hljs-number\">0.54f</span>,<span class=\"hljs-number\">0.27f</span>,<span class=\"hljs-number\">0.04f</span>,<span class=\"hljs-number\">1</span>);<br>        tipStyle.fontSize = <span class=\"hljs-number\">18</span>;<br>        <br>    &#125;<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Update</span>()</span><br>    &#123;<br>        <span class=\"hljs-comment\">//获取方向键的偏移量</span><br>        <span class=\"hljs-built_in\">float</span> tranX = Input.GetAxis(<span class=\"hljs-string\">&quot;Horizontal&quot;</span>);<br>        <span class=\"hljs-built_in\">float</span> tranZ = Input.GetAxis(<span class=\"hljs-string\">&quot;Vertical&quot;</span>);<br>        <span class=\"hljs-built_in\">bool</span> isShift = Input.GetKey(KeyCode.LeftShift);<br>        <span class=\"hljs-comment\">//移动玩家</span><br>        action.movePlayer(tranX, tranZ, isShift);<br>    &#125;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">OnGUI</span>()</span><br>    &#123;<br>        GUI.skin.button.fontSize = <span class=\"hljs-number\">20</span>;<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;分数:&quot;</span>, scoreTextStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;分数:&quot;</span>, scoreShadowStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(<span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), action.getScore().ToString(), scoreNumStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">245</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;剩余小狐狸数:&quot;</span>, scoreTextStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">246</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;剩余小狐狸数:&quot;</span>, scoreShadowStyle);<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width - <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>), action.getBabyNum().ToString(), scoreNumStyle);<br>        <span class=\"hljs-keyword\">if</span>(action.getGameOver() &amp;&amp; action.getBabyNum() != <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;游戏结束&quot;</span>, titleStyle);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">78</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">98</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;游戏结束&quot;</span>, shadowStyle);<br>            <span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span>, Screen.height / <span class=\"hljs-number\">2</span> , <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;重新开始&quot;</span>))<br>            &#123;<br>                action.Restart();<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(action.getBabyNum() &lt;= <span class=\"hljs-number\">0</span>)<br>        &#123;<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;恭喜胜利&quot;</span>, titleStyle);<br>            GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">78</span>, Screen.height / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">98</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-string\">&quot;恭喜胜利&quot;</span>, shadowStyle);<br>            <span class=\"hljs-keyword\">if</span> (GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span>, Screen.height / <span class=\"hljs-number\">2</span> , <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-string\">&quot;重新开始&quot;</span>))<br>            &#123;<br>                action.Restart();<br>                <span class=\"hljs-keyword\">return</span>;<br>            &#125;<br>        &#125;<br><br>        GUI.Button(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">50</span> ,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>), <span class=\"hljs-keyword\">new</span> GUIContent(<span class=\"hljs-string\">&quot;提示规则&quot;</span>, <span class=\"hljs-string\">&quot;按WSAD或方向键移动\\n按左Shift键进行加速\\n成功躲避猛兽追捕加1分\\n找到所有小狐狸即可获胜\\n鼠标右键实现视角转动&quot;</span>));<br>        GUI.Label(<span class=\"hljs-keyword\">new</span> Rect(Screen.width / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">80</span> ,<span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">120</span>), GUI.tooltip, tipStyle);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>\n<h3 id=\"小结\">小结</h3>\n<ul>\n<li>\n<p>学会了动画控制器的使用；</p>\n</li>\n<li>\n<p>理解了订阅/发布模式；</p>\n</li>\n<li>\n<p>了解到了碰撞抖动、IMGUI的悬浮提示做法等。</p>\n</li>\n<li>\n<p>Player与一个被拾取物体的碰撞按道理只会触发一次。碰撞很偶尔会出现两次的情况，没有解决这个bug。</p>\n</li>\n<li>\n<p>巡逻兵没有加变速功能，且探测范围设置较小，游戏难度比较低。</p>\n</li>\n</ul>\n<blockquote>\n<p>2022.12.19\t\t\tCauchy.</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"clhudj1f700067g84dabo7fjm","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fc000c7g84ca6abmcx"},{"post_id":"clhudj1ex00017g845uw88an5","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fc000g7g84ciq6aa1d"},{"post_id":"clhudj1f800077g846sb1hhyr","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fd000h7g84cjtjhoh2"},{"post_id":"clhudj1fb000b7g84bafo9u51","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fd000j7g84697i6ufb"},{"post_id":"clhudj1f200027g848xoydtle","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fd000l7g842fi6hch8"},{"post_id":"clhudj1f600057g84bkia6yn5","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fe000o7g8409twgv6s"},{"post_id":"clhudj1fh000z7g844sce1uhl","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fj00127g845evce8uy"},{"post_id":"clhudj1fi00107g847n2m1bfo","category_id":"clhudj1f400037g846v3t3w5r","_id":"clhudj1fj00137g84fg9o8hsc"}],"PostTag":[{"post_id":"clhudj1ex00017g845uw88an5","tag_id":"clhudj1f600047g8487xbfj3k","_id":"clhudj1fa000a7g849fsk1i3j"},{"post_id":"clhudj1fb000b7g84bafo9u51","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fc000f7g8489e82w8h"},{"post_id":"clhudj1f200027g848xoydtle","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fd000k7g843vt71shp"},{"post_id":"clhudj1f200027g848xoydtle","tag_id":"clhudj1fc000e7g840utg8h8i","_id":"clhudj1fd000m7g847xpbeoxz"},{"post_id":"clhudj1f600057g84bkia6yn5","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fe000q7g845oll8onx"},{"post_id":"clhudj1f600057g84bkia6yn5","tag_id":"clhudj1fd000n7g847ayi8rm9","_id":"clhudj1fe000r7g84ef9cb3ke"},{"post_id":"clhudj1f700067g84dabo7fjm","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1ff000u7g84gke539sh"},{"post_id":"clhudj1f700067g84dabo7fjm","tag_id":"clhudj1fe000s7g84fnbyb3t4","_id":"clhudj1ff000v7g84960sbr5q"},{"post_id":"clhudj1f800077g846sb1hhyr","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fg000x7g847jupfhd7"},{"post_id":"clhudj1f800077g846sb1hhyr","tag_id":"clhudj1ff000w7g84fnspgt65","_id":"clhudj1fg000y7g8469cg6aus"},{"post_id":"clhudj1fh000z7g844sce1uhl","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fk00157g84hidpa3f4"},{"post_id":"clhudj1fh000z7g844sce1uhl","tag_id":"clhudj1fj00117g845er2fa0o","_id":"clhudj1fk00167g84dl9reqvs"},{"post_id":"clhudj1fi00107g847n2m1bfo","tag_id":"clhudj1f900097g843wo4bnox","_id":"clhudj1fk00177g844sbs9xyp"},{"post_id":"clhudj1fi00107g847n2m1bfo","tag_id":"clhudj1fj00147g8472s91yud","_id":"clhudj1fk00187g841qvc1bh2"}],"Tag":[{"name":"serious game","_id":"clhudj1f600047g8487xbfj3k"},{"name":"unity","_id":"clhudj1f900097g843wo4bnox"},{"name":"particle","_id":"clhudj1fc000e7g840utg8h8i"},{"name":"MVC","_id":"clhudj1fd000n7g847ayi8rm9"},{"name":"IMGUI","_id":"clhudj1fe000s7g84fnbyb3t4"},{"name":"singleton","_id":"clhudj1ff000w7g84fnspgt65"},{"name":"rigidbody","_id":"clhudj1fj00117g845er2fa0o"},{"name":"animator","_id":"clhudj1fj00147g8472s91yud"}]}}